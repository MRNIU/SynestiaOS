!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALL_KERNEL_HEAP_MEM_SIZE	Kernel/src/kheap.c	/^#define ALL_KERNEL_HEAP_MEM_SIZE /;"	d	file:
ALL_PHYSICAL_MEM_SIZE	Kernel/src/kheap.c	/^#define ALL_PHYSICAL_MEM_SIZE /;"	d	file:
ANIMATION_ROTATE	Libraries/LibGUI/include/gui_animation.h	/^  ANIMATION_ROTATE,$/;"	e	enum:GUIAnimationType
ANIMATION_TRANSLATION	Libraries/LibGUI/include/gui_animation.h	/^  ANIMATION_TRANSLATION,$/;"	e	enum:GUIAnimationType
ARM_INTERRUPT_REGISTER_BASE	Kernel/include/interrupt.h	/^#define ARM_INTERRUPT_REGISTER_BASE /;"	d
ASSERT_EQ	Tests/include/tests_lib.h	/^#define ASSERT_EQ(/;"	d
ASSERT_EQ_FLOAT	Tests/include/tests_lib.h	/^#define ASSERT_EQ_FLOAT(/;"	d
ASSERT_FALSE	Tests/include/tests_lib.h	/^#define ASSERT_FALSE(/;"	d
ASSERT_NEQ	Tests/include/tests_lib.h	/^#define ASSERT_NEQ(/;"	d
ASSERT_TRUE	Tests/include/tests_lib.h	/^#define ASSERT_TRUE(/;"	d
Atomic	Kernel/include/atomic.h	/^typedef struct Atomic {$/;"	s
Atomic	Kernel/include/atomic.h	/^} Atomic;$/;"	t	typeref:struct:Atomic
B	Kernel/include/type.h	/^#define B /;"	d
BITS_IN_UINT32	Kernel/include/type.h	/^#define BITS_IN_UINT32 /;"	d
BUS_ADDRESS	Board/RaspberryPi/include/raspi.h	/^#define BUS_ADDRESS(/;"	d
BUTTON	Libraries/LibGUI/include/gui_component.h	/^  BUTTON,$/;"	e	enum:ComponentType
Barrier	Kernel/include/barrier.h	/^typedef struct Barrier {$/;"	s
CANVAS	Libraries/LibGUI/include/gui_component.h	/^  CANVAS,$/;"	e	enum:ComponentType
CHAR_HEIGHT	Board/RaspberryPi/include/gpu.h	/^#define CHAR_HEIGHT /;"	d
CHAR_WIDTH	Board/RaspberryPi/include/gpu.h	/^#define CHAR_WIDTH /;"	d
CLOCK_ID_ARM	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_ARM /;"	d
CLOCK_ID_CORE	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_CORE /;"	d
CLOCK_ID_EMMC	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_EMMC /;"	d
CLOCK_ID_EMMC2	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_EMMC2 /;"	d
CLOCK_ID_H264	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_H264 /;"	d
CLOCK_ID_HEVC	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_HEVC /;"	d
CLOCK_ID_ISP	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_ISP /;"	d
CLOCK_ID_M2MC	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_M2MC /;"	d
CLOCK_ID_PIXEL	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_PIXEL /;"	d
CLOCK_ID_PIXEL_BVB	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_PIXEL_BVB /;"	d
CLOCK_ID_PWM	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_PWM /;"	d
CLOCK_ID_SDRAM	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_SDRAM /;"	d
CLOCK_ID_UART	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_UART /;"	d
CLOCK_ID_V3D	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_V3D /;"	d
CLOCK_ID_reserved	Board/RaspberryPi/include/mailbox.h	/^#define CLOCK_ID_reserved /;"	d
CODE_REQUEST	Board/RaspberryPi/include/mailbox.h	/^#define CODE_REQUEST /;"	d
CODE_RESPONSE_FAILURE	Board/RaspberryPi/include/mailbox.h	/^#define CODE_RESPONSE_FAILURE /;"	d
CODE_RESPONSE_SUCCESS	Board/RaspberryPi/include/mailbox.h	/^#define CODE_RESPONSE_SUCCESS /;"	d
CONFIG_ARM_LPAE	Kernel/Arch/arm/vmm/include/cache.h	/^#define CONFIG_ARM_LPAE /;"	d
CONTAINER	Libraries/LibGUI/include/gui_component.h	/^  CONTAINER,$/;"	e	enum:ComponentType
CORE0_IRQ_SOURCE	Board/RaspberryPi/include/timer.h	/^#define CORE0_IRQ_SOURCE /;"	d
CORE0_TIMER_IRQCNTL	Board/RaspberryPi/include/timer.h	/^#define CORE0_TIMER_IRQCNTL /;"	d
CPU	Kernel/include/thread.h	/^typedef enum CPU {$/;"	g
CPU	Kernel/include/thread.h	/^} CPU;$/;"	t	typeref:enum:CPU
CPU_0	Kernel/include/thread.h	/^  CPU_0 = 0,$/;"	e	enum:CPU
CPU_1	Kernel/include/thread.h	/^  CPU_1,$/;"	e	enum:CPU
CPU_10	Kernel/include/thread.h	/^  CPU_10,$/;"	e	enum:CPU
CPU_11	Kernel/include/thread.h	/^  CPU_11,$/;"	e	enum:CPU
CPU_12	Kernel/include/thread.h	/^  CPU_12,$/;"	e	enum:CPU
CPU_13	Kernel/include/thread.h	/^  CPU_13,$/;"	e	enum:CPU
CPU_14	Kernel/include/thread.h	/^  CPU_14,$/;"	e	enum:CPU
CPU_15	Kernel/include/thread.h	/^  CPU_15,$/;"	e	enum:CPU
CPU_2	Kernel/include/thread.h	/^  CPU_2,$/;"	e	enum:CPU
CPU_3	Kernel/include/thread.h	/^  CPU_3,$/;"	e	enum:CPU
CPU_4	Kernel/include/thread.h	/^  CPU_4,$/;"	e	enum:CPU
CPU_5	Kernel/include/thread.h	/^  CPU_5,$/;"	e	enum:CPU
CPU_6	Kernel/include/thread.h	/^  CPU_6,$/;"	e	enum:CPU
CPU_7	Kernel/include/thread.h	/^  CPU_7,$/;"	e	enum:CPU
CPU_8	Kernel/include/thread.h	/^  CPU_8,$/;"	e	enum:CPU
CPU_9	Kernel/include/thread.h	/^  CPU_9,$/;"	e	enum:CPU
CPU_EXISTS_NUM	Kernel/include/percpu.h	/^#define CPU_EXISTS_NUM /;"	d
Color	Libraries/LibGUI/include/gui_component.h	/^typedef struct Color {$/;"	s
Color	Libraries/LibGUI/include/gui_component.h	/^} Color;$/;"	t	typeref:struct:Color
ColorMode	Libraries/LibGUI/include/gui_component.h	/^typedef enum ColorMode {$/;"	g
ColorMode	Libraries/LibGUI/include/gui_component.h	/^} ColorMode;$/;"	t	typeref:enum:ColorMode
ComponentType	Libraries/LibGUI/include/gui_component.h	/^typedef enum ComponentType {$/;"	g
ComponentType	Libraries/LibGUI/include/gui_component.h	/^} ComponentType;$/;"	t	typeref:enum:ComponentType
Console	Applications/Console/include/console.h	/^typedef struct Console {$/;"	s
Console	Applications/Console/include/console.h	/^} Console;$/;"	t	typeref:struct:Console
CpuContextSave	Kernel/include/thread.h	/^typedef struct CpuContextSave {$/;"	s
CpuContextSave	Kernel/include/thread.h	/^} __attribute__((packed)) CpuContextSave;$/;"	t	typeref:struct:CpuContextSave
CpuMask	Kernel/include/thread.h	/^typedef uint8_t CpuMask;$/;"	t
CpuNum	Kernel/include/thread.h	/^typedef uint8_t CpuNum;$/;"	t
CpuStatus	Kernel/include/percpu.h	/^typedef struct CpuStatus {$/;"	s
CpuStatus	Kernel/include/percpu.h	/^} CpuStatus;$/;"	t	typeref:struct:CpuStatus
DEFAULT_BAUD	Board/RaspberryPi/include/uart.h	/^#define DEFAULT_BAUD /;"	d
DEFAULT_CANVAS_HEIGHT	Libraries/LibGUI/include/gui_canvas.h	/^#define DEFAULT_CANVAS_HEIGHT /;"	d
DEFAULT_CANVAS_WIDTH	Libraries/LibGUI/include/gui_canvas.h	/^#define DEFAULT_CANVAS_WIDTH /;"	d
DEFAULT_CONTAINER_HEIGHT	Libraries/LibGUI/include/gui_container.h	/^#define DEFAULT_CONTAINER_HEIGHT /;"	d
DEFAULT_CONTAINER_WIDTH	Libraries/LibGUI/include/gui_container.h	/^#define DEFAULT_CONTAINER_WIDTH /;"	d
DEFAULT_FONT_SIZE	Libraries/LibGUI/include/gui_component.h	/^#define DEFAULT_FONT_SIZE /;"	d
DEFAULT_KERNEL_STACK_SIZE	Kernel/include/kstack.h	/^#define DEFAULT_KERNEL_STACK_SIZE /;"	d
DEFAULT_MARGIN	Libraries/LibGUI/include/gui_component.h	/^#define DEFAULT_MARGIN /;"	d
DEFAULT_PADDING	Libraries/LibGUI/include/gui_component.h	/^#define DEFAULT_PADDING /;"	d
DEFAULT_PANEL_HEIGHT	Libraries/LibGUI/include/gui_panel.h	/^#define DEFAULT_PANEL_HEIGHT /;"	d
DEFAULT_PANEL_WIDTH	Libraries/LibGUI/include/gui_panel.h	/^#define DEFAULT_PANEL_WIDTH /;"	d
DEFAULT_PRIORITY	Kernel/include/thread.h	/^#define DEFAULT_PRIORITY /;"	d
DEFAULT_STRING_LEN	Libraries/LibC/include/stdlib.h	/^#define DEFAULT_STRING_LEN /;"	d
DEFAULT_UART_CLK	Board/RaspberryPi/include/uart.h	/^#define DEFAULT_UART_CLK /;"	d
DEFAULT_VECTOR_SIZE	Kernel/include/kvector.h	/^#define DEFAULT_VECTOR_SIZE /;"	d
DEFAULT_VIEW3D_HEIGHT	Libraries/LibGUI/include/gui_view3d.h	/^#define DEFAULT_VIEW3D_HEIGHT /;"	d
DEFAULT_VIEW3D_WIDTH	Libraries/LibGUI/include/gui_view3d.h	/^#define DEFAULT_VIEW3D_WIDTH /;"	d
DEFAULT_WINDOW_HEADER_HEIGHT	Libraries/LibGUI/include/gui_component.h	/^#define DEFAULT_WINDOW_HEADER_HEIGHT /;"	d
DEFAULT_WINDOW_HEIGHT	Libraries/LibGUI/include/gui_window.h	/^#define DEFAULT_WINDOW_HEIGHT /;"	d
DEFAULT_WINDOW_WIDTH	Libraries/LibGUI/include/gui_window.h	/^#define DEFAULT_WINDOW_WIDTH /;"	d
DEVICE_ID_CCP2TX	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_CCP2TX /;"	d
DEVICE_ID_I2C0	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_I2C0 /;"	d
DEVICE_ID_I2C1	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_I2C1 /;"	d
DEVICE_ID_I2C2	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_I2C2 /;"	d
DEVICE_ID_SD_Card	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_SD_Card /;"	d
DEVICE_ID_SPI	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_SPI /;"	d
DEVICE_ID_UART0	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_UART0 /;"	d
DEVICE_ID_UART1	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_UART1 /;"	d
DEVICE_ID_USB_HCD	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_USB_HCD /;"	d
DEVICE_ID_Unknown1_RPi4	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_Unknown1_RPi4 /;"	d
DEVICE_ID_Unknown2_RPi4	Board/RaspberryPi/include/mailbox.h	/^#define DEVICE_ID_Unknown2_RPi4 /;"	d
DPC_PRIORITY	Kernel/include/thread.h	/^#define DPC_PRIORITY /;"	d
DirectoryEntry	Kernel/include/vfs_dentry.h	/^typedef struct DirectoryEntry {$/;"	s
DirectoryEntry	Kernel/include/vfs_dentry.h	/^} DirectoryEntry;$/;"	t	typeref:struct:DirectoryEntry
DirectoryEntryDeleteOperation	Kernel/include/vfs_dentry.h	/^typedef KernelStatus (*DirectoryEntryDeleteOperation)(struct DirectoryEntry *directory);$/;"	t
DirectoryEntryGetNameOperaction	Kernel/include/vfs_dentry.h	/^typedef char *(*DirectoryEntryGetNameOperaction)(struct DirectoryEntry *directoryEntry);$/;"	t
DirectoryEntryHashOperation	Kernel/include/vfs_dentry.h	/^typedef uint64_t (*DirectoryEntryHashOperation)(struct DirectoryEntry *directoryEntry, const char *name);$/;"	t
DirectoryEntryInitOperation	Kernel/include/vfs_dentry.h	/^typedef KernelStatus (*DirectoryEntryInitOperation)(struct DirectoryEntry *directory, struct DirectoryEntry *parent,$/;"	t
DirectoryEntryOperations	Kernel/include/vfs_dentry.h	/^typedef struct DirectoryEntryOperations {$/;"	s
DirectoryEntryOperations	Kernel/include/vfs_dentry.h	/^} DirectoryEntryOperations;$/;"	t	typeref:struct:DirectoryEntryOperations
DirectoryEntryReleaseOperation	Kernel/include/vfs_dentry.h	/^typedef KernelStatus (*DirectoryEntryReleaseOperation)(struct DirectoryEntry *directory);$/;"	t
Disable_Basic_IRQs	Kernel/include/interrupt.h	/^  volatile uint32_t Disable_Basic_IRQs;$/;"	m	struct:__anon4
Disable_IRQs_1	Kernel/include/interrupt.h	/^  volatile uint32_t Disable_IRQs_1;$/;"	m	struct:__anon4
Disable_IRQs_2	Kernel/include/interrupt.h	/^  volatile uint32_t Disable_IRQs_2;$/;"	m	struct:__anon4
EDIDBlock	Board/RaspberryPi/include/mailbox.h	/^  uint8_t EDIDBlock[128];$/;"	m	struct:PropertyGetEDIDBlock
ERROR	Kernel/include/type.h	/^  ERROR,$/;"	e	enum:KernelStatus
Enable_Basic_IRQs	Kernel/include/interrupt.h	/^  volatile uint32_t Enable_Basic_IRQs;$/;"	m	struct:__anon4
Enable_IRQs_1	Kernel/include/interrupt.h	/^  volatile uint32_t Enable_IRQs_1;$/;"	m	struct:__anon4
Enable_IRQs_2	Kernel/include/interrupt.h	/^  volatile uint32_t Enable_IRQs_2;$/;"	m	struct:__anon4
FILESYSTEM_FAT32	Kernel/include/vfs_super_block.h	/^  FILESYSTEM_FAT32,$/;"	e	enum:FileSystemType
FILE_SYSTEM_NAME_SIZE	Kernel/include/vfs_super_block.h	/^#define FILE_SYSTEM_NAME_SIZE /;"	d
FIQ_control	Kernel/include/interrupt.h	/^  volatile uint32_t FIQ_control;$/;"	m	struct:__anon4
FLUENT_PRIMARY_BACK_COLOR	Libraries/LibGfx/include/gfx2d.h	/^#define FLUENT_PRIMARY_BACK_COLOR /;"	d
FLUENT_PRIMARY_COLOR	Libraries/LibGfx/include/gfx2d.h	/^#define FLUENT_PRIMARY_COLOR /;"	d
FLUENT_PRIMARY_FORE_COLOR	Libraries/LibGfx/include/gfx2d.h	/^#define FLUENT_PRIMARY_FORE_COLOR /;"	d
FileSystemType	Kernel/include/vfs_super_block.h	/^typedef enum FileSystemType {$/;"	g
FileSystemType	Kernel/include/vfs_super_block.h	/^} FileSystemType;$/;"	t	typeref:enum:FileSystemType
GB	Kernel/include/type.h	/^#define GB /;"	d
GFX2D_BUFFER	Libraries/LibGfx/src/gfx2d.c	/^uint32_t GFX2D_BUFFER[1024 * 768] = {0xFF};$/;"	v
GL_CONSTANT_ATTENUATION	Libraries/LibGfx/include/gfx3d.h	/^#define GL_CONSTANT_ATTENUATION /;"	d
GL_LINEAR_ATTENUATION	Libraries/LibGfx/include/gfx3d.h	/^#define GL_LINEAR_ATTENUATION /;"	d
GL_QUADRATIC_ATTENUATION	Libraries/LibGfx/include/gfx3d.h	/^#define GL_QUADRATIC_ATTENUATION /;"	d
GPCLR0	Board/RaspberryPi/include/gpio.h	/^#define GPCLR0 /;"	d
GPCLR1	Board/RaspberryPi/include/gpio.h	/^#define GPCLR1 /;"	d
GPFSEL0	Board/RaspberryPi/include/gpio.h	/^#define GPFSEL0 /;"	d
GPFSEL1	Board/RaspberryPi/include/gpio.h	/^#define GPFSEL1 /;"	d
GPFSEL2	Board/RaspberryPi/include/gpio.h	/^#define GPFSEL2 /;"	d
GPFSEL3	Board/RaspberryPi/include/gpio.h	/^#define GPFSEL3 /;"	d
GPFSEL4	Board/RaspberryPi/include/gpio.h	/^#define GPFSEL4 /;"	d
GPIO_ALT0	Board/RaspberryPi/include/gpio.h	/^#define   GPIO_ALT0 /;"	d
GPIO_ALT1	Board/RaspberryPi/include/gpio.h	/^#define   GPIO_ALT1 /;"	d
GPIO_ALT2	Board/RaspberryPi/include/gpio.h	/^#define   GPIO_ALT2 /;"	d
GPIO_ALT3	Board/RaspberryPi/include/gpio.h	/^#define   GPIO_ALT3 /;"	d
GPIO_ALT4	Board/RaspberryPi/include/gpio.h	/^#define   GPIO_ALT4 /;"	d
GPIO_ALT5	Board/RaspberryPi/include/gpio.h	/^#define   GPIO_ALT5 /;"	d
GPIO_BASE	Board/RaspberryPi/include/gpio.h	/^#define GPIO_BASE /;"	d
GPIO_INPUT	Board/RaspberryPi/include/gpio.h	/^#define   GPIO_INPUT /;"	d
GPIO_OFFSET	Board/RaspberryPi/include/raspi.h	/^#define GPIO_OFFSET /;"	d
GPIO_OUTPUT	Board/RaspberryPi/include/gpio.h	/^#define   GPIO_OUTPUT /;"	d
GPPUD	Board/RaspberryPi/include/gpio.h	/^#define GPPUD /;"	d
GPPUDCLK0	Board/RaspberryPi/include/gpio.h	/^#define GPPUDCLK0 /;"	d
GPPUDCLK1	Board/RaspberryPi/include/gpio.h	/^#define GPPUDCLK1 /;"	d
GPPUD_OFF	Board/RaspberryPi/include/gpio.h	/^#define   GPPUD_OFF /;"	d
GPPUD_PULL_DOWN	Board/RaspberryPi/include/gpio.h	/^#define   GPPUD_PULL_DOWN /;"	d
GPPUD_PULL_UP	Board/RaspberryPi/include/gpio.h	/^#define   GPPUD_PULL_UP /;"	d
GPSET0	Board/RaspberryPi/include/gpio.h	/^#define GPSET0 /;"	d
GPSET1	Board/RaspberryPi/include/gpio.h	/^#define GPSET1 /;"	d
GPU_IO_BASE	Board/RaspberryPi/include/raspi.h	/^#define GPU_IO_BASE /;"	d
GPU_MEM_BASE	Board/RaspberryPi/include/raspi.h	/^#define GPU_MEM_BASE /;"	d
GPU_UNCACHED_BASE	Board/RaspberryPi/include/raspi.h	/^#define GPU_UNCACHED_BASE /;"	d
GUIAnimation	Libraries/LibGUI/include/gui_animation.h	/^typedef struct GUIAnimation {$/;"	s
GUIAnimation	Libraries/LibGUI/include/gui_animation.h	/^} GUIAnimation;$/;"	t	typeref:struct:GUIAnimation
GUIAnimationRotateX	Libraries/LibGUI/include/gui_animation.h	/^typedef struct GUIAnimationRotateX {$/;"	s
GUIAnimationRotateX	Libraries/LibGUI/include/gui_animation.h	/^} GUIAnimationRotateX;$/;"	t	typeref:struct:GUIAnimationRotateX
GUIAnimationTranslation	Libraries/LibGUI/include/gui_animation.h	/^typedef struct GUIAnimationTranslation {$/;"	s
GUIAnimationTranslation	Libraries/LibGUI/include/gui_animation.h	/^} GUIAnimationTranslation;$/;"	t	typeref:struct:GUIAnimationTranslation
GUIAnimationType	Libraries/LibGUI/include/gui_animation.h	/^typedef enum GUIAnimationType {$/;"	g
GUIAnimationType	Libraries/LibGUI/include/gui_animation.h	/^} GUIAnimationType;$/;"	t	typeref:enum:GUIAnimationType
GUIButton	Libraries/LibGUI/include/gui_button.h	/^typedef struct GUIButton {$/;"	s
GUIButton	Libraries/LibGUI/include/gui_button.h	/^} GUIButton;$/;"	t	typeref:struct:GUIButton
GUICanvas	Libraries/LibGUI/include/gui_canvas.h	/^typedef struct GUICanvas {$/;"	s
GUICanvas	Libraries/LibGUI/include/gui_canvas.h	/^} GUICanvas;$/;"	t	typeref:struct:GUICanvas
GUIComponent	Libraries/LibGUI/include/gui_component.h	/^typedef struct GUIComponent {$/;"	s
GUIComponent	Libraries/LibGUI/include/gui_component.h	/^} GUIComponent;$/;"	t	typeref:struct:GUIComponent
GUIContainer	Libraries/LibGUI/include/gui_container.h	/^typedef struct GUIContainer {$/;"	s
GUIContainer	Libraries/LibGUI/include/gui_container.h	/^} GUIContainer;$/;"	t	typeref:struct:GUIContainer
GUILabel	Libraries/LibGUI/include/gui_label.h	/^typedef struct GUILabel {$/;"	s
GUILabel	Libraries/LibGUI/include/gui_label.h	/^} GUILabel;$/;"	t	typeref:struct:GUILabel
GUIPanel	Libraries/LibGUI/include/gui_panel.h	/^typedef struct GUIPanel {$/;"	s
GUIPanel	Libraries/LibGUI/include/gui_panel.h	/^} GUIPanel;$/;"	t	typeref:struct:GUIPanel
GUIView3D	Libraries/LibGUI/include/gui_view3d.h	/^typedef struct GUIView3D {$/;"	s
GUIView3D	Libraries/LibGUI/include/gui_view3d.h	/^} GUIView3D;$/;"	t	typeref:struct:GUIView3D
GUIWindow	Libraries/LibGUI/include/gui_window.h	/^typedef struct GUIWindow {$/;"	s
GUIWindow	Libraries/LibGUI/include/gui_window.h	/^} GUIWindow;$/;"	t	typeref:struct:GUIWindow
Gfx2DContext	Libraries/LibGfx/include/gfx2d.h	/^typedef struct Gfx2DContext {$/;"	s
Gfx2DContext	Libraries/LibGfx/include/gfx2d.h	/^} Gfx2DContext;$/;"	t	typeref:struct:Gfx2DContext
HIGHEST_PRIORITY	Kernel/include/thread.h	/^#define HIGHEST_PRIORITY /;"	d
HIGH_PRIORITY	Kernel/include/thread.h	/^#define HIGH_PRIORITY /;"	d
HORIZONTAL	Libraries/LibGUI/include/gui_container.h	/^  HORIZONTAL,$/;"	e	enum:Orientation
HeapArea	Kernel/include/kheap.h	/^typedef struct HeapArea {$/;"	s
HeapArea	Kernel/include/kheap.h	/^} __attribute__((packed)) HeapArea;$/;"	t	typeref:struct:HeapArea
IDLE_PRIORITY	Kernel/include/thread.h	/^#define IDLE_PRIORITY /;"	d
INDEX_NODE_DIRECTORY	Kernel/include/vfs_inode.h	/^  INDEX_NODE_DIRECTORY,$/;"	e	enum:IndexNodeType
INDEX_NODE_FILE	Kernel/include/vfs_inode.h	/^  INDEX_NODE_FILE,$/;"	e	enum:IndexNodeType
INTERRUPTS_OFFSET	Board/RaspberryPi/include/raspi.h	/^#define INTERRUPTS_OFFSET /;"	d
INVALID_CPU	Kernel/include/thread.h	/^  INVALID_CPU = 255,$/;"	e	enum:CPU
IRQ_IS_BASIC	Kernel/src/interrupt.c	/^#define IRQ_IS_BASIC(/;"	d	file:
IRQ_IS_GPU1	Kernel/src/interrupt.c	/^#define IRQ_IS_GPU1(/;"	d	file:
IRQ_IS_GPU2	Kernel/src/interrupt.c	/^#define IRQ_IS_GPU2(/;"	d	file:
IRQ_IS_PENDING	Kernel/src/interrupt.c	/^#define IRQ_IS_PENDING(/;"	d	file:
IRQ_NUMS	Kernel/src/interrupt.c	/^#define IRQ_NUMS /;"	d	file:
IRQ_basic_pending	Kernel/include/interrupt.h	/^  volatile uint32_t IRQ_basic_pending;$/;"	m	struct:__anon4
IRQ_pending_1	Kernel/include/interrupt.h	/^  volatile uint32_t IRQ_pending_1;$/;"	m	struct:__anon4
IRQ_pending_2	Kernel/include/interrupt.h	/^  volatile uint32_t IRQ_pending_2;$/;"	m	struct:__anon4
IndexNode	Kernel/include/vfs_inode.h	/^typedef struct IndexNode {$/;"	s
IndexNode	Kernel/include/vfs_inode.h	/^} IndexNode;$/;"	t	typeref:struct:IndexNode
IndexNodeCreateOperation	Kernel/include/vfs_inode.h	/^typedef KernelStatus (*IndexNodeCreateOperation)(struct IndexNode *indexNode);$/;"	t
IndexNodeDeleteOperation	Kernel/include/vfs_inode.h	/^typedef KernelStatus (*IndexNodeDeleteOperation)(struct IndexNode *indexNode);$/;"	t
IndexNodeHardLinkOperation	Kernel/include/vfs_inode.h	/^typedef KernelStatus (*IndexNodeHardLinkOperation)(struct IndexNode *indexNode);$/;"	t
IndexNodeMakeDirectionOperation	Kernel/include/vfs_inode.h	/^typedef KernelStatus (*IndexNodeMakeDirectionOperation)(struct IndexNode *indexNode);$/;"	t
IndexNodeOpeations	Kernel/include/vfs_inode.h	/^typedef struct IndexNodeOpeations {$/;"	s
IndexNodeOpeations	Kernel/include/vfs_inode.h	/^} IndexNodeOpeations;$/;"	t	typeref:struct:IndexNodeOpeations
IndexNodeReleaseOperation	Kernel/include/vfs_inode.h	/^typedef KernelStatus (*IndexNodeReleaseOperation)(struct IndexNode *indexNode);$/;"	t
IndexNodeRenameOperation	Kernel/include/vfs_inode.h	/^typedef KernelStatus (*IndexNodeRenameOperation)(struct IndexNode *indexNode);$/;"	t
IndexNodeType	Kernel/include/vfs_inode.h	/^typedef enum IndexNodeType {$/;"	g
IndexNodeType	Kernel/include/vfs_inode.h	/^} IndexNodeType;$/;"	t	typeref:enum:IndexNodeType
KB	Kernel/include/type.h	/^#define KB /;"	d
KERNEL_L1PT_NUMBER	Kernel/Arch/arm/vmm/include/page.h	/^#define KERNEL_L1PT_NUMBER /;"	d
KERNEL_L2PT_NUMBER	Kernel/Arch/arm/vmm/include/page.h	/^#define KERNEL_L2PT_NUMBER /;"	d
KERNEL_PHYSICAL_START	Kernel/Arch/arm/vmm/include/page.h	/^#define KERNEL_PHYSICAL_START /;"	d
KERNEL_PTE_NUMBER	Kernel/Arch/arm/vmm/include/page.h	/^#define KERNEL_PTE_NUMBER /;"	d
KQueue	Kernel/include/kqueue.h	/^typedef ListNode KQueue;$/;"	t
KernelStack	Kernel/include/kstack.h	/^typedef struct KernelStack {$/;"	s
KernelStack	Kernel/include/kstack.h	/^} __attribute__((packed)) KernelStack;$/;"	t	typeref:struct:KernelStack
KernelStatus	Kernel/include/type.h	/^typedef enum KernelStatus {$/;"	g
KernelStatus	Kernel/include/type.h	/^} KernelStatus;$/;"	t	typeref:enum:KernelStatus
KernelTimer	Kernel/src/ktimer.c	/^typedef struct KernelTimer {$/;"	s	file:
KernelTimer	Kernel/src/ktimer.c	/^} KernelTimer;/;"	t	typeref:struct:KernelTimer	file:
KernelVector	Kernel/include/kvector.h	/^typedef struct KernelVector {$/;"	s
KernelVector	Kernel/include/kvector.h	/^} __attribute__((packed)) KernelVector;$/;"	t	typeref:struct:KernelVector
L1PT	Kernel/Arch/arm/vmm/include/page.h	/^} L1PT;$/;"	t	typeref:struct:Level1PageTable
L2PT	Kernel/Arch/arm/vmm/include/page.h	/^} L2PT;$/;"	t	typeref:struct:Level2PageTable
LABEL	Libraries/LibGUI/include/gui_component.h	/^  LABEL,$/;"	e	enum:ComponentType
LOWEST_PRIORITY	Kernel/include/thread.h	/^#define LOWEST_PRIORITY /;"	d
LOW_PRIORITY	Kernel/include/thread.h	/^#define LOW_PRIORITY /;"	d
Level1PageTable	Kernel/Arch/arm/vmm/include/page.h	/^typedef struct Level1PageTable {$/;"	s
Level2PageTable	Kernel/Arch/arm/vmm/include/page.h	/^typedef struct Level2PageTable {$/;"	s
ListNode	Kernel/include/list.h	/^typedef struct ListNode {$/;"	s
ListNode	Kernel/include/list.h	/^} __attribute__((packed)) ListNode;$/;"	t	typeref:struct:ListNode
LogError	Kernel/include/log.h	/^#define LogError(/;"	d
LogInfo	Kernel/include/log.h	/^#define LogInfo(/;"	d
LogWarn	Kernel/include/log.h	/^#define LogWarn(/;"	d
MAIL0_CONFIG	Board/RaspberryPi/include/mailbox.h	/^#define MAIL0_CONFIG /;"	d
MAIL0_PEAK	Board/RaspberryPi/include/mailbox.h	/^#define MAIL0_PEAK /;"	d
MAIL0_READ	Board/RaspberryPi/include/mailbox.h	/^#define MAIL0_READ /;"	d
MAIL0_SENDER	Board/RaspberryPi/include/mailbox.h	/^#define MAIL0_SENDER /;"	d
MAIL0_STATUS	Board/RaspberryPi/include/mailbox.h	/^#define MAIL0_STATUS /;"	d
MAIL0_WRITE	Board/RaspberryPi/include/mailbox.h	/^#define MAIL0_WRITE /;"	d
MAILBOX_CHANNEL_BUTTONS	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_BUTTONS /;"	d
MAILBOX_CHANNEL_COUNT	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_COUNT /;"	d
MAILBOX_CHANNEL_FRAMEBUFFER	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_FRAMEBUFFER /;"	d
MAILBOX_CHANNEL_LEDS	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_LEDS /;"	d
MAILBOX_CHANNEL_POWER_MANAGEMENT	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_POWER_MANAGEMENT /;"	d
MAILBOX_CHANNEL_PROPERTY_TAGS_ARM_TO_VC	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_PROPERTY_TAGS_ARM_TO_VC /;"	d
MAILBOX_CHANNEL_PROPERTY_TAGS_VC_TO_ARM	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_PROPERTY_TAGS_VC_TO_ARM /;"	d
MAILBOX_CHANNEL_TOUCH_SCREEN	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_TOUCH_SCREEN /;"	d
MAILBOX_CHANNEL_VCHIQ	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_VCHIQ /;"	d
MAILBOX_CHANNEL_VIRTUAL_UART	Board/RaspberryPi/include/mailbox.h	/^#define MAILBOX_CHANNEL_VIRTUAL_UART /;"	d
MAILBOX_OFFSET	Board/RaspberryPi/include/raspi.h	/^#define MAILBOX_OFFSET /;"	d
MAX_UINT_32	Kernel/include/type.h	/^#define MAX_UINT_32 /;"	d
MB	Kernel/include/type.h	/^#define MB /;"	d
MBOX_EMPTY	Board/RaspberryPi/include/mailbox.h	/^#define MBOX_EMPTY /;"	d
MBOX_FULL	Board/RaspberryPi/include/mailbox.h	/^#define MBOX_FULL /;"	d
MEM_FLAG_COHERENT	Board/RaspberryPi/include/mailbox.h	/^#define MEM_FLAG_COHERENT /;"	d
MEM_FLAG_DIRECT	Board/RaspberryPi/include/mailbox.h	/^#define MEM_FLAG_DIRECT /;"	d
MEM_FLAG_DISCARDABLE	Board/RaspberryPi/include/mailbox.h	/^#define MEM_FLAG_DISCARDABLE /;"	d
MEM_FLAG_HINT_PERMALOCK	Board/RaspberryPi/include/mailbox.h	/^#define MEM_FLAG_HINT_PERMALOCK /;"	d
MEM_FLAG_L1_NONALLOCATING	Board/RaspberryPi/include/mailbox.h	/^#define MEM_FLAG_L1_NONALLOCATING /;"	d
MEM_FLAG_NORMAL	Board/RaspberryPi/include/mailbox.h	/^#define MEM_FLAG_NORMAL /;"	d
MEM_FLAG_NO_INIT	Board/RaspberryPi/include/mailbox.h	/^#define MEM_FLAG_NO_INIT /;"	d
MEM_FLAG_ZERO	Board/RaspberryPi/include/mailbox.h	/^#define MEM_FLAG_ZERO /;"	d
MailMessage	Board/RaspberryPi/include/mailbox.h	/^typedef struct MailMessage {$/;"	s
MailMessage	Board/RaspberryPi/include/mailbox.h	/^} MailMessage;$/;"	t	typeref:struct:MailMessage
MailStatus	Board/RaspberryPi/include/mailbox.h	/^typedef struct MailStatus {$/;"	s
MailStatus	Board/RaspberryPi/include/mailbox.h	/^} MailStatus;$/;"	t	typeref:struct:MailStatus
Margin	Libraries/LibGUI/include/gui_component.h	/^typedef struct Margin {$/;"	s
Margin	Libraries/LibGUI/include/gui_component.h	/^} Margin;$/;"	t	typeref:struct:Margin
Mat4x4	Libraries/LibGfx/include/gfxm.h	/^typedef struct Mat4x4 {$/;"	s
Mat4x4	Libraries/LibGfx/include/gfxm.h	/^} Mat4x4;$/;"	t	typeref:struct:Mat4x4
Mesh	Libraries/LibGfx/include/gfx3d.h	/^typedef struct Mesh {$/;"	s
Mesh	Libraries/LibGfx/include/gfx3d.h	/^} Mesh;$/;"	t	typeref:struct:Mesh
ModuleAuthor	Modules/ELFLoadModule/src/elf.c	/^#define ModuleAuthor(/;"	d	file:
ModuleDescription	Modules/ELFLoadModule/src/elf.c	/^#define ModuleDescription(/;"	d	file:
ModuleExit	Modules/ELFLoadModule/src/elf.c	/^#define ModuleExit(/;"	d	file:
ModuleInit	Modules/ELFLoadModule/src/elf.c	/^#define ModuleInit(/;"	d	file:
ModuleName	Modules/ELFLoadModule/src/elf.c	/^#define ModuleName(/;"	d	file:
Mutex	Kernel/include/mutex.h	/^typedef struct Mutex {$/;"	s
Mutex	Kernel/include/mutex.h	/^} Mutex;$/;"	t	typeref:struct:Mutex
NODE_BLACK	Kernel/include/rbtree.h	/^  NODE_BLACK,$/;"	e	enum:NodeColor
NODE_RED	Kernel/include/rbtree.h	/^  NODE_RED,$/;"	e	enum:NodeColor
NUM_PRIORITIES	Kernel/include/thread.h	/^#define NUM_PRIORITIES /;"	d
NodeColor	Kernel/include/rbtree.h	/^typedef enum NodeColor {$/;"	g
NodeColor	Kernel/include/rbtree.h	/^} __attribute__((packed)) NodeColor;$/;"	t	typeref:enum:NodeColor
OK	Kernel/include/type.h	/^  OK = 0,$/;"	e	enum:KernelStatus
Orientation	Libraries/LibGUI/include/gui_container.h	/^typedef enum Orientation {$/;"	g
Orientation	Libraries/LibGUI/include/gui_container.h	/^} Orientation;$/;"	t	typeref:enum:Orientation
PACKED	Board/RaspberryPi/include/mailbox.h	/^  } PACKED;$/;"	m	struct:PropertyAllocateBuffer	typeref:union:PropertyAllocateBuffer::__anon1
PAGE_2M	Kernel/Arch/arm/vmm/include/page.h	/^  PAGE_2M,$/;"	e	enum:PhysicalPageType
PAGE_4K	Kernel/Arch/arm/vmm/include/page.h	/^  PAGE_4K,$/;"	e	enum:PhysicalPageType
PAGE_SIZE	Kernel/Arch/arm/vmm/include/page.h	/^#define PAGE_SIZE /;"	d
PAGE_UNKNOWD	Kernel/Arch/arm/vmm/include/page.h	/^  PAGE_UNKNOWD = 0,$/;"	e	enum:PhysicalPageType
PANEL	Libraries/LibGUI/include/gui_component.h	/^  PANEL,$/;"	e	enum:ComponentType
PERIPHERAL_BASE	Board/RaspberryPi/include/raspi.h	/^#define PERIPHERAL_BASE /;"	d
PERIPHERAL_LENGTH	Board/RaspberryPi/include/raspi.h	/^#define PERIPHERAL_LENGTH /;"	d
PHYSICAL_PAGE_NUMBERS	Kernel/Arch/arm/vmm/src/page.c	/^#define PHYSICAL_PAGE_NUMBERS /;"	d	file:
PROPERTY_TAG_ALLOCATE_BUFFER	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_ALLOCATE_BUFFER /;"	d
PROPERTY_TAG_ALLOCATE_MEMORY	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_ALLOCATE_MEMORY /;"	d
PROPERTY_TAG_BLANK_SCREEN	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_BLANK_SCREEN /;"	d
PROPERTY_TAG_END	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_END /;"	d
PROPERTY_TAG_EXECUTE_CODE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_EXECUTE_CODE /;"	d
PROPERTY_TAG_GET_ALPHA_MODE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_ALPHA_MODE /;"	d
PROPERTY_TAG_GET_ARM_MEMORY	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_ARM_MEMORY /;"	d
PROPERTY_TAG_GET_BOARD_MAC_ADDRESS	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_BOARD_MAC_ADDRESS /;"	d
PROPERTY_TAG_GET_BOARD_MODEL	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_BOARD_MODEL /;"	d
PROPERTY_TAG_GET_BOARD_REVISION	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_BOARD_REVISION /;"	d
PROPERTY_TAG_GET_BOARD_SERIAL	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_BOARD_SERIAL /;"	d
PROPERTY_TAG_GET_CLOCKS	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_CLOCKS /;"	d
PROPERTY_TAG_GET_CLOCK_RATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_CLOCK_RATE /;"	d
PROPERTY_TAG_GET_CLOCK_STATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_CLOCK_STATE /;"	d
PROPERTY_TAG_GET_COMMAND_LINE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_COMMAND_LINE /;"	d
PROPERTY_TAG_GET_DEPTH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_DEPTH /;"	d
PROPERTY_TAG_GET_DISPMANX_RESOURCE_MEN_HANDLER	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_DISPMANX_RESOURCE_MEN_HANDLER /;"	d
PROPERTY_TAG_GET_DMA_CHANNELS	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_DMA_CHANNELS /;"	d
PROPERTY_TAG_GET_EDID_CLOCK	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_EDID_CLOCK /;"	d
PROPERTY_TAG_GET_FRIMWARE_REVISION	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_FRIMWARE_REVISION /;"	d
PROPERTY_TAG_GET_MAX_CLOCK_RATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_MAX_CLOCK_RATE /;"	d
PROPERTY_TAG_GET_MAX_TEMPERATURE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_MAX_TEMPERATURE /;"	d
PROPERTY_TAG_GET_MAX_VOLTAGE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_MAX_VOLTAGE /;"	d
PROPERTY_TAG_GET_MIN_CLOCK_RATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_MIN_CLOCK_RATE /;"	d
PROPERTY_TAG_GET_MIN_VOLTAGE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_MIN_VOLTAGE /;"	d
PROPERTY_TAG_GET_OVERSCAN	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_OVERSCAN /;"	d
PROPERTY_TAG_GET_PALETTE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_PALETTE /;"	d
PROPERTY_TAG_GET_PHYSICAL_DISPLAY_WH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_PHYSICAL_DISPLAY_WH /;"	d
PROPERTY_TAG_GET_PITCH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_PITCH /;"	d
PROPERTY_TAG_GET_PIXEL_ORDER	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_PIXEL_ORDER /;"	d
PROPERTY_TAG_GET_POWER_STATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_POWER_STATE /;"	d
PROPERTY_TAG_GET_TEMPERATURE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_TEMPERATURE /;"	d
PROPERTY_TAG_GET_TIMING	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_TIMING /;"	d
PROPERTY_TAG_GET_TURBO	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_TURBO /;"	d
PROPERTY_TAG_GET_VIDEOCORE_MEMORY	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_VIDEOCORE_MEMORY /;"	d
PROPERTY_TAG_GET_VIRTUAL_BUFFER_WH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_VIRTUAL_BUFFER_WH /;"	d
PROPERTY_TAG_GET_VIRTUAL_OFFSET	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_VIRTUAL_OFFSET /;"	d
PROPERTY_TAG_GET_VOLTAGE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_GET_VOLTAGE /;"	d
PROPERTY_TAG_LOCK_MEMORY	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_LOCK_MEMORY /;"	d
PROPERTY_TAG_RELEASE_BUFFER	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_RELEASE_BUFFER /;"	d
PROPERTY_TAG_RELEASE_MEMORY	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_RELEASE_MEMORY /;"	d
PROPERTY_TAG_SET_ALPHA_MODE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_ALPHA_MODE /;"	d
PROPERTY_TAG_SET_CLOCK_RATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_CLOCK_RATE /;"	d
PROPERTY_TAG_SET_CLOCK_STATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_CLOCK_STATE /;"	d
PROPERTY_TAG_SET_CURSOR_INFO	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_CURSOR_INFO /;"	d
PROPERTY_TAG_SET_CURSOR_STATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_CURSOR_STATE /;"	d
PROPERTY_TAG_SET_DEPTH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_DEPTH /;"	d
PROPERTY_TAG_SET_OVERSCAN	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_OVERSCAN /;"	d
PROPERTY_TAG_SET_PALETTE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_PALETTE /;"	d
PROPERTY_TAG_SET_PHYSICAL_DISPLAY_WH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_PHYSICAL_DISPLAY_WH /;"	d
PROPERTY_TAG_SET_PIXEL_ORDER	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_PIXEL_ORDER /;"	d
PROPERTY_TAG_SET_POWER_STATE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_POWER_STATE /;"	d
PROPERTY_TAG_SET_TURBO	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_TURBO /;"	d
PROPERTY_TAG_SET_VIRTUAL_BUFFER_WH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_VIRTUAL_BUFFER_WH /;"	d
PROPERTY_TAG_SET_VIRTUAL_OFFSET	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_VIRTUAL_OFFSET /;"	d
PROPERTY_TAG_SET_VOLTAGE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_SET_VOLTAGE /;"	d
PROPERTY_TAG_TEST_ALPHA_MODE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_TEST_ALPHA_MODE /;"	d
PROPERTY_TAG_TEST_DEPTH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_TEST_DEPTH /;"	d
PROPERTY_TAG_TEST_OVERSCAN	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_TEST_OVERSCAN /;"	d
PROPERTY_TAG_TEST_PALETTE	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_TEST_PALETTE /;"	d
PROPERTY_TAG_TEST_PHYSICAL_DISPLAY_WH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_TEST_PHYSICAL_DISPLAY_WH /;"	d
PROPERTY_TAG_TEST_PIXEL_ORDER	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_TEST_PIXEL_ORDER /;"	d
PROPERTY_TAG_TEST_VIRTUAL_BUFFER_WH	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_TEST_VIRTUAL_BUFFER_WH /;"	d
PROPERTY_TAG_TEST_VIRTUAL_OFFSET	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_TEST_VIRTUAL_OFFSET /;"	d
PROPERTY_TAG_UNLOCK_MEMORY	Board/RaspberryPi/include/mailbox.h	/^#define PROPERTY_TAG_UNLOCK_MEMORY /;"	d
PT	Kernel/Arch/arm/vmm/include/page.h	/^} PT;$/;"	t	typeref:struct:PageTable
PTE	Kernel/Arch/arm/vmm/include/page.h	/^} __attribute__((packed)) PTE;$/;"	t	typeref:struct:PageTableEntry
Padding	Libraries/LibGUI/include/gui_component.h	/^typedef struct Padding {$/;"	s
Padding	Libraries/LibGUI/include/gui_component.h	/^} Padding;$/;"	t	typeref:struct:Padding
PageTable	Kernel/Arch/arm/vmm/include/page.h	/^typedef struct PageTable {$/;"	s
PageTableEntry	Kernel/Arch/arm/vmm/include/page.h	/^typedef struct PageTableEntry {$/;"	s
PerCpu	Kernel/include/percpu.h	/^typedef struct PerCpu {$/;"	s
PerCpu	Kernel/include/percpu.h	/^} __attribute__((packed)) PerCpu;$/;"	t	typeref:struct:PerCpu
PerCpuGetNextThread	Kernel/include/percpu.h	/^typedef Thread *(*PerCpuGetNextThread)(struct PerCpu *perCpu);$/;"	t
PerCpuInit	Kernel/include/percpu.h	/^typedef KernelStatus (*PerCpuInit)(struct PerCpu *perCpu, uint32_t num, Thread *idleThread);$/;"	t
PerCpuInsertThread	Kernel/include/percpu.h	/^typedef KernelStatus (*PerCpuInsertThread)(struct PerCpu *perCpu, Thread *thread);$/;"	t
PerCpuOperations	Kernel/include/percpu.h	/^typedef struct PerCpuOperations {$/;"	s
PerCpuOperations	Kernel/include/percpu.h	/^} PerCpuOperations;$/;"	t	typeref:struct:PerCpuOperations
PerCpuRemoveThread	Kernel/include/percpu.h	/^typedef Thread *(*PerCpuRemoveThread)(struct PerCpu *perCpu, Thread *thread);$/;"	t
PhysicalPage	Kernel/Arch/arm/vmm/include/page.h	/^typedef struct PhysicalPage {$/;"	s
PhysicalPage	Kernel/Arch/arm/vmm/include/page.h	/^} __attribute__((packed)) PhysicalPage;$/;"	t	typeref:struct:PhysicalPage
PhysicalPageType	Kernel/Arch/arm/vmm/include/page.h	/^typedef enum PhysicalPageType {$/;"	g
PhysicalPageType	Kernel/Arch/arm/vmm/include/page.h	/^} PhysicalPageType;$/;"	t	typeref:enum:PhysicalPageType
PhysicalPageUsage	Kernel/Arch/arm/vmm/include/page.h	/^typedef enum PhysicalPageUsage {$/;"	g
PhysicalPageUsage	Kernel/Arch/arm/vmm/include/page.h	/^} PhysicalPageUsage;$/;"	t	typeref:enum:PhysicalPageUsage
Pixel	Libraries/LibGUI/include/gui_component.h	/^typedef struct Pixel {$/;"	s
Pixel	Libraries/LibGUI/include/gui_component.h	/^} Pixel;$/;"	t	typeref:struct:Pixel
Position	Libraries/LibGUI/include/gui_component.h	/^typedef struct Position {$/;"	s
Position	Libraries/LibGUI/include/gui_component.h	/^} Position;$/;"	t	typeref:struct:Position
PropertyAllocateBuffer	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyAllocateBuffer {$/;"	s
PropertyAllocateBuffer	Board/RaspberryPi/include/mailbox.h	/^} PropertyAllocateBuffer;$/;"	t	typeref:struct:PropertyAllocateBuffer
PropertyAllocateBufferMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyAllocateBufferMail {$/;"	s
PropertyAllocateBufferMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyAllocateBufferMail;$/;"	t	typeref:struct:PropertyAllocateBufferMail
PropertyAllocateMemory	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyAllocateMemory {$/;"	s
PropertyAllocateMemory	Board/RaspberryPi/include/mailbox.h	/^} PropertyAllocateMemory;$/;"	t	typeref:struct:PropertyAllocateMemory
PropertyAllocateMemoryMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyAllocateMemoryMail {$/;"	s
PropertyAllocateMemoryMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyAllocateMemoryMail;$/;"	t	typeref:struct:PropertyAllocateMemoryMail
PropertyBlankScreen	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyBlankScreen {$/;"	s
PropertyBlankScreen	Board/RaspberryPi/include/mailbox.h	/^} PropertyBlankScreen;$/;"	t	typeref:struct:PropertyBlankScreen
PropertyBlankScreenMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyBlankScreenMail {$/;"	s
PropertyBlankScreenMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyBlankScreenMail;$/;"	t	typeref:struct:PropertyBlankScreenMail
PropertyExecuteCode	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyExecuteCode {$/;"	s
PropertyExecuteCode	Board/RaspberryPi/include/mailbox.h	/^} PropertyExecuteCode;$/;"	t	typeref:struct:PropertyExecuteCode
PropertyExecuteCodeMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyExecuteCodeMail {$/;"	s
PropertyExecuteCodeMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyExecuteCodeMail;$/;"	t	typeref:struct:PropertyExecuteCodeMail
PropertyGetAlphaMode	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetAlphaMode {$/;"	s
PropertyGetAlphaMode	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetAlphaMode;$/;"	t	typeref:struct:PropertyGetAlphaMode
PropertyGetAlphaModeMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetAlphaModeMail {$/;"	s
PropertyGetAlphaModeMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetAlphaModeMail;$/;"	t	typeref:struct:PropertyGetAlphaModeMail
PropertyGetArmMemory	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetArmMemory {$/;"	s
PropertyGetArmMemory	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetArmMemory;$/;"	t	typeref:struct:PropertyGetArmMemory
PropertyGetArmMemoryMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetArmMemoryMail {$/;"	s
PropertyGetArmMemoryMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetArmMemoryMail;$/;"	t	typeref:struct:PropertyGetArmMemoryMail
PropertyGetBoardMacAddress	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetBoardMacAddress {$/;"	s
PropertyGetBoardMacAddress	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetBoardMacAddress;$/;"	t	typeref:struct:PropertyGetBoardMacAddress
PropertyGetBoardMacAddressMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetBoardMacAddressMail {$/;"	s
PropertyGetBoardMacAddressMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetBoardMacAddressMail;$/;"	t	typeref:struct:PropertyGetBoardMacAddressMail
PropertyGetBoardModel	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetBoardModel {$/;"	s
PropertyGetBoardModel	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetBoardModel;$/;"	t	typeref:struct:PropertyGetBoardModel
PropertyGetBoardModelMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetBoardModelMail {$/;"	s
PropertyGetBoardModelMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetBoardModelMail;$/;"	t	typeref:struct:PropertyGetBoardModelMail
PropertyGetBoardRevision	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetBoardRevision {$/;"	s
PropertyGetBoardRevision	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetBoardRevision;$/;"	t	typeref:struct:PropertyGetBoardRevision
PropertyGetBoardRevisionMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetBoardRevisionMail {$/;"	s
PropertyGetBoardRevisionMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetBoardRevisionMail;$/;"	t	typeref:struct:PropertyGetBoardRevisionMail
PropertyGetBoardSerial	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetBoardSerial {$/;"	s
PropertyGetBoardSerial	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetBoardSerial;$/;"	t	typeref:struct:PropertyGetBoardSerial
PropertyGetBoardSerialMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetBoardSerialMail {$/;"	s
PropertyGetBoardSerialMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetBoardSerialMail;$/;"	t	typeref:struct:PropertyGetBoardSerialMail
PropertyGetClockRate	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetClockRate {$/;"	s
PropertyGetClockRate	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetClockRate;$/;"	t	typeref:struct:PropertyGetClockRate
PropertyGetClockRateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetClockRateMail {$/;"	s
PropertyGetClockRateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetClockRateMail;$/;"	t	typeref:struct:PropertyGetClockRateMail
PropertyGetClockState	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetClockState {$/;"	s
PropertyGetClockState	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetClockState;$/;"	t	typeref:struct:PropertyGetClockState
PropertyGetClockStateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetClockStateMail {$/;"	s
PropertyGetClockStateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetClockStateMail;$/;"	t	typeref:struct:PropertyGetClockStateMail
PropertyGetClocks	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetClocks {$/;"	s
PropertyGetClocks	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetClocks;$/;"	t	typeref:struct:PropertyGetClocks
PropertyGetClocksMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetClocksMail {$/;"	s
PropertyGetClocksMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetClocksMail;$/;"	t	typeref:struct:PropertyGetClocksMail
PropertyGetCommandLine	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetCommandLine {$/;"	s
PropertyGetCommandLine	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetCommandLine;$/;"	t	typeref:struct:PropertyGetCommandLine
PropertyGetCommandLineMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetCommandLineMail {$/;"	s
PropertyGetCommandLineMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetCommandLineMail;$/;"	t	typeref:struct:PropertyGetCommandLineMail
PropertyGetDMAChannels	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetDMAChannels {$/;"	s
PropertyGetDMAChannels	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetDMAChannels;$/;"	t	typeref:struct:PropertyGetDMAChannels
PropertyGetDMAChannelsMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetDMAChannelsMail {$/;"	s
PropertyGetDMAChannelsMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetDMAChannelsMail;$/;"	t	typeref:struct:PropertyGetDMAChannelsMail
PropertyGetDepth	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetDepth {$/;"	s
PropertyGetDepth	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetDepth;$/;"	t	typeref:struct:PropertyGetDepth
PropertyGetDepthMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetDepthMail {$/;"	s
PropertyGetDepthMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetDepthMail;$/;"	t	typeref:struct:PropertyGetDepthMail
PropertyGetDispmanxResourceMemHandle	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetDispmanxResourceMemHandle {$/;"	s
PropertyGetDispmanxResourceMemHandle	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetDispmanxResourceMemHandle;$/;"	t	typeref:struct:PropertyGetDispmanxResourceMemHandle
PropertyGetDispmanxResourceMemHandleMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetDispmanxResourceMemHandleMail {$/;"	s
PropertyGetDispmanxResourceMemHandleMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetDispmanxResourceMemHandleMail;$/;"	t	typeref:struct:PropertyGetDispmanxResourceMemHandleMail
PropertyGetEDIDBlock	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetEDIDBlock {$/;"	s
PropertyGetEDIDBlock	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetEDIDBlock;$/;"	t	typeref:struct:PropertyGetEDIDBlock
PropertyGetEDIDBlockMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetEDIDBlockMail {$/;"	s
PropertyGetEDIDBlockMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetEDIDBlockMail;$/;"	t	typeref:struct:PropertyGetEDIDBlockMail
PropertyGetFirmwareRevision	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetFirmwareRevision {$/;"	s
PropertyGetFirmwareRevision	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetFirmwareRevision;$/;"	t	typeref:struct:PropertyGetFirmwareRevision
PropertyGetFirmwareRevisionMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetFirmwareRevisionMail {$/;"	s
PropertyGetFirmwareRevisionMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetFirmwareRevisionMail;$/;"	t	typeref:struct:PropertyGetFirmwareRevisionMail
PropertyGetMaxClockRate	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMaxClockRate {$/;"	s
PropertyGetMaxClockRate	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMaxClockRate;$/;"	t	typeref:struct:PropertyGetMaxClockRate
PropertyGetMaxClockRateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMaxClockRateMail {$/;"	s
PropertyGetMaxClockRateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMaxClockRateMail;$/;"	t	typeref:struct:PropertyGetMaxClockRateMail
PropertyGetMaxTemperature	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMaxTemperature {$/;"	s
PropertyGetMaxTemperature	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMaxTemperature;$/;"	t	typeref:struct:PropertyGetMaxTemperature
PropertyGetMaxTemperatureMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMaxTemperatureMail {$/;"	s
PropertyGetMaxTemperatureMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMaxTemperatureMail;$/;"	t	typeref:struct:PropertyGetMaxTemperatureMail
PropertyGetMaxVoltage	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMaxVoltage {$/;"	s
PropertyGetMaxVoltage	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMaxVoltage;$/;"	t	typeref:struct:PropertyGetMaxVoltage
PropertyGetMaxVoltageMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMaxVoltageMail {$/;"	s
PropertyGetMaxVoltageMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMaxVoltageMail;$/;"	t	typeref:struct:PropertyGetMaxVoltageMail
PropertyGetMinClockRate	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMinClockRate {$/;"	s
PropertyGetMinClockRate	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMinClockRate;$/;"	t	typeref:struct:PropertyGetMinClockRate
PropertyGetMinClockRateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMinClockRateMail {$/;"	s
PropertyGetMinClockRateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMinClockRateMail;$/;"	t	typeref:struct:PropertyGetMinClockRateMail
PropertyGetMinVoltage	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMinVoltage {$/;"	s
PropertyGetMinVoltage	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMinVoltage;$/;"	t	typeref:struct:PropertyGetMinVoltage
PropertyGetMinVoltageMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetMinVoltageMail {$/;"	s
PropertyGetMinVoltageMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetMinVoltageMail;$/;"	t	typeref:struct:PropertyGetMinVoltageMail
PropertyGetOverscan	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetOverscan {$/;"	s
PropertyGetOverscan	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetOverscan;$/;"	t	typeref:struct:PropertyGetOverscan
PropertyGetOverscanMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetOverscanMail {$/;"	s
PropertyGetOverscanMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetOverscanMail;$/;"	t	typeref:struct:PropertyGetOverscanMail
PropertyGetPalette	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPalette {$/;"	s
PropertyGetPalette	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPalette;$/;"	t	typeref:struct:PropertyGetPalette
PropertyGetPaletteMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPaletteMail {$/;"	s
PropertyGetPaletteMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPaletteMail;$/;"	t	typeref:struct:PropertyGetPaletteMail
PropertyGetPhysicalDisplayWH	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPhysicalDisplayWH {$/;"	s
PropertyGetPhysicalDisplayWH	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPhysicalDisplayWH;$/;"	t	typeref:struct:PropertyGetPhysicalDisplayWH
PropertyGetPhysicalDisplayWHMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPhysicalDisplayWHMail {$/;"	s
PropertyGetPhysicalDisplayWHMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPhysicalDisplayWHMail;$/;"	t	typeref:struct:PropertyGetPhysicalDisplayWHMail
PropertyGetPitch	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPitch {$/;"	s
PropertyGetPitch	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPitch;$/;"	t	typeref:struct:PropertyGetPitch
PropertyGetPitchMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPitchMail {$/;"	s
PropertyGetPitchMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPitchMail;$/;"	t	typeref:struct:PropertyGetPitchMail
PropertyGetPixelOrder	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPixelOrder {$/;"	s
PropertyGetPixelOrder	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPixelOrder;$/;"	t	typeref:struct:PropertyGetPixelOrder
PropertyGetPixelOrderMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPixelOrderMail {$/;"	s
PropertyGetPixelOrderMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPixelOrderMail;$/;"	t	typeref:struct:PropertyGetPixelOrderMail
PropertyGetPowerState	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPowerState {$/;"	s
PropertyGetPowerState	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPowerState;$/;"	t	typeref:struct:PropertyGetPowerState
PropertyGetPowerStateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetPowerStateMail {$/;"	s
PropertyGetPowerStateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetPowerStateMail;$/;"	t	typeref:struct:PropertyGetPowerStateMail
PropertyGetTemperature	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetTemperature {$/;"	s
PropertyGetTemperature	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetTemperature;$/;"	t	typeref:struct:PropertyGetTemperature
PropertyGetTemperatureMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetTemperatureMail {$/;"	s
PropertyGetTemperatureMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetTemperatureMail;$/;"	t	typeref:struct:PropertyGetTemperatureMail
PropertyGetTiming	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetTiming {$/;"	s
PropertyGetTiming	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetTiming;$/;"	t	typeref:struct:PropertyGetTiming
PropertyGetTimingMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetTimingMail {$/;"	s
PropertyGetTimingMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetTimingMail;$/;"	t	typeref:struct:PropertyGetTimingMail
PropertyGetTurbo	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetTurbo {$/;"	s
PropertyGetTurbo	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetTurbo;$/;"	t	typeref:struct:PropertyGetTurbo
PropertyGetTurboMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetTurboMail {$/;"	s
PropertyGetTurboMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetTurboMail;$/;"	t	typeref:struct:PropertyGetTurboMail
PropertyGetVideoCoreMemory	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetVideoCoreMemory {$/;"	s
PropertyGetVideoCoreMemory	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetVideoCoreMemory;$/;"	t	typeref:struct:PropertyGetVideoCoreMemory
PropertyGetVideoCoreMemoryMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetVideoCoreMemoryMail {$/;"	s
PropertyGetVideoCoreMemoryMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetVideoCoreMemoryMail;$/;"	t	typeref:struct:PropertyGetVideoCoreMemoryMail
PropertyGetVirtualBufferWH	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetVirtualBufferWH {$/;"	s
PropertyGetVirtualBufferWH	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetVirtualBufferWH;$/;"	t	typeref:struct:PropertyGetVirtualBufferWH
PropertyGetVirtualBufferWHMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetVirtualBufferWHMail {$/;"	s
PropertyGetVirtualBufferWHMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetVirtualBufferWHMail;$/;"	t	typeref:struct:PropertyGetVirtualBufferWHMail
PropertyGetVirtualOffset	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetVirtualOffset {$/;"	s
PropertyGetVirtualOffset	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetVirtualOffset;$/;"	t	typeref:struct:PropertyGetVirtualOffset
PropertyGetVirtualOffsetMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetVirtualOffsetMail {$/;"	s
PropertyGetVirtualOffsetMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetVirtualOffsetMail;$/;"	t	typeref:struct:PropertyGetVirtualOffsetMail
PropertyGetVoltage	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetVoltage {$/;"	s
PropertyGetVoltage	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetVoltage;$/;"	t	typeref:struct:PropertyGetVoltage
PropertyGetVoltageMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyGetVoltageMail {$/;"	s
PropertyGetVoltageMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyGetVoltageMail;$/;"	t	typeref:struct:PropertyGetVoltageMail
PropertyLockMemory	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyLockMemory {$/;"	s
PropertyLockMemory	Board/RaspberryPi/include/mailbox.h	/^} PropertyLockMemory;$/;"	t	typeref:struct:PropertyLockMemory
PropertyLockMemoryMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyLockMemoryMail {$/;"	s
PropertyLockMemoryMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyLockMemoryMail;$/;"	t	typeref:struct:PropertyLockMemoryMail
PropertyReleaseBuffer	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyReleaseBuffer {$/;"	s
PropertyReleaseBuffer	Board/RaspberryPi/include/mailbox.h	/^} PropertyReleaseBuffer;$/;"	t	typeref:struct:PropertyReleaseBuffer
PropertyReleaseBufferMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyReleaseBufferMail {$/;"	s
PropertyReleaseBufferMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyReleaseBufferMail;$/;"	t	typeref:struct:PropertyReleaseBufferMail
PropertyReleaseMemory	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyReleaseMemory {$/;"	s
PropertyReleaseMemory	Board/RaspberryPi/include/mailbox.h	/^} PropertyReleaseMemory;$/;"	t	typeref:struct:PropertyReleaseMemory
PropertyReleaseMemoryMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyReleaseMemoryMail {$/;"	s
PropertyReleaseMemoryMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyReleaseMemoryMail;$/;"	t	typeref:struct:PropertyReleaseMemoryMail
PropertySetAlphaMode	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetAlphaMode {$/;"	s
PropertySetAlphaMode	Board/RaspberryPi/include/mailbox.h	/^} PropertySetAlphaMode;$/;"	t	typeref:struct:PropertySetAlphaMode
PropertySetAlphaModeMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetAlphaModeMail {$/;"	s
PropertySetAlphaModeMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetAlphaModeMail;$/;"	t	typeref:struct:PropertySetAlphaModeMail
PropertySetClockRate	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetClockRate {$/;"	s
PropertySetClockRate	Board/RaspberryPi/include/mailbox.h	/^} PropertySetClockRate;$/;"	t	typeref:struct:PropertySetClockRate
PropertySetClockRateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetClockRateMail {$/;"	s
PropertySetClockRateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetClockRateMail;$/;"	t	typeref:struct:PropertySetClockRateMail
PropertySetClockState	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetClockState {$/;"	s
PropertySetClockState	Board/RaspberryPi/include/mailbox.h	/^} PropertySetClockState;$/;"	t	typeref:struct:PropertySetClockState
PropertySetClockStateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetClockStateMail {$/;"	s
PropertySetClockStateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetClockStateMail;$/;"	t	typeref:struct:PropertySetClockStateMail
PropertySetCursorInfo	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetCursorInfo {$/;"	s
PropertySetCursorInfo	Board/RaspberryPi/include/mailbox.h	/^} PropertySetCursorInfo;$/;"	t	typeref:struct:PropertySetCursorInfo
PropertySetCursorInfoMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetCursorInfoMail {$/;"	s
PropertySetCursorInfoMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetCursorInfoMail;$/;"	t	typeref:struct:PropertySetCursorInfoMail
PropertySetCursorState	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetCursorState {$/;"	s
PropertySetCursorState	Board/RaspberryPi/include/mailbox.h	/^} PropertySetCursorState;$/;"	t	typeref:struct:PropertySetCursorState
PropertySetCursorStateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetCursorStateMail {$/;"	s
PropertySetCursorStateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetCursorStateMail;$/;"	t	typeref:struct:PropertySetCursorStateMail
PropertySetDepth	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetDepth {$/;"	s
PropertySetDepth	Board/RaspberryPi/include/mailbox.h	/^} PropertySetDepth;$/;"	t	typeref:struct:PropertySetDepth
PropertySetDepthMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetDepthMail {$/;"	s
PropertySetDepthMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetDepthMail;$/;"	t	typeref:struct:PropertySetDepthMail
PropertySetOverscan	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetOverscan {$/;"	s
PropertySetOverscan	Board/RaspberryPi/include/mailbox.h	/^} PropertySetOverscan;$/;"	t	typeref:struct:PropertySetOverscan
PropertySetOverscanMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetOverscanMail {$/;"	s
PropertySetOverscanMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetOverscanMail;$/;"	t	typeref:struct:PropertySetOverscanMail
PropertySetPalette	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetPalette {$/;"	s
PropertySetPalette	Board/RaspberryPi/include/mailbox.h	/^} PropertySetPalette;$/;"	t	typeref:struct:PropertySetPalette
PropertySetPaletteMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetPaletteMail {$/;"	s
PropertySetPaletteMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetPaletteMail;$/;"	t	typeref:struct:PropertySetPaletteMail
PropertySetPhysicalDisplayWH	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetPhysicalDisplayWH {$/;"	s
PropertySetPhysicalDisplayWH	Board/RaspberryPi/include/mailbox.h	/^} PropertySetPhysicalDisplayWH;$/;"	t	typeref:struct:PropertySetPhysicalDisplayWH
PropertySetPhysicalDisplayWHMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetPhysicalDisplayWHMail {$/;"	s
PropertySetPhysicalDisplayWHMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetPhysicalDisplayWHMail;$/;"	t	typeref:struct:PropertySetPhysicalDisplayWHMail
PropertySetPixelOrder	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetPixelOrder {$/;"	s
PropertySetPixelOrder	Board/RaspberryPi/include/mailbox.h	/^} PropertySetPixelOrder;$/;"	t	typeref:struct:PropertySetPixelOrder
PropertySetPixelOrderMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetPixelOrderMail {$/;"	s
PropertySetPixelOrderMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetPixelOrderMail;$/;"	t	typeref:struct:PropertySetPixelOrderMail
PropertySetPowerState	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetPowerState {$/;"	s
PropertySetPowerState	Board/RaspberryPi/include/mailbox.h	/^} PropertySetPowerState;$/;"	t	typeref:struct:PropertySetPowerState
PropertySetPowerStateMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetPowerStateMail {$/;"	s
PropertySetPowerStateMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetPowerStateMail;$/;"	t	typeref:struct:PropertySetPowerStateMail
PropertySetTurbo	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetTurbo {$/;"	s
PropertySetTurbo	Board/RaspberryPi/include/mailbox.h	/^} PropertySetTurbo;$/;"	t	typeref:struct:PropertySetTurbo
PropertySetTurboMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetTurboMail {$/;"	s
PropertySetTurboMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetTurboMail;$/;"	t	typeref:struct:PropertySetTurboMail
PropertySetVirtualBufferWH	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetVirtualBufferWH {$/;"	s
PropertySetVirtualBufferWH	Board/RaspberryPi/include/mailbox.h	/^} PropertySetVirtualBufferWH;$/;"	t	typeref:struct:PropertySetVirtualBufferWH
PropertySetVirtualBufferWHMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetVirtualBufferWHMail {$/;"	s
PropertySetVirtualBufferWHMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetVirtualBufferWHMail;$/;"	t	typeref:struct:PropertySetVirtualBufferWHMail
PropertySetVirtualOffset	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetVirtualOffset {$/;"	s
PropertySetVirtualOffset	Board/RaspberryPi/include/mailbox.h	/^} PropertySetVirtualOffset;$/;"	t	typeref:struct:PropertySetVirtualOffset
PropertySetVirtualOffsetMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetVirtualOffsetMail {$/;"	s
PropertySetVirtualOffsetMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetVirtualOffsetMail;$/;"	t	typeref:struct:PropertySetVirtualOffsetMail
PropertySetVoltage	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetVoltage {$/;"	s
PropertySetVoltage	Board/RaspberryPi/include/mailbox.h	/^} PropertySetVoltage;$/;"	t	typeref:struct:PropertySetVoltage
PropertySetVoltageMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertySetVoltageMail {$/;"	s
PropertySetVoltageMail	Board/RaspberryPi/include/mailbox.h	/^} PropertySetVoltageMail;$/;"	t	typeref:struct:PropertySetVoltageMail
PropertyTestAlphaMode	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestAlphaMode {$/;"	s
PropertyTestAlphaMode	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestAlphaMode;$/;"	t	typeref:struct:PropertyTestAlphaMode
PropertyTestAlphaModeMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestAlphaModeMail {$/;"	s
PropertyTestAlphaModeMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestAlphaModeMail;$/;"	t	typeref:struct:PropertyTestAlphaModeMail
PropertyTestDepth	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestDepth {$/;"	s
PropertyTestDepth	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestDepth;$/;"	t	typeref:struct:PropertyTestDepth
PropertyTestDepthMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestDepthMail {$/;"	s
PropertyTestDepthMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestDepthMail;$/;"	t	typeref:struct:PropertyTestDepthMail
PropertyTestOverscan	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestOverscan {$/;"	s
PropertyTestOverscan	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestOverscan;$/;"	t	typeref:struct:PropertyTestOverscan
PropertyTestOverscanMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestOverscanMail {$/;"	s
PropertyTestOverscanMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestOverscanMail;$/;"	t	typeref:struct:PropertyTestOverscanMail
PropertyTestPalette	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestPalette {$/;"	s
PropertyTestPalette	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestPalette;$/;"	t	typeref:struct:PropertyTestPalette
PropertyTestPaletteMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestPaletteMail {$/;"	s
PropertyTestPaletteMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestPaletteMail;$/;"	t	typeref:struct:PropertyTestPaletteMail
PropertyTestPhysicalDisplayWH	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestPhysicalDisplayWH {$/;"	s
PropertyTestPhysicalDisplayWH	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestPhysicalDisplayWH;$/;"	t	typeref:struct:PropertyTestPhysicalDisplayWH
PropertyTestPhysicalDisplayWHMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestPhysicalDisplayWHMail {$/;"	s
PropertyTestPhysicalDisplayWHMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestPhysicalDisplayWHMail;$/;"	t	typeref:struct:PropertyTestPhysicalDisplayWHMail
PropertyTestPixelOrder	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestPixelOrder {$/;"	s
PropertyTestPixelOrder	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestPixelOrder;$/;"	t	typeref:struct:PropertyTestPixelOrder
PropertyTestPixelOrderMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestPixelOrderMail {$/;"	s
PropertyTestPixelOrderMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestPixelOrderMail;$/;"	t	typeref:struct:PropertyTestPixelOrderMail
PropertyTestVirtualBufferWH	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestVirtualBufferWH {$/;"	s
PropertyTestVirtualBufferWH	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestVirtualBufferWH;$/;"	t	typeref:struct:PropertyTestVirtualBufferWH
PropertyTestVirtualBufferWHMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestVirtualBufferWHMail {$/;"	s
PropertyTestVirtualBufferWHMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestVirtualBufferWHMail;$/;"	t	typeref:struct:PropertyTestVirtualBufferWHMail
PropertyTestVirtualOffset	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestVirtualOffset {$/;"	s
PropertyTestVirtualOffset	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestVirtualOffset;$/;"	t	typeref:struct:PropertyTestVirtualOffset
PropertyTestVirtualOffsetMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyTestVirtualOffsetMail {$/;"	s
PropertyTestVirtualOffsetMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyTestVirtualOffsetMail;$/;"	t	typeref:struct:PropertyTestVirtualOffsetMail
PropertyUnLockMemory	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyUnLockMemory {$/;"	s
PropertyUnLockMemory	Board/RaspberryPi/include/mailbox.h	/^} PropertyUnLockMemory;$/;"	t	typeref:struct:PropertyUnLockMemory
PropertyUnLockMemoryMail	Board/RaspberryPi/include/mailbox.h	/^typedef struct PropertyUnLockMemoryMail {$/;"	s
PropertyUnLockMemoryMail	Board/RaspberryPi/include/mailbox.h	/^} PropertyUnLockMemoryMail;$/;"	t	typeref:struct:PropertyUnLockMemoryMail
Q_rsqrt	Libraries/LibGfx/src/gfxm.c	/^float Q_rsqrt(float number) {$/;"	f
RBNode	Kernel/include/rbtree.h	/^typedef struct RBNode {$/;"	s
RBNode	Kernel/include/rbtree.h	/^} __attribute__((packed)) RBNode;$/;"	t	typeref:struct:RBNode
RBTree	Kernel/include/rbtree.h	/^typedef struct RBTree {$/;"	s
RBTree	Kernel/include/rbtree.h	/^} RBTree;$/;"	t	typeref:struct:RBTree
RBTreeInsertNode	Kernel/include/rbtree.h	/^typedef RBNode *(*RBTreeInsertNode)(struct RBTree *tree, RBNode *node);$/;"	t
RBTreeOperations	Kernel/include/rbtree.h	/^typedef struct RBTreeOperations {$/;"	s
RBTreeOperations	Kernel/include/rbtree.h	/^} RBTreeOperations;$/;"	t	typeref:struct:RBTreeOperations
REG16	Board/RaspberryPi/include/led.h	/^#define REG16(/;"	d
REG32	Board/RaspberryPi/include/led.h	/^#define REG32(/;"	d
REG8	Board/RaspberryPi/include/led.h	/^#define REG8(/;"	d
RGB	Libraries/LibGUI/include/gui_component.h	/^  RGB,$/;"	e	enum:ColorMode
RPI_INTERRUPT_CONTROLLER_BASE	Kernel/include/interrupt.h	/^#define RPI_INTERRUPT_CONTROLLER_BASE /;"	d
RbTreeGetMaxNode	Kernel/include/rbtree.h	/^typedef RBNode *(*RbTreeGetMaxNode)(struct RBTree *tree);$/;"	t
RbTreeGetMinNode	Kernel/include/rbtree.h	/^typedef RBNode *(*RbTreeGetMinNode)(struct RBTree *tree);$/;"	t
RbTreeRemoveNode	Kernel/include/rbtree.h	/^typedef RBNode *(*RbTreeRemoveNode)(struct RBTree *tree, RBNode *node);$/;"	t
STATE_CONTESTED	Kernel/include/mutex.h	/^#define STATE_CONTESTED /;"	d
STATE_FREE	Kernel/include/mutex.h	/^#define STATE_FREE /;"	d
SWAP	Libraries/LibGfx/src/gfx2d.c	/^void SWAP(int *x, int *y) {$/;"	f
SYSTEM_TIMER_BASE	Board/RaspberryPi/include/timer.h	/^#define SYSTEM_TIMER_BASE /;"	d
SYSTEM_TIMER_OFFSET	Board/RaspberryPi/include/raspi.h	/^#define SYSTEM_TIMER_OFFSET /;"	d
Semphore	Kernel/include/semphore.h	/^typedef struct Semphore {$/;"	s
Semphore	Kernel/include/semphore.h	/^} Semphore;$/;"	t	typeref:struct:Semphore
Size	Libraries/LibGUI/include/gui_component.h	/^typedef struct Size {$/;"	s
Size	Libraries/LibGUI/include/gui_component.h	/^} Size;$/;"	t	typeref:struct:Size
SpinLock	Kernel/include/spinlock.h	/^typedef struct SpinLock {$/;"	s
SpinLock	Kernel/include/spinlock.h	/^} SpinLock;$/;"	t	typeref:struct:SpinLock
SpinLockAcquire	Kernel/include/spinlock.h	/^typedef void (*SpinLockAcquire)(struct SpinLock *spinLock);$/;"	t
SpinLockCreate	Kernel/include/spinlock.h	/^#define SpinLockCreate(/;"	d
SpinLockOperations	Kernel/include/spinlock.h	/^typedef struct SpinLockOperations {$/;"	s
SpinLockOperations	Kernel/include/spinlock.h	/^} SpinLockOperations;$/;"	t	typeref:struct:SpinLockOperations
SpinLockRelease	Kernel/include/spinlock.h	/^typedef void (*SpinLockRelease)(struct SpinLock *spinLock);$/;"	t
SuperBlock	Kernel/include/vfs_super_block.h	/^typedef struct SuperBlock {$/;"	s
SuperBlock	Kernel/include/vfs_super_block.h	/^} SuperBlock;$/;"	t	typeref:struct:SuperBlock
SuperBlockCreateDirectoryEntry	Kernel/include/vfs_super_block.h	/^typedef DirectoryEntry *(*SuperBlockCreateDirectoryEntry)(struct SuperBlock *superBlock);$/;"	t
SuperBlockCreateIndexNode	Kernel/include/vfs_super_block.h	/^typedef IndexNode *(*SuperBlockCreateIndexNode)(struct SuperBlock *superBlock);$/;"	t
SuperBlockOperations	Kernel/include/vfs_super_block.h	/^typedef struct SuperBlockOperations {$/;"	s
SuperBlockOperations	Kernel/include/vfs_super_block.h	/^} SuperBlockOperations;$/;"	t	typeref:struct:SuperBlockOperations
SysCall	Kernel/include/type.h	/^typedef int (*SysCall)(int arg1, int arg2, int arg3, int arg4, int arg5);$/;"	t
TEST_CASE	Tests/include/tests_lib.h	/^#define TEST_CASE(/;"	d
THREAD_BLOCKED	Kernel/include/thread.h	/^  THREAD_BLOCKED,$/;"	e	enum:ThreadStatus
THREAD_BLOCKED_READ_LOCK	Kernel/include/thread.h	/^  THREAD_BLOCKED_READ_LOCK,$/;"	e	enum:ThreadStatus
THREAD_DEATH	Kernel/include/thread.h	/^  THREAD_DEATH,$/;"	e	enum:ThreadStatus
THREAD_INITIAL	Kernel/include/thread.h	/^  THREAD_INITIAL = 0,$/;"	e	enum:ThreadStatus
THREAD_MAGIC	Kernel/include/thread.h	/^#define THREAD_MAGIC /;"	d
THREAD_NAME_LENGTH	Kernel/include/thread.h	/^#define THREAD_NAME_LENGTH /;"	d
THREAD_READY	Kernel/include/thread.h	/^  THREAD_READY,$/;"	e	enum:ThreadStatus
THREAD_RUNNING	Kernel/include/thread.h	/^  THREAD_RUNNING,$/;"	e	enum:ThreadStatus
THREAD_SLEEPING	Kernel/include/thread.h	/^  THREAD_SLEEPING,$/;"	e	enum:ThreadStatus
THREAD_SUSPENDED	Kernel/include/thread.h	/^  THREAD_SUSPENDED,$/;"	e	enum:ThreadStatus
TIMER_TICK_MS	Kernel/src/sched.c	/^#define TIMER_TICK_MS /;"	d	file:
TOGGLE_LOOP_CNT	Board/RaspberryPi/src/led.c	/^#define TOGGLE_LOOP_CNT /;"	d	file:
TRANSPARENT	Libraries/LibGUI/include/gui_component.h	/^  TRANSPARENT,$/;"	e	enum:ColorMode
TestElement	Tests/include/kvector_test.h	/^typedef struct TestElement {$/;"	s
TestElement	Tests/include/kvector_test.h	/^} TestElement;$/;"	t	typeref:struct:TestElement
Thread	Kernel/include/thread.h	/^typedef struct Thread {$/;"	s
Thread	Kernel/include/thread.h	/^} __attribute__((packed)) Thread;$/;"	t	typeref:struct:Thread
ThreadStartRoutine	Kernel/include/thread.h	/^typedef uint32_t (*ThreadStartRoutine)(void *arg);$/;"	t
ThreadStatus	Kernel/include/thread.h	/^typedef enum ThreadStatus {$/;"	g
ThreadStatus	Kernel/include/thread.h	/^} ThreadStatus;$/;"	t	typeref:enum:ThreadStatus
TimerHandler	Kernel/include/interrupt.h	/^typedef struct TimerHandler {$/;"	s
TimerHandler	Kernel/include/interrupt.h	/^} TimerHandler;$/;"	t	typeref:struct:TimerHandler
Triangle	Libraries/LibGfx/include/gfx3d.h	/^typedef struct Triangle {$/;"	s
Triangle	Libraries/LibGfx/include/gfx3d.h	/^} Triangle;$/;"	t	typeref:struct:Triangle
UART0_OFFSET	Board/RaspberryPi/include/raspi.h	/^#define UART0_OFFSET /;"	d
UART_CR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_CR_OFFSET /;"	d
UART_DMACR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_DMACR_OFFSET /;"	d
UART_DR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_DR_OFFSET /;"	d
UART_FBRD_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_FBRD_OFFSET /;"	d
UART_FR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_FR_OFFSET /;"	d
UART_IBRD_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_IBRD_OFFSET /;"	d
UART_ICR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_ICR_OFFSET /;"	d
UART_IFLS_OFFSE	Board/RaspberryPi/include/uart.h	/^#define UART_IFLS_OFFSE /;"	d
UART_ILPR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_ILPR_OFFSET /;"	d
UART_IMSC_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_IMSC_OFFSET /;"	d
UART_ITCR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_ITCR_OFFSET /;"	d
UART_ITIP_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_ITIP_OFFSET /;"	d
UART_ITOP_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_ITOP_OFFSET /;"	d
UART_LCRH_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_LCRH_OFFSET /;"	d
UART_MIS_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_MIS_OFFSET /;"	d
UART_RIS_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_RIS_OFFSET /;"	d
UART_RSRECR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_RSRECR_OFFSET /;"	d
UART_TDR_OFFSET	Board/RaspberryPi/include/uart.h	/^#define UART_TDR_OFFSET /;"	d
USAGE_FRAMEBUFFER	Kernel/Arch/arm/vmm/include/page.h	/^  USAGE_FRAMEBUFFER,$/;"	e	enum:PhysicalPageUsage
USAGE_KERNEL	Kernel/Arch/arm/vmm/include/page.h	/^  USAGE_KERNEL,$/;"	e	enum:PhysicalPageUsage
USAGE_KERNEL_HEAP	Kernel/Arch/arm/vmm/include/page.h	/^  USAGE_KERNEL_HEAP,$/;"	e	enum:PhysicalPageUsage
USAGE_PAGETABLE	Kernel/Arch/arm/vmm/include/page.h	/^  USAGE_PAGETABLE,$/;"	e	enum:PhysicalPageUsage
USAGE_PERIPHERAL	Kernel/Arch/arm/vmm/include/page.h	/^  USAGE_PERIPHERAL,$/;"	e	enum:PhysicalPageUsage
USAGE_UNKNOWD	Kernel/Arch/arm/vmm/include/page.h	/^  USAGE_UNKNOWD = 0,$/;"	e	enum:PhysicalPageUsage
USAGE_USER	Kernel/Arch/arm/vmm/include/page.h	/^  USAGE_USER,$/;"	e	enum:PhysicalPageUsage
VA_OFFSET	Kernel/Arch/arm/vmm/include/page.h	/^#define VA_OFFSET /;"	d
VERTICAL	Libraries/LibGUI/include/gui_container.h	/^  VERTICAL,$/;"	e	enum:Orientation
VIDEOCORE_MBOX	Board/RaspberryPi/include/mailbox.h	/^#define VIDEOCORE_MBOX /;"	d
VIEW3D	Libraries/LibGUI/include/gui_component.h	/^  VIEW3D,$/;"	e	enum:ComponentType
VMMAssociatedSpace	Kernel/include/thread.h	/^typedef struct VMMAssociatedSpace {$/;"	s
VMMAssociatedSpace	Kernel/include/thread.h	/^} __attribute__((packed)) VMMAssociatedSpace;$/;"	t	typeref:struct:VMMAssociatedSpace
VOLTAGE_IDCore	Board/RaspberryPi/include/mailbox.h	/^#define VOLTAGE_IDCore /;"	d
VOLTAGE_IDSDRAM_C	Board/RaspberryPi/include/mailbox.h	/^#define VOLTAGE_IDSDRAM_C /;"	d
VOLTAGE_IDSDRAM_I	Board/RaspberryPi/include/mailbox.h	/^#define VOLTAGE_IDSDRAM_I /;"	d
VOLTAGE_IDSDRAM_P	Board/RaspberryPi/include/mailbox.h	/^#define VOLTAGE_IDSDRAM_P /;"	d
VOLTAGE_IDreserved	Board/RaspberryPi/include/mailbox.h	/^#define VOLTAGE_IDreserved /;"	d
Vec3D	Libraries/LibGfx/include/gfxm.h	/^typedef struct Vec3D {$/;"	s
Vec3D	Libraries/LibGfx/include/gfxm.h	/^} Vec3D;$/;"	t	typeref:struct:Vec3D
VirtualAddress	Kernel/include/kstack.h	/^typedef uint32_t VirtualAddress;$/;"	t
WINDOW	Libraries/LibGUI/include/gui_component.h	/^  WINDOW,$/;"	e	enum:ComponentType
__APPLICATIONS_CONSOLE_H__	Applications/Console/include/console.h	/^#define __APPLICATIONS_CONSOLE_H__$/;"	d
__BOARD_RASP_FRAMEBUFFER_H__	Board/RaspberryPi/include/framebuffer.h	/^#define __BOARD_RASP_FRAMEBUFFER_H__$/;"	d
__BOARD_RASP_GPU_H__	Board/RaspberryPi/include/gpu.h	/^#define __BOARD_RASP_GPU_H__$/;"	d
__BOARD_RASP_H__	Board/RaspberryPi/include/raspi.h	/^#define __BOARD_RASP_H__$/;"	d
__BOARD_RASP_MAILBOX_H__	Board/RaspberryPi/include/mailbox.h	/^#define __BOARD_RASP_MAILBOX_H__$/;"	d
__BOARD_RASP_TIMER_H__	Board/RaspberryPi/include/timer.h	/^#define __BOARD_RASP_TIMER_H__$/;"	d
__BOARD_RASP_UART_H__	Board/RaspberryPi/include/uart.h	/^#define __BOARD_RASP_UART_H__$/;"	d
__KERNEL_ATOMIC_H__	Kernel/include/atomic.h	/^#define __KERNEL_ATOMIC_H__$/;"	d
__KERNEL_BARRIER_H__	Kernel/include/barrier.h	/^#define __KERNEL_BARRIER_H__$/;"	d
__KERNEL_CACHE_H__	Kernel/Arch/arm/vmm/include/cache.h	/^#define __KERNEL_CACHE_H__$/;"	d
__KERNEL_INTERRUPT_H__	Kernel/include/interrupt.h	/^#define __KERNEL_INTERRUPT_H__$/;"	d
__KERNEL_IO_H__	Kernel/include/io.h	/^#define __KERNEL_IO_H__$/;"	d
__KERNEL_KHEAP_H__	Kernel/include/kheap.h	/^#define __KERNEL_KHEAP_H__$/;"	d
__KERNEL_KHEAP_TEST_H__	Tests/include/kheap_test.h	/^#define __KERNEL_KHEAP_TEST_H__$/;"	d
__KERNEL_KLIST_TEST_H__	Tests/include/klist_test.h	/^#define __KERNEL_KLIST_TEST_H__$/;"	d
__KERNEL_KSTACK_H__	Kernel/include/kstack.h	/^#define __KERNEL_KSTACK_H__$/;"	d
__KERNEL_KSTACK_TEST_H__	Tests/include/kstack_test.h	/^#define __KERNEL_KSTACK_TEST_H__$/;"	d
__KERNEL_KTIMER_H__	Kernel/include/ktimer.h	/^#define __KERNEL_KTIMER_H__$/;"	d
__KERNEL_KVECTOR_TEST_H__	Tests/include/kvector_test.h	/^#define __KERNEL_KVECTOR_TEST_H__$/;"	d
__KERNEL_LIST_H__	Kernel/include/list.h	/^#define __KERNEL_LIST_H__$/;"	d
__KERNEL_LOG_H__	Kernel/include/log.h	/^#define __KERNEL_LOG_H__$/;"	d
__KERNEL_MATH_TEST_H__	Tests/include/libmath_test.h	/^#define __KERNEL_MATH_TEST_H__$/;"	d
__KERNEL_MUTEX_H__	Kernel/include/mutex.h	/^#define __KERNEL_MUTEX_H__$/;"	d
__KERNEL_PAGE_H__	Kernel/Arch/arm/vmm/include/page.h	/^#define __KERNEL_PAGE_H__$/;"	d
__KERNEL_PRECPU_H__	Kernel/include/percpu.h	/^#define __KERNEL_PRECPU_H__$/;"	d
__KERNEL_RBTREE_H__	Kernel/include/rbtree.h	/^#define __KERNEL_RBTREE_H__$/;"	d
__KERNEL_RINGBUFFER_H__	Kernel/include/kqueue.h	/^#define __KERNEL_RINGBUFFER_H__$/;"	d
__KERNEL_SCHED_H__	Kernel/include/sched.h	/^#define __KERNEL_SCHED_H__$/;"	d
__KERNEL_SEMPHORE_H__	Kernel/include/semphore.h	/^#define __KERNEL_SEMPHORE_H__$/;"	d
__KERNEL_SPINLOCK_H__	Kernel/include/spinlock.h	/^#define __KERNEL_SPINLOCK_H__$/;"	d
__KERNEL_SYSCALL_H__	Kernel/include/sys_call.h	/^#define __KERNEL_SYSCALL_H__$/;"	d
__KERNEL_TEST_H__	Tests/include/tests_lib.h	/^#define __KERNEL_TEST_H__$/;"	d
__KERNEL_THREAD_H__	Kernel/include/thread.h	/^#define __KERNEL_THREAD_H__$/;"	d
__KERNEL_TYPE_H__	Kernel/include/type.h	/^#define __KERNEL_TYPE_H__$/;"	d
__KERNEL_VECTOR_H__	Kernel/include/kvector.h	/^#define __KERNEL_VECTOR_H__$/;"	d
__KERNEL_VFS_DIRECTORY_ENTRY_H__	Kernel/include/vfs_dentry.h	/^#define __KERNEL_VFS_DIRECTORY_ENTRY_H__$/;"	d
__KERNEL_VFS_H__	Kernel/include/vfs.h	/^#define __KERNEL_VFS_H__$/;"	d
__KERNEL_VFS_INDEX_NODE_H__	Kernel/include/vfs_inode.h	/^#define __KERNEL_VFS_INDEX_NODE_H__$/;"	d
__KERNEL_VFS_SUPER_BLOCK_H__	Kernel/include/vfs_super_block.h	/^#define __KERNEL_VFS_SUPER_BLOCK_H__$/;"	d
__KERNEL_VMM_H__	Kernel/Arch/arm/vmm/include/vmm.h	/^#define __KERNEL_VMM_H__$/;"	d
__LIBRARY_LIBC_HASH_H__	Libraries/LibC/include/hash.h	/^#define __LIBRARY_LIBC_HASH_H__$/;"	d
__LIBRARY_LIBC_STDINT_H__	Libraries/LibC/include/stdint.h	/^#define __LIBRARY_LIBC_STDINT_H__$/;"	d
__LIBRARY_LIBC_STDLIB_H__	Libraries/LibC/include/stdlib.h	/^#define __LIBRARY_LIBC_STDLIB_H__$/;"	d
__LIBRARY_LIBC_STRING_H__	Libraries/LibC/include/string.h	/^#define __LIBRARY_LIBC_STRING_H__$/;"	d
__LIBRARY_LIBC_SYS_H__	Libraries/LibC/include/sys.h	/^#define __LIBRARY_LIBC_SYS_H__$/;"	d
__LIBRARY_LIBGFX_FONT_8BITS_H__	Libraries/LibGfx/include/font8bits.h	/^#define __LIBRARY_LIBGFX_FONT_8BITS_H__$/;"	d
__LIBRARY_LIBGFX_GL2D_H__	Libraries/LibGfx/include/gfx2d.h	/^#define __LIBRARY_LIBGFX_GL2D_H__$/;"	d
__LIBRARY_LIBGFX_GL3D_H__	Libraries/LibGfx/include/gfx3d.h	/^#define __LIBRARY_LIBGFX_GL3D_H__$/;"	d
__LIBRARY_LIBGFX_GLMATH_H__	Libraries/LibGfx/include/gfxm.h	/^#define __LIBRARY_LIBGFX_GLMATH_H__$/;"	d
__LIBRARY_LIBGUI_ANIMATION_H__	Libraries/LibGUI/include/gui_animation.h	/^#define __LIBRARY_LIBGUI_ANIMATION_H__$/;"	d
__LIBRARY_LIBGUI_BUTTON_H__	Libraries/LibGUI/include/gui_button.h	/^#define __LIBRARY_LIBGUI_BUTTON_H__$/;"	d
__LIBRARY_LIBGUI_CANVAS_H__	Libraries/LibGUI/include/gui_canvas.h	/^#define __LIBRARY_LIBGUI_CANVAS_H__$/;"	d
__LIBRARY_LIBGUI_COMPONENT_H__	Libraries/LibGUI/include/gui_component.h	/^#define __LIBRARY_LIBGUI_COMPONENT_H__$/;"	d
__LIBRARY_LIBGUI_CONTAINER_H__	Libraries/LibGUI/include/gui_container.h	/^#define __LIBRARY_LIBGUI_CONTAINER_H__$/;"	d
__LIBRARY_LIBGUI_LABEL_H__	Libraries/LibGUI/include/gui_label.h	/^#define __LIBRARY_LIBGUI_LABEL_H__$/;"	d
__LIBRARY_LIBGUI_PANEL_H__	Libraries/LibGUI/include/gui_panel.h	/^#define __LIBRARY_LIBGUI_PANEL_H__$/;"	d
__LIBRARY_LIBGUI_VIEW_3D_H__	Libraries/LibGUI/include/gui_view3d.h	/^#define __LIBRARY_LIBGUI_VIEW_3D_H__$/;"	d
__LIBRARY_LIBGUI_WINDOW_H__	Libraries/LibGUI/include/gui_window.h	/^#define __LIBRARY_LIBGUI_WINDOW_H__$/;"	d
__LIBRARY_LIBMATH_MATH_H__	Libraries/LibMath/include/math.h	/^#define __LIBRARY_LIBMATH_MATH_H__$/;"	d
__MODULE_ELFLOAD_ELF_H__	Modules/ELFLoadModule/include/elf.h	/^#define __MODULE_ELFLOAD_ELF_H__$/;"	d
__OS_HAL_H__	Board/RaspberryPi/include/synestia_os_hal.h	/^#define __OS_HAL_H__$/;"	d
__SYSCALL_getpid	Libraries/LibC/include/sys.h	/^#define __SYSCALL_getpid /;"	d
__assert_func_failed	Tests/src/test_lib.c	/^void __assert_func_failed(const char *file, int line, const char *func, const char *failedexpr) {$/;"	f
__assert_func_success	Tests/src/test_lib.c	/^void __assert_func_success(const char *file, int line, const char *func, const char *failedexpr) {$/;"	f
__test_all_asserts	Tests/include/tests_lib.h	/^static uint32_t __test_all_asserts = 0;$/;"	v
__test_failed_asserts	Tests/include/tests_lib.h	/^static uint32_t __test_failed_asserts = 0;$/;"	v
_data_abort_addr	Kernel/src/exception.S	/^_data_abort_addr:$/;"	l
_fast_interrupt_addr	Kernel/src/exception.S	/^_fast_interrupt_addr:$/;"	l
_goto_kernel_main	Kernel/Arch/arm/boot.S	/^_goto_kernel_main:$/;"	l
_halt_smp	Kernel/Arch/arm/boot.S	/^_halt_smp:$/;"	l
_halt_smp	Kernel/Arch/arm64/boot.S	/^_halt_smp:$/;"	l
_init_cpu0	Kernel/Arch/arm/boot.S	/^_init_cpu0:$/;"	l
_init_cpu1	Kernel/Arch/arm/boot.S	/^_init_cpu1:$/;"	l
_init_cpu2	Kernel/Arch/arm/boot.S	/^_init_cpu2:$/;"	l
_init_cpu3	Kernel/Arch/arm/boot.S	/^_init_cpu3:$/;"	l
_interrupt_addr	Kernel/src/exception.S	/^_interrupt_addr:$/;"	l
_prefetch_abort_addr	Kernel/src/exception.S	/^_prefetch_abort_addr:$/;"	l
_reset_addr	Kernel/src/exception.S	/^_reset_addr:$/;"	l
_reset_cpu0	Kernel/src/exception.S	/^_reset_cpu0:$/;"	l
_reset_cpu1	Kernel/src/exception.S	/^_reset_cpu1:$/;"	l
_reset_cpu2	Kernel/src/exception.S	/^_reset_cpu2:$/;"	l
_reset_cpu3	Kernel/src/exception.S	/^_reset_cpu3:$/;"	l
_software_interrupt_addr	Kernel/src/exception.S	/^_software_interrupt_addr:$/;"	l
_start	Kernel/Arch/arm/boot.S	/^_start:$/;"	l
_start	Kernel/Arch/arm64/boot.S	/^_start:$/;"	l
_syscall0	Libraries/LibC/include/sys.h	/^#define _syscall0(/;"	d
_syscall1	Libraries/LibC/include/sys.h	/^#define _syscall1(/;"	d
_syscall2	Libraries/LibC/include/sys.h	/^#define _syscall2(/;"	d
_syscall3	Libraries/LibC/include/sys.h	/^#define _syscall3(/;"	d
_syscall4	Libraries/LibC/include/sys.h	/^#define _syscall4(/;"	d
_syscall5	Libraries/LibC/include/sys.h	/^#define _syscall5(/;"	d
_undefined_instruction_addr	Kernel/src/exception.S	/^_undefined_instruction_addr:$/;"	l
_unused_addr	Kernel/src/exception.S	/^_unused_addr:$/;"	l
a	Libraries/LibGUI/include/gui_component.h	/^  uint8_t a;$/;"	m	struct:Color
acquire	Kernel/include/spinlock.h	/^  SpinLockAcquire acquire;$/;"	m	struct:SpinLockOperations
address1	Board/RaspberryPi/include/mailbox.h	/^  uint8_t address1;$/;"	m	struct:PropertyGetBoardMacAddress
address2	Board/RaspberryPi/include/mailbox.h	/^  uint8_t address2;$/;"	m	struct:PropertyGetBoardMacAddress
address3	Board/RaspberryPi/include/mailbox.h	/^  uint8_t address3;$/;"	m	struct:PropertyGetBoardMacAddress
address4	Board/RaspberryPi/include/mailbox.h	/^  uint8_t address4;$/;"	m	struct:PropertyGetBoardMacAddress
address5	Board/RaspberryPi/include/mailbox.h	/^  uint8_t address5;$/;"	m	struct:PropertyGetBoardMacAddress
address6	Board/RaspberryPi/include/mailbox.h	/^  uint8_t address6;$/;"	m	struct:PropertyGetBoardMacAddress
adler32	Libraries/LibC/src/hash.c	/^uint32_t adler32(const char *buf, uint32_t buflength) {$/;"	f
af	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t af : 1;   \/* Access Flag *\/$/;"	m	struct:PageTableEntry
ai	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t ai : 3;   \/* Attribute Index *\/$/;"	m	struct:PageTableEntry
alignment	Board/RaspberryPi/include/mailbox.h	/^    uint32_t alignment;$/;"	m	union:PropertyAllocateBuffer::__anon1
alignment	Board/RaspberryPi/include/mailbox.h	/^  uint32_t alignment;$/;"	m	struct:PropertyAllocateMemory
angle	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t angle;$/;"	m	struct:GUIAnimationRotateX
animation	Libraries/LibGUI/include/gui_animation.h	/^  GUIAnimation animation;$/;"	m	struct:GUIAnimationRotateX
animation	Libraries/LibGUI/include/gui_animation.h	/^  GUIAnimation animation;$/;"	m	struct:GUIAnimationTranslation
animationType	Libraries/LibGUI/include/gui_animation.h	/^  GUIAnimationType animationType;$/;"	m	struct:GUIAnimation
apt	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t apt : 2;  \/* Access Permissions *\/$/;"	m	struct:PageTableEntry
arg	Kernel/include/thread.h	/^  void *arg;$/;"	m	struct:Thread
arrivalCounter	Kernel/include/barrier.h	/^  uint32_t arrivalCounter;$/;"	m	struct:Barrier
asmlinkage	Libraries/LibC/include/sys.h	/^#define asmlinkage /;"	d
assert	Tests/include/tests_lib.h	/^#define assert(/;"	d
atomic	Tests/include/atomic_test.h	/^Atomic atomic;$/;"	v
atomic1	Tests/include/atomic_test.h	/^Atomic atomic1;$/;"	v
atomic2	Tests/include/atomic_test.h	/^Atomic atomic2;$/;"	v
atomic3	Tests/include/atomic_test.h	/^Atomic atomic3;$/;"	v
atomic4	Tests/include/atomic_test.h	/^Atomic atomic4;$/;"	v
atomic5	Tests/include/atomic_test.h	/^Atomic atomic5;$/;"	v
atomic6	Tests/include/atomic_test.h	/^Atomic atomic6;$/;"	v
atomic_add	Kernel/src/atomic.c	/^uint32_t atomic_add(Atomic *atomic, uint32_t val) {$/;"	f
atomic_create	Kernel/src/atomic.c	/^void atomic_create(Atomic *atomic) { atomic_set(atomic, 0); }$/;"	f
atomic_dec	Kernel/src/atomic.c	/^uint32_t atomic_dec(Atomic *atomic) { return atomic_sub(atomic, 1); }$/;"	f
atomic_get	Kernel/src/atomic.c	/^uint32_t atomic_get(Atomic *atomic) {$/;"	f
atomic_inc	Kernel/src/atomic.c	/^uint32_t atomic_inc(Atomic *atomic) { return atomic_add(atomic, 1); }$/;"	f
atomic_set	Kernel/src/atomic.c	/^void atomic_set(Atomic *atomic, uint32_t val) {$/;"	f
atomic_sub	Kernel/src/atomic.c	/^uint32_t atomic_sub(Atomic *atomic, uint32_t val) {$/;"	f
avail	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t avail : 4; \/* Ignored by hardware *\/$/;"	m	struct:PageTableEntry
b	Libraries/LibGUI/include/gui_component.h	/^  uint8_t b;$/;"	m	struct:Color
background	Libraries/LibGUI/include/gui_component.h	/^  Color background;$/;"	m	struct:GUIComponent
backgroundColor	Applications/Console/include/console.h	/^  uint32_t backgroundColor;$/;"	m	struct:Console
base	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t base : 28; \/* Base address of block or next table *\/$/;"	m	struct:PageTableEntry
base	Kernel/include/kstack.h	/^  VirtualAddress base;$/;"	m	struct:KernelStack
baseAddress	Board/RaspberryPi/include/mailbox.h	/^    uint32_t baseAddress;$/;"	m	union:PropertyAllocateBuffer::__anon1
baseAddress	Board/RaspberryPi/include/mailbox.h	/^  uint32_t baseAddress;$/;"	m	struct:PropertyGetArmMemory
baseAddress	Board/RaspberryPi/include/mailbox.h	/^  uint32_t baseAddress;$/;"	m	struct:PropertyGetVideoCoreMemory
beginX	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t beginX;$/;"	m	struct:GUIAnimationTranslation
beginY	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t beginY;$/;"	m	struct:GUIAnimationTranslation
bitsPerPixel	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bitsPerPixel;$/;"	m	struct:PropertyGetDepth
bitsPerPixel	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bitsPerPixel;$/;"	m	struct:PropertySetDepth
bitsPerPixel	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bitsPerPixel;$/;"	m	struct:PropertyTestDepth
blockNumber	Board/RaspberryPi/include/mailbox.h	/^  uint32_t blockNumber;$/;"	m	struct:PropertyGetEDIDBlock
block_delay	Board/RaspberryPi/src/timer.c	/^__attribute__((optimize(0))) void block_delay(uint32_t usecs) {$/;"	f
boardModel	Board/RaspberryPi/include/mailbox.h	/^  uint32_t boardModel;$/;"	m	struct:PropertyGetBoardModel
boardRevision	Board/RaspberryPi/include/mailbox.h	/^  uint32_t boardRevision;$/;"	m	struct:PropertyGetBoardRevision
boardSerial	Board/RaspberryPi/include/mailbox.h	/^  uint64_t boardSerial;$/;"	m	struct:PropertyGetBoardSerial
bottom	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bottom;$/;"	m	struct:PropertyGetOverscan
bottom	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bottom;$/;"	m	struct:PropertySetOverscan
bottom	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bottom;$/;"	m	struct:PropertyTestOverscan
bottom	Libraries/LibGUI/include/gui_component.h	/^  uint32_t bottom;$/;"	m	struct:Margin
bottom	Libraries/LibGUI/include/gui_component.h	/^  uint32_t bottom;$/;"	m	struct:Padding
bssSectionAddr	Kernel/include/thread.h	/^  uint32_t bssSectionAddr;$/;"	m	struct:VMMAssociatedSpace
buffer	Applications/Console/include/console.h	/^  char *buffer;$/;"	m	struct:Console
buffer	Libraries/LibGUI/include/gui_canvas.h	/^  uint32_t *buffer;$/;"	m	struct:GUICanvas
buffer	Libraries/LibGUI/include/gui_view3d.h	/^  uint32_t *buffer;$/;"	m	struct:GUIView3D
buffer	Libraries/LibGfx/include/gfx2d.h	/^  uint32_t *buffer;$/;"	m	struct:Gfx2DContext
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyAllocateBuffer
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyAllocateMemory
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyBlankScreen
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyExecuteCode
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetAlphaMode
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetArmMemory
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetBoardMacAddress
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetBoardModel
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetBoardRevision
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetBoardSerial
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetClockRate
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetClockState
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetClocks
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetCommandLine
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetDMAChannels
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetDepth
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetDispmanxResourceMemHandle
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetEDIDBlock
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetFirmwareRevision
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetMaxClockRate
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetMaxTemperature
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetMaxVoltage
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetMinClockRate
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetMinVoltage
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetOverscan
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetPalette
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetPhysicalDisplayWH
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetPitch
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetPixelOrder
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetPowerState
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetTemperature
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetTiming
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetTurbo
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetVideoCoreMemory
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetVirtualBufferWH
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetVirtualOffset
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyGetVoltage
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyLockMemory
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyReleaseBuffer
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyReleaseMemory
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetAlphaMode
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetClockRate
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetClockState
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetCursorInfo
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetCursorState
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetDepth
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetOverscan
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetPalette
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetPhysicalDisplayWH
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetPixelOrder
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetPowerState
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetTurbo
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetVirtualBufferWH
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetVirtualOffset
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertySetVoltage
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyTestAlphaMode
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyTestDepth
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyTestOverscan
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyTestPalette
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyTestPhysicalDisplayWH
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyTestPixelOrder
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyTestVirtualBufferWH
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyTestVirtualOffset
bufferSize	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bufferSize;$/;"	m	struct:PropertyUnLockMemory
busAddress	Board/RaspberryPi/include/mailbox.h	/^  uint32_t busAddress;$/;"	m	struct:PropertyLockMemory
bytesPerLine	Board/RaspberryPi/include/mailbox.h	/^  uint32_t bytesPerLine;$/;"	m	struct:PropertyGetPitch
bzero	Libraries/LibC/src/stdlib.c	/^void bzero(void *s1, uint32_t n) {$/;"	f
channel	Board/RaspberryPi/include/mailbox.h	/^  uint8_t channel : 4;$/;"	m	struct:MailMessage
children	Libraries/LibGUI/include/gui_container.h	/^  KernelVector *children;$/;"	m	struct:GUIContainer
children	Libraries/LibGUI/include/gui_panel.h	/^  KernelVector *children;$/;"	m	struct:GUIPanel
children	Libraries/LibGUI/include/gui_window.h	/^  KernelVector *children;$/;"	m	struct:GUIWindow
clockId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t clockId;$/;"	m	struct:PropertyGetClockRate
clockId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t clockId;$/;"	m	struct:PropertyGetClockState
clockId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t clockId;$/;"	m	struct:PropertyGetClocks
clockId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t clockId;$/;"	m	struct:PropertyGetMaxClockRate
clockId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t clockId;$/;"	m	struct:PropertyGetMinClockRate
clockId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t clockId;$/;"	m	struct:PropertySetClockRate
clockId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t clockId;$/;"	m	struct:PropertySetClockState
close	Libraries/LibGfx/src/font8bits.c	/^static const uint8_t close[8] = {0x63, 0x63, 0x36, 0x1C, 0x1C, 0x36, 0x63, 0x00};$/;"	v	file:
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyAllocateBuffer
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyAllocateBufferMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyAllocateMemory
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyAllocateMemoryMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyBlankScreen
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyBlankScreenMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyExecuteCode
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyExecuteCodeMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetAlphaMode
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetAlphaModeMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetArmMemory
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetArmMemoryMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetBoardMacAddress
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetBoardMacAddressMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetBoardModel
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetBoardModelMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetBoardRevision
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetBoardRevisionMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetBoardSerial
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetBoardSerialMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetClockRate
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetClockRateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetClockState
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetClockStateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetClocks
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetClocksMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetCommandLine
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetCommandLineMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetDMAChannels
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetDMAChannelsMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetDepth
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetDepthMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetDispmanxResourceMemHandle
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetDispmanxResourceMemHandleMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetEDIDBlock
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetEDIDBlockMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetFirmwareRevision
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetFirmwareRevisionMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMaxClockRate
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMaxClockRateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMaxTemperature
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMaxTemperatureMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMaxVoltage
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMaxVoltageMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMinClockRate
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMinClockRateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMinVoltage
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetMinVoltageMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetOverscan
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetOverscanMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPalette
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPaletteMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPhysicalDisplayWH
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPhysicalDisplayWHMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPitch
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPitchMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPixelOrder
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPixelOrderMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPowerState
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetPowerStateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetTemperature
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetTemperatureMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetTiming
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetTimingMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetTurbo
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetTurboMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetVideoCoreMemory
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetVideoCoreMemoryMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetVirtualBufferWH
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetVirtualBufferWHMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetVirtualOffset
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetVirtualOffsetMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetVoltage
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyGetVoltageMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyLockMemory
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyLockMemoryMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyReleaseBuffer
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyReleaseBufferMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyReleaseMemory
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyReleaseMemoryMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetAlphaMode
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetAlphaModeMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetClockRate
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetClockRateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetClockState
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetClockStateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetCursorInfo
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetCursorInfoMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetCursorState
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetCursorStateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetDepth
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetDepthMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetOverscan
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetOverscanMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetPalette
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetPaletteMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetPhysicalDisplayWH
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetPhysicalDisplayWHMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetPixelOrder
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetPixelOrderMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetPowerState
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetPowerStateMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetTurbo
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetTurboMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetVirtualBufferWH
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetVirtualBufferWHMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetVirtualOffset
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetVirtualOffsetMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetVoltage
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertySetVoltageMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestAlphaMode
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestAlphaModeMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestDepth
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestDepthMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestOverscan
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestOverscanMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestPalette
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestPaletteMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestPhysicalDisplayWH
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestPhysicalDisplayWHMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestPixelOrder
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestPixelOrderMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestVirtualBufferWH
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestVirtualBufferWHMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestVirtualOffset
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyTestVirtualOffsetMail
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyUnLockMemory
code	Board/RaspberryPi/include/mailbox.h	/^  uint32_t code;$/;"	m	struct:PropertyUnLockMemoryMail
codeSectionAddr	Kernel/include/thread.h	/^  uint32_t codeSectionAddr;$/;"	m	struct:VMMAssociatedSpace
color	Kernel/include/rbtree.h	/^  NodeColor color;$/;"	m	struct:RBNode
color	Libraries/LibGUI/include/gui_component.h	/^  Color color;$/;"	m	struct:Pixel
color	Libraries/LibGfx/include/gfx3d.h	/^  uint32_t color;$/;"	m	struct:Triangle
colorMode	Libraries/LibGUI/include/gui_component.h	/^  ColorMode colorMode;$/;"	m	struct:GUIComponent
commandLineStr	Board/RaspberryPi/include/mailbox.h	/^  uint8_t commandLineStr;$/;"	m	struct:PropertyGetCommandLine
component	Libraries/LibGUI/include/gui_animation.h	/^  GUIComponent *component;$/;"	m	struct:GUIAnimation
component	Libraries/LibGUI/include/gui_button.h	/^  GUIComponent component;$/;"	m	struct:GUIButton
component	Libraries/LibGUI/include/gui_canvas.h	/^  GUIComponent component;$/;"	m	struct:GUICanvas
component	Libraries/LibGUI/include/gui_container.h	/^  GUIComponent component;$/;"	m	struct:GUIContainer
component	Libraries/LibGUI/include/gui_label.h	/^  GUIComponent component;$/;"	m	struct:GUILabel
component	Libraries/LibGUI/include/gui_panel.h	/^  GUIComponent component;$/;"	m	struct:GUIPanel
component	Libraries/LibGUI/include/gui_view3d.h	/^  GUIComponent component;$/;"	m	struct:GUIView3D
component	Libraries/LibGUI/include/gui_window.h	/^  GUIComponent component;$/;"	m	struct:GUIWindow
control	Board/RaspberryPi/include/timer.h	/^  timer_control_reg_t control;$/;"	m	struct:__anon3
cosf	Libraries/LibMath/src/math.c	/^float cosf(float x) { return __builtin_cosf(x); }$/;"	f
count	Kernel/include/semphore.h	/^  Atomic *count;$/;"	m	struct:Semphore
counter	Kernel/include/atomic.h	/^  volatile uint32_t counter;$/;"	m	struct:Atomic
counter_high	Board/RaspberryPi/include/timer.h	/^  uint32_t counter_high;$/;"	m	struct:__anon3
counter_low	Board/RaspberryPi/include/timer.h	/^  uint32_t counter_low;$/;"	m	struct:__anon3
cpsr_value	Kernel/src/interrupt.c	/^uint32_t cpsr_value() {$/;"	f
cpuAffinity	Kernel/include/thread.h	/^  CpuMask cpuAffinity;$/;"	m	struct:Thread
cpuContextSave	Kernel/include/thread.h	/^  CpuContextSave cpuContextSave;$/;"	m	struct:Thread
cpuId	Kernel/include/percpu.h	/^  CpuNum cpuId;$/;"	m	struct:PerCpu
cpu_restore_context	Kernel/src/exception.S	/^cpu_restore_context:$/;"	l
cpu_save_context	Kernel/src/exception.S	/^cpu_save_context:$/;"	l
createDirectoryEntry	Kernel/include/vfs_super_block.h	/^  SuperBlockCreateDirectoryEntry createDirectoryEntry;$/;"	m	struct:SuperBlockOperations
createIndexNode	Kernel/include/vfs_super_block.h	/^  SuperBlockCreateIndexNode createIndexNode;$/;"	m	struct:SuperBlockOperations
createOperation	Kernel/include/vfs_inode.h	/^  IndexNodeCreateOperation createOperation;$/;"	m	struct:IndexNodeOpeations
createTimestamp	Kernel/include/vfs_inode.h	/^  uint64_t createTimestamp;$/;"	m	struct:IndexNode
currCpu	Kernel/include/thread.h	/^  CpuNum currCpu;$/;"	m	struct:Thread
currentThread	Kernel/include/percpu.h	/^  Thread *currentThread;$/;"	m	struct:PerCpu
currentThread	Kernel/src/sched.c	/^Thread *currentThread = nullptr;$/;"	v
currentX	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t currentX;$/;"	m	struct:GUIAnimationTranslation
currentY	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t currentY;$/;"	m	struct:GUIAnimationTranslation
current_thread_stack	Kernel/src/sched.c	/^uint32_t current_thread_stack = 0;$/;"	v
data	Board/RaspberryPi/include/mailbox.h	/^  uint32_t data : 28;$/;"	m	struct:MailMessage
dataSectionAddr	Kernel/include/thread.h	/^  uint32_t dataSectionAddr;$/;"	m	struct:VMMAssociatedSpace
data_abort_handler	Kernel/src/interrupt.c	/^void __attribute__((interrupt("ABORT"))) data_abort_handler(void) {}$/;"	f
default_heap_alloc_func	Kernel/src/kheap.c	/^void default_heap_alloc_func(void *ptr, uint32_t size) {$/;"	f
default_heap_free_func	Kernel/src/kheap.c	/^void default_heap_free_func(void *ptr) {$/;"	f
deleteOperation	Kernel/include/vfs_dentry.h	/^  DirectoryEntryDeleteOperation deleteOperation;$/;"	m	struct:DirectoryEntryOperations
deleteOperation	Kernel/include/vfs_inode.h	/^  IndexNodeDeleteOperation deleteOperation;$/;"	m	struct:IndexNodeOpeations
desktop	Libraries/LibGfx/src/font8bits.c	/^uint32_t *desktop() { return (uint32_t *)desktop_buffer; }$/;"	f
desktop_buffer	Libraries/LibGfx/src/font8bits.c	/^static const uint32_t desktop_buffer[1024 * 768] = {$/;"	v	file:
deviceId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t deviceId;$/;"	m	struct:PropertyGetPowerState
deviceId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t deviceId;$/;"	m	struct:PropertyGetTiming
deviceId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t deviceId;$/;"	m	struct:PropertySetPowerState
disable_interrupt	Kernel/src/interrupt.c	/^void disable_interrupt() {$/;"	f
dispmanxResourceHandle	Board/RaspberryPi/include/mailbox.h	/^  uint32_t dispmanxResourceHandle;$/;"	m	struct:PropertyGetDispmanxResourceMemHandle
dist	Libraries/LibGfx/src/gfx3d.c	/^float dist(Vec3D plane_p, Vec3D plane_n, Vec3D *p) {$/;"	f
do_uart_get_char	Board/RaspberryPi/src/uart.c	/^uint8_t do_uart_get_char(void) {$/;"	f
do_uart_put_char	Board/RaspberryPi/src/uart.c	/^static void do_uart_put_char(uint8_t character) {$/;"	f	file:
draw_task_bar	Kernel/src/init.c	/^void draw_task_bar() {$/;"	f
drawline	Libraries/LibGfx/src/gfx2d.c	/^void drawline(Gfx2DContext context, int sx, int ex, int ny, int c) {$/;"	f
empty	Board/RaspberryPi/include/mailbox.h	/^  uint8_t empty : 1;$/;"	m	struct:MailStatus
enable	Board/RaspberryPi/include/mailbox.h	/^  uint32_t enable;$/;"	m	struct:PropertySetCursorState
enable_cntv	Board/RaspberryPi/src/timer.c	/^void enable_cntv(void) {$/;"	f
enable_core0_irq	Board/RaspberryPi/src/timer.c	/^void enable_core0_irq(void) { io_writel(0x8, 0x40000040); }$/;"	f
enable_interrupt	Kernel/src/interrupt.c	/^void enable_interrupt() {$/;"	f
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyAllocateBufferMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyAllocateMemoryMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyBlankScreenMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyExecuteCodeMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetAlphaModeMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetArmMemoryMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetBoardMacAddressMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetBoardModelMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetBoardRevisionMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetBoardSerialMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetClockRateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetClockStateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetClocksMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetCommandLineMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetDMAChannelsMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetDepthMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetDispmanxResourceMemHandleMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetEDIDBlockMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetFirmwareRevisionMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetMaxClockRateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetMaxTemperatureMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetMaxVoltageMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetMinClockRateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetMinVoltageMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetOverscanMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetPaletteMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetPhysicalDisplayWHMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetPitchMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetPixelOrderMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetPowerStateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetTemperatureMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetTimingMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetTurboMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetVideoCoreMemoryMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetVirtualBufferWHMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetVirtualOffsetMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyGetVoltageMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyLockMemoryMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyReleaseBufferMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyReleaseMemoryMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetAlphaModeMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetClockRateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetClockStateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetCursorInfoMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetCursorStateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetDepthMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetOverscanMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetPaletteMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetPhysicalDisplayWHMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetPixelOrderMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetPowerStateMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetTurboMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetVirtualBufferWHMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetVirtualOffsetMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertySetVoltageMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyTestAlphaModeMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyTestDepthMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyTestOverscanMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyTestPaletteMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyTestPhysicalDisplayWHMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyTestPixelOrderMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyTestVirtualBufferWHMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyTestVirtualOffsetMail
end	Board/RaspberryPi/include/mailbox.h	/^  uint32_t end;$/;"	m	struct:PropertyUnLockMemoryMail
entry	Kernel/include/thread.h	/^  ThreadStartRoutine entry;$/;"	m	struct:Thread
exception_vector_table	Kernel/src/exception.S	/^exception_vector_table:$/;"	l
exit	Modules/ELFLoadModule/src/elf.c	/^KernelStatus exit() { return OK; }$/;"	f
exit	Modules/ELFLoadModule/src/elf.c	/^ModuleExit(exit);/;"	v
extra	Kernel/include/thread.h	/^  uint32_t extra[2];$/;"	m	struct:CpuContextSave
f8	Libraries/LibGfx/src/font8bits.c	/^static const char f8[128][8] = {$/;"	v	file:
fYaw	Libraries/LibGUI/include/gui_view3d.h	/^  float fYaw;$/;"	m	struct:GUIView3D
fast_interrupt_handler	Kernel/src/interrupt.c	/^void __attribute__((interrupt("FIQ"))) fast_interrupt_handler(void) {}$/;"	f
fileName	Kernel/include/vfs_dentry.h	/^  char *fileName;$/;"	m	struct:DirectoryEntry
fileName	Kernel/include/vfs_super_block.h	/^  char *fileName;$/;"	m	struct:SuperBlock
fileNameHash	Kernel/include/vfs_dentry.h	/^  uint64_t fileNameHash;$/;"	m	struct:DirectoryEntry
fileSize	Kernel/include/vfs_inode.h	/^  uint32_t fileSize;$/;"	m	struct:IndexNode
fileSystems	Kernel/src/vfs.c	/^SuperBlock *fileSystems = nullptr;$/;"	v
firmwareRevision	Board/RaspberryPi/include/mailbox.h	/^  uint32_t firmwareRevision;$/;"	m	struct:PropertyGetFirmwareRevision
first	Board/RaspberryPi/include/mailbox.h	/^  uint32_t first;$/;"	m	struct:PropertySetPalette
first	Board/RaspberryPi/include/mailbox.h	/^  uint32_t first;$/;"	m	struct:PropertyTestPalette
flag	Kernel/include/barrier.h	/^  uint32_t flag;$/;"	m	struct:Barrier
flags	Board/RaspberryPi/include/mailbox.h	/^  uint32_t flags;$/;"	m	struct:PropertyAllocateMemory
flags	Board/RaspberryPi/include/mailbox.h	/^  uint32_t flags;$/;"	m	struct:PropertySetCursorState
flags	Kernel/include/thread.h	/^  uint32_t flags;$/;"	m	struct:Thread
fmax	Libraries/LibMath/src/math.c	/^float fmax(float x, float y) { return x > y ? x : y; }$/;"	f
fmod	Libraries/LibMath/src/math.c	/^float fmod(float x, float y) { return __builtin_fmod(x, y); }$/;"	f
fontSize	Applications/Console/include/console.h	/^  uint32_t fontSize;$/;"	m	struct:Console
fontSize	Libraries/LibGUI/include/gui_button.h	/^  uint32_t fontSize;$/;"	m	struct:GUIButton
fontSize	Libraries/LibGUI/include/gui_label.h	/^  uint32_t fontSize;$/;"	m	struct:GUILabel
font_8_bits	Libraries/LibGfx/src/font8bits.c	/^uint8_t *font_8_bits(int c) { return (uint8_t *)f8[c]; }$/;"	f
foreground	Libraries/LibGUI/include/gui_component.h	/^  Color foreground;$/;"	m	struct:GUIComponent
foregroundColor	Applications/Console/include/console.h	/^  uint32_t foregroundColor;$/;"	m	struct:Console
fp	Kernel/include/thread.h	/^  uint32_t fp;$/;"	m	struct:CpuContextSave
framebufferHeight	Board/RaspberryPi/src/framebuffer.c	/^uint32_t framebufferHeight;$/;"	v
framebufferWidth	Board/RaspberryPi/src/framebuffer.c	/^uint32_t framebufferWidth;$/;"	v
framebuffer_clear	Board/RaspberryPi/src/framebuffer.c	/^void framebuffer_clear(uint32_t color) {$/;"	f
framebuffer_draw_pixel	Board/RaspberryPi/src/framebuffer.c	/^void framebuffer_draw_pixel(uint32_t x, uint32_t y, char r, char g, char b) {$/;"	f
framebuffer_get_height	Board/RaspberryPi/src/framebuffer.c	/^uint32_t framebuffer_get_height(void){return framebufferHeight;}$/;"	f
framebuffer_get_width	Board/RaspberryPi/src/framebuffer.c	/^uint32_t framebuffer_get_width(void){return framebufferWidth;}$/;"	f
framebuffer_init	Board/RaspberryPi/src/framebuffer.c	/^int framebuffer_init(void) {$/;"	f
freeListHead	Kernel/src/kheap.c	/^HeapArea *freeListHead;$/;"	v
full	Board/RaspberryPi/include/mailbox.h	/^  uint8_t full : 1;$/;"	m	struct:MailStatus
functionPointer	Board/RaspberryPi/include/mailbox.h	/^  uint32_t functionPointer;$/;"	m	struct:PropertyExecuteCode
g	Libraries/LibGUI/include/gui_component.h	/^  uint8_t g;$/;"	m	struct:Color
generic_timer_init	Board/RaspberryPi/src/timer.c	/^void generic_timer_init(void) {$/;"	f
generic_timer_irq_clear	Board/RaspberryPi/src/timer.c	/^void generic_timer_irq_clear(void) {$/;"	f
generic_timer_irq_handler	Board/RaspberryPi/src/timer.c	/^void generic_timer_irq_handler(void) {$/;"	f
getArgsNumFromFormatString	Libraries/LibC/src/stdlib.c	/^uint32_t getArgsNumFromFormatString(const char *formatStr) {$/;"	f
getIRQController	Kernel/src/interrupt.c	/^rpi_irq_controller_t *getIRQController(void) { return rpiIRQController; }$/;"	f
getMax	Kernel/include/rbtree.h	/^  RbTreeGetMaxNode getMax;$/;"	m	struct:RBTreeOperations
getMin	Kernel/include/rbtree.h	/^  RbTreeGetMinNode getMin;$/;"	m	struct:RBTreeOperations
getNameOperation	Kernel/include/vfs_dentry.h	/^  DirectoryEntryGetNameOperaction getNameOperation;$/;"	m	struct:DirectoryEntryOperations
getNextThread	Kernel/include/percpu.h	/^  PerCpuGetNextThread getNextThread;$/;"	m	struct:PerCpuOperations
getNode	Kernel/include/list.h	/^#define getNode(/;"	d
getOffsetFromString	Libraries/LibC/src/stdlib.c	/^char getOffsetFromString(char *formatStr, int32_t offset) { return *(formatStr + offset); }$/;"	f
gfx2d_draw_ascii	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_draw_ascii(Gfx2DContext context, int x, int y, uint8_t ch, uint32_t color) {$/;"	f
gfx2d_draw_bitmap	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_draw_bitmap(Gfx2DContext context, int x, int y, int width, int height, uint32_t *bitmap) {$/;"	f
gfx2d_draw_circle	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_draw_circle(Gfx2DContext context, int xc, int yc, int r, uint32_t c) {$/;"	f
gfx2d_draw_line	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_draw_line(Gfx2DContext context, int x1, int y1, int x2, int y2, uint32_t c) {$/;"	f
gfx2d_draw_logo	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_draw_logo(Gfx2DContext context, int x, int y, uint32_t c) {$/;"	f
gfx2d_draw_pixel	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_draw_pixel(Gfx2DContext context, int x, int y, uint32_t c) { gfx2d_write_pixel_color(context, x, y, c); }$/;"	f
gfx2d_draw_rect	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_draw_rect(Gfx2DContext context, int x1, int y1, int x2, int y2, uint32_t c) {$/;"	f
gfx2d_draw_triangle	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_draw_triangle(Gfx2DContext context, int x1, int y1, int x2, int y2, int x3, int y3, uint32_t c) {$/;"	f
gfx2d_fill_circle	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_fill_circle(Gfx2DContext context, int xc, int yc, int r, uint32_t c) {$/;"	f
gfx2d_fill_rect	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_fill_rect(Gfx2DContext context, int x1, int y1, int x2, int y2, uint32_t c) {$/;"	f
gfx2d_fill_triangle	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_fill_triangle(Gfx2DContext context, int x1, int y1, int x2, int y2, int x3, int y3, uint32_t c) {$/;"	f
gfx2d_write_pixel_color	Libraries/LibGfx/src/gfx2d.c	/^void gfx2d_write_pixel_color(Gfx2DContext context, uint32_t x, uint32_t y, uint32_t c) {$/;"	f
gfx3d_color1i2v	Libraries/LibGfx/src/gfx3d.c	/^Vec3D gfx3d_color1i2v(uint32_t color) {$/;"	f
gfx3d_color3f	Libraries/LibGfx/src/gfx3d.c	/^Vec3D gfx3d_color3f(float r, float g, float b) {$/;"	f
gfx3d_color3i	Libraries/LibGfx/src/gfx3d.c	/^uint32_t gfx3d_color3i(uint32_t r, uint32_t g, uint32_t b) {$/;"	f
gfx3d_colorv21i	Libraries/LibGfx/src/gfx3d.c	/^uint32_t gfx3d_colorv21i(Vec3D color) {$/;"	f
gfx3d_get_ambient_color	Libraries/LibGfx/src/gfx3d.c	/^Vec3D gfx3d_get_ambient_color(Vec3D mamb, Vec3D gamb) {$/;"	f
gfx3d_get_attenuation_factor	Libraries/LibGfx/src/gfx3d.c	/^float gfx3d_get_attenuation_factor(float d) {$/;"	f
gfx3d_get_diffuse_color	Libraries/LibGfx/src/gfx3d.c	/^Vec3D gfx3d_get_diffuse_color(Vec3D mdiff, Vec3D sdiff, Vec3D normal, Vec3D light) {$/;"	f
gfx3d_get_lum_color	Libraries/LibGfx/src/gfx3d.c	/^uint32_t gfx3d_get_lum_color(uint32_t color, float lum) {$/;"	f
gfx3d_get_specular_color	Libraries/LibGfx/src/gfx3d.c	/^Vec3D gfx3d_get_specular_color(Vec3D mspec, Vec3D sspec, float lum) {$/;"	f
gfx3d_get_specular_color_shiness	Libraries/LibGfx/src/gfx3d.c	/^Vec3D gfx3d_get_specular_color_shiness(Vec3D mspec, Vec3D sspec, Vec3D normal, Vec3D light, float shiness) {$/;"	f
gfx3d_matrix_make_identity	Libraries/LibGfx/src/gfx3d.c	/^Mat4x4 gfx3d_matrix_make_identity() {$/;"	f
gfx3d_matrix_make_projection	Libraries/LibGfx/src/gfx3d.c	/^Mat4x4 gfx3d_matrix_make_projection(float fovDegree, float aspectRatio, float near, float far) {$/;"	f
gfx3d_matrix_make_rotationX	Libraries/LibGfx/src/gfx3d.c	/^Mat4x4 gfx3d_matrix_make_rotationX(float angle) {$/;"	f
gfx3d_matrix_make_rotationY	Libraries/LibGfx/src/gfx3d.c	/^Mat4x4 gfx3d_matrix_make_rotationY(float angle) {$/;"	f
gfx3d_matrix_make_rotationZ	Libraries/LibGfx/src/gfx3d.c	/^Mat4x4 gfx3d_matrix_make_rotationZ(float angle) {$/;"	f
gfx3d_matrix_make_translation	Libraries/LibGfx/src/gfx3d.c	/^Mat4x4 gfx3d_matrix_make_translation(float x, float y, float z) {$/;"	f
gfx3d_matrix_point_at	Libraries/LibGfx/src/gfx3d.c	/^Mat4x4 gfx3d_matrix_point_at(Vec3D *pos, Vec3D *target, Vec3D *up) {$/;"	f
gfx3d_triangle_clip_against_plane	Libraries/LibGfx/src/gfx3d.c	/^int gfx3d_triangle_clip_against_plane(Vec3D plane_p, Vec3D plane_n, Triangle *in_tri, Triangle *out_tri1,$/;"	f
gfx3d_vector_intersect_plane	Libraries/LibGfx/src/gfx3d.c	/^Vec3D gfx3d_vector_intersect_plane(Vec3D *plane_p, Vec3D *plane_n, Vec3D *lineStart, Vec3D *lineEnd) {$/;"	f
gfx3d_vertex3f	Libraries/LibGfx/src/gfx3d.c	/^Vec3D gfx3d_vertex3f(float x, float y, float z) {$/;"	f
gfxm_matrix_multiply_matrix	Libraries/LibGfx/src/gfxm.c	/^Mat4x4 gfxm_matrix_multiply_matrix(Mat4x4 m1, Mat4x4 m2) {$/;"	f
gfxm_matrix_multiply_vector	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_matrix_multiply_vector(Mat4x4 m, Vec3D i) {$/;"	f
gfxm_matrix_quick_inverse	Libraries/LibGfx/src/gfxm.c	/^Mat4x4 gfxm_matrix_quick_inverse(Mat4x4 m) {$/;"	f
gfxm_vector_add	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_vector_add(Vec3D v1, Vec3D v2) {$/;"	f
gfxm_vector_cross_product	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_vector_cross_product(Vec3D v1, Vec3D v2) {$/;"	f
gfxm_vector_div	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_vector_div(Vec3D v1, float k) {$/;"	f
gfxm_vector_div_vector	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_vector_div_vector(Vec3D v1, Vec3D v2) {$/;"	f
gfxm_vector_dot_product	Libraries/LibGfx/src/gfxm.c	/^float gfxm_vector_dot_product(Vec3D v1, Vec3D v2) { return v1.x * v2.x + v1.y * v2.y + v1.z * v2.z; }$/;"	f
gfxm_vector_length	Libraries/LibGfx/src/gfxm.c	/^float gfxm_vector_length(Vec3D v) { return Q_rsqrt(gfxm_vector_dot_product(v, v)); }$/;"	f
gfxm_vector_mul	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_vector_mul(Vec3D v1, float k) {$/;"	f
gfxm_vector_mul_vector	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_vector_mul_vector(Vec3D v1, Vec3D v2) {$/;"	f
gfxm_vector_normalise	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_vector_normalise(Vec3D v1) {$/;"	f
gfxm_vector_sub	Libraries/LibGfx/src/gfxm.c	/^Vec3D gfxm_vector_sub(Vec3D v1, Vec3D v2) {$/;"	f
gpu_flush	Board/RaspberryPi/src/gpu.c	/^uint32_t *gpu_flush(int arg) {$/;"	f
gpu_init	Board/RaspberryPi/src/gpu.c	/^void gpu_init(void) {$/;"	f
gpu_write_pixel_color	Board/RaspberryPi/src/gpu.c	/^void gpu_write_pixel_color(uint32_t x, uint32_t y, uint32_t c) {$/;"	f
gui_animation_translation_create	Libraries/LibGUI/src/gui_animation.c	/^void gui_animation_translation_create(GUIAnimationTranslation *animation, GUIComponent *component, uint32_t time,$/;"	f
gui_animation_update	Libraries/LibGUI/src/gui_animation.c	/^void gui_animation_update(GUIAnimation *animation) {$/;"	f
gui_button_create	Libraries/LibGUI/src/gui_button.c	/^void gui_button_create(GUIButton *button) {$/;"	f
gui_button_draw	Libraries/LibGUI/src/gui_button.c	/^void gui_button_draw(GUIButton *button) {$/;"	f
gui_button_init	Libraries/LibGUI/src/gui_button.c	/^void gui_button_init(GUIButton *button, uint32_t x, uint32_t y, const char *text) {$/;"	f
gui_canvas_clear	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_clear(GUICanvas *canvas, uint32_t color) {$/;"	f
gui_canvas_create	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_create(GUICanvas *canvas) {$/;"	f
gui_canvas_draw	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_draw(GUICanvas *canvas) {$/;"	f
gui_canvas_draw_ascii	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_draw_ascii(GUICanvas *canvas, int x, int y, uint8_t ch, uint32_t color) {$/;"	f
gui_canvas_draw_bitmap	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_draw_bitmap(GUICanvas *canvas, int x, int y, int width, int height, uint32_t *buffer) {$/;"	f
gui_canvas_draw_circle	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_draw_circle(GUICanvas *canvas, int xc, int yc, int r, uint32_t c) {$/;"	f
gui_canvas_draw_line	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_draw_line(GUICanvas *canvas, int x1, int y1, int x2, int y2, uint32_t c) {$/;"	f
gui_canvas_draw_pixel	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_draw_pixel(GUICanvas *canvas, int x, int y, uint32_t c) {$/;"	f
gui_canvas_draw_rect	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_draw_rect(GUICanvas *canvas, int x1, int y1, int x2, int y2, uint32_t c) {$/;"	f
gui_canvas_draw_triangle	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_draw_triangle(GUICanvas *canvas, int x1, int y1, int x2, int y2, int x3, int y3, uint32_t c) {$/;"	f
gui_canvas_fill_circle	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_fill_circle(GUICanvas *canvas, int xc, int yc, int r, uint32_t c) {$/;"	f
gui_canvas_fill_rect	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_fill_rect(GUICanvas *canvas, int x1, int y1, int x2, int y2, uint32_t c) {$/;"	f
gui_canvas_fill_triangle	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_fill_triangle(GUICanvas *canvas, int x1, int y1, int x2, int y2, int x3, int y3, uint32_t c) {$/;"	f
gui_canvas_init	Libraries/LibGUI/src/gui_canvas.c	/^void gui_canvas_init(GUICanvas *canvas, uint32_t x, uint32_t y) {$/;"	f
gui_container_add_children	Libraries/LibGUI/src/gui_container.c	/^void gui_container_add_children(GUIContainer *container, GUIComponent *component) {$/;"	f
gui_container_create	Libraries/LibGUI/src/gui_container.c	/^void gui_container_create(GUIContainer *container) {$/;"	f
gui_container_draw	Libraries/LibGUI/src/gui_container.c	/^void gui_container_draw(GUIContainer *container) {$/;"	f
gui_container_draw_children	Libraries/LibGUI/src/gui_container.c	/^void gui_container_draw_children(GUIContainer *container, Orientation orientation) {$/;"	f
gui_container_init	Libraries/LibGUI/src/gui_container.c	/^void gui_container_init(GUIContainer *container, uint32_t x, uint32_t y, Orientation orientation) {$/;"	f
gui_label_create	Libraries/LibGUI/src/gui_label.c	/^void gui_label_create(GUILabel *label) {$/;"	f
gui_label_draw	Libraries/LibGUI/src/gui_label.c	/^void gui_label_draw(GUILabel *label) {$/;"	f
gui_label_init	Libraries/LibGUI/src/gui_label.c	/^void gui_label_init(GUILabel *label, uint32_t x, uint32_t y, const char *text) {$/;"	f
gui_panel_add_children	Libraries/LibGUI/src/gui_panel.c	/^void gui_panel_add_children(GUIPanel *panel, GUIComponent *component) {$/;"	f
gui_panel_create	Libraries/LibGUI/src/gui_panel.c	/^void gui_panel_create(GUIPanel *panel) {$/;"	f
gui_panel_draw	Libraries/LibGUI/src/gui_panel.c	/^void gui_panel_draw(GUIPanel *panel) {$/;"	f
gui_panel_draw_children	Libraries/LibGUI/src/gui_panel.c	/^void gui_panel_draw_children(GUIPanel *panel) {$/;"	f
gui_panel_init	Libraries/LibGUI/src/gui_panel.c	/^void gui_panel_init(GUIPanel *panel, uint32_t x, uint32_t y) {$/;"	f
gui_view3d_create	Libraries/LibGUI/src/gui_view3d.c	/^void gui_view3d_create(GUIView3D *view) {$/;"	f
gui_view3d_draw	Libraries/LibGUI/src/gui_view3d.c	/^void gui_view3d_draw(GUIView3D *view) {$/;"	f
gui_view3d_init	Libraries/LibGUI/src/gui_view3d.c	/^void gui_view3d_init(GUIView3D *view, uint32_t x, uint32_t y) {$/;"	f
gui_window_add_children	Libraries/LibGUI/src/gui_window.c	/^void gui_window_add_children(GUIWindow *window, GUIComponent *component) {$/;"	f
gui_window_create	Libraries/LibGUI/src/gui_window.c	/^void gui_window_create(GUIWindow *window) {$/;"	f
gui_window_draw	Libraries/LibGUI/src/gui_window.c	/^void gui_window_draw(GUIWindow *window) {$/;"	f
gui_window_draw_children	Libraries/LibGUI/src/gui_window.c	/^void gui_window_draw_children(GUIWindow *window) {$/;"	f
gui_window_init	Libraries/LibGUI/src/gui_window.c	/^void gui_window_init(GUIWindow *window, uint32_t x, uint32_t y, const char *title) {$/;"	f
halt_cpu	Kernel/src/exception.S	/^halt_cpu:$/;"	l
handle	Board/RaspberryPi/include/mailbox.h	/^  uint32_t handle;$/;"	m	struct:PropertyAllocateMemory
handle	Board/RaspberryPi/include/mailbox.h	/^  uint32_t handle;$/;"	m	struct:PropertyLockMemory
handle	Board/RaspberryPi/include/mailbox.h	/^  uint32_t handle;$/;"	m	struct:PropertyReleaseMemory
handle	Board/RaspberryPi/include/mailbox.h	/^  uint32_t handle;$/;"	m	struct:PropertyUnLockMemory
hardLinkOperation	Kernel/include/vfs_inode.h	/^  IndexNodeHardLinkOperation hardLinkOperation;$/;"	m	struct:IndexNodeOpeations
hashOperation	Kernel/include/vfs_dentry.h	/^  DirectoryEntryHashOperation hashOperation;$/;"	m	struct:DirectoryEntryOperations
heapAllocFunc	Kernel/src/kheap.c	/^static heap_alloc_func heapAllocFunc = nullptr;$/;"	v	file:
heapFreeFunc	Kernel/src/kheap.c	/^static heap_free_func heapFreeFunc = nullptr;$/;"	v	file:
heap_alloc_func	Kernel/include/kheap.h	/^typedef void (*heap_alloc_func)(void *ptr, uint32_t size);$/;"	t
heap_free_func	Kernel/include/kheap.h	/^typedef void (*heap_free_func)(void *ptr);$/;"	t
height	Applications/Console/include/console.h	/^  uint32_t height;$/;"	m	struct:Console
height	Board/RaspberryPi/include/mailbox.h	/^  uint32_t height;$/;"	m	struct:PropertyGetPhysicalDisplayWH
height	Board/RaspberryPi/include/mailbox.h	/^  uint32_t height;$/;"	m	struct:PropertyGetVirtualBufferWH
height	Board/RaspberryPi/include/mailbox.h	/^  uint32_t height;$/;"	m	struct:PropertySetCursorInfo
height	Board/RaspberryPi/include/mailbox.h	/^  uint32_t height;$/;"	m	struct:PropertySetPhysicalDisplayWH
height	Board/RaspberryPi/include/mailbox.h	/^  uint32_t height;$/;"	m	struct:PropertySetVirtualBufferWH
height	Board/RaspberryPi/include/mailbox.h	/^  uint32_t height;$/;"	m	struct:PropertyTestPhysicalDisplayWH
height	Board/RaspberryPi/include/mailbox.h	/^  uint32_t height;$/;"	m	struct:PropertyTestVirtualBufferWH
height	Libraries/LibGUI/include/gui_component.h	/^  uint32_t height;$/;"	m	struct:Size
height	Libraries/LibGfx/include/gfx2d.h	/^  uint32_t height;$/;"	m	struct:Gfx2DContext
hint	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t hint : 1;  \/* In a block of 16 contiguous entries *\/$/;"	m	struct:PageTableEntry
hotSpotX	Board/RaspberryPi/include/mailbox.h	/^  uint32_t hotSpotX;$/;"	m	struct:PropertySetCursorInfo
hotSpotY	Board/RaspberryPi/include/mailbox.h	/^  uint32_t hotSpotY;$/;"	m	struct:PropertySetCursorInfo
i16	Board/RaspberryPi/include/led.h	/^typedef short              i16;$/;"	t
i32	Board/RaspberryPi/include/led.h	/^typedef int                i32;$/;"	t
i8	Board/RaspberryPi/include/led.h	/^typedef char               i8;$/;"	t
id	Board/RaspberryPi/include/mailbox.h	/^  uint32_t id;$/;"	m	struct:PropertyGetTurbo
id	Board/RaspberryPi/include/mailbox.h	/^  uint32_t id;$/;"	m	struct:PropertySetTurbo
id	Kernel/include/vfs_inode.h	/^  uint64_t id;$/;"	m	struct:IndexNode
id	Tests/include/kvector_test.h	/^  uint32_t id;$/;"	m	struct:TestElement
idleThread	Kernel/include/percpu.h	/^  Thread *idleThread;$/;"	m	struct:PerCpu
idleTime	Kernel/include/percpu.h	/^  uint32_t idleTime;$/;"	m	struct:CpuStatus
idle_thread_routine	Kernel/src/thread.c	/^uint32_t *idle_thread_routine(int arg) {$/;"	f
index	Kernel/include/kvector.h	/^  uint32_t index;$/;"	m	struct:KernelVector
indexNode	Kernel/include/vfs_dentry.h	/^  struct IndexNode *indexNode;$/;"	m	struct:DirectoryEntry	typeref:struct:DirectoryEntry::IndexNode
init	Kernel/include/percpu.h	/^  PerCpuInit init;$/;"	m	struct:PerCpuOperations
init	Modules/ELFLoadModule/src/elf.c	/^KernelStatus init() { return OK; }$/;"	f
init	Modules/ELFLoadModule/src/elf.c	/^ModuleName("elf") ModuleAuthor("neo") ModuleDescription(load module) ModuleInit(init);$/;"	v
initOperation	Kernel/include/vfs_dentry.h	/^  DirectoryEntryInitOperation initOperation;$/;"	m	struct:DirectoryEntryOperations
init_bsp	Board/RaspberryPi/src/synestia_os_hal.c	/^void init_bsp(void) {$/;"	f
init_interrupt	Kernel/src/interrupt.c	/^void init_interrupt() {$/;"	f
init_thread_struct	Kernel/src/thread.c	/^KernelStatus init_thread_struct(Thread *thread, const char *name) {$/;"	f
insert	Kernel/include/rbtree.h	/^  RBTreeInsertNode insert;$/;"	m	struct:RBTreeOperations
insertThread	Kernel/include/percpu.h	/^  PerCpuInsertThread insertThread;$/;"	m	struct:PerCpuOperations
int16_t	Libraries/LibC/include/stdint.h	/^typedef signed short int16_t;$/;"	t
int32_t	Libraries/LibC/include/stdint.h	/^typedef signed int int32_t;$/;"	t
int64_t	Libraries/LibC/include/stdint.h	/^typedef signed long long int64_t;$/;"	t
int8_t	Libraries/LibC/include/stdint.h	/^typedef signed char int8_t;$/;"	t
interrupt_clear_func	Kernel/src/interrupt.c	/^  void (*interrupt_clear_func)(void);$/;"	m	struct:irq_handler	file:
interrupt_handler	Kernel/src/interrupt.c	/^void interrupt_handler(void) {$/;"	f
interrupt_handler_func	Kernel/src/interrupt.c	/^  void (*interrupt_handler_func)(void);$/;"	m	struct:irq_handler	file:
interruptable	Kernel/include/thread.h	/^  bool interruptable;$/;"	m	struct:Thread
interupt_isp	Kernel/src/exception.S	/^interupt_isp:$/;"	l
io_readb	Kernel/src/io.c	/^uint8_t io_readb(void *addr) { return *(uint8_t *)addr; }$/;"	f
io_readl	Kernel/src/io.c	/^uint32_t io_readl(void *addr) { return *(uint32_t *)addr; }$/;"	f
io_readw	Kernel/src/io.c	/^uint16_t io_readw(void *addr) { return *(uint16_t *)addr; }$/;"	f
io_writeb	Kernel/src/io.c	/^void io_writeb(uint8_t val, void *addr) { *(uint8_t *)addr = val; }$/;"	f
io_writel	Kernel/src/io.c	/^void io_writel(uint32_t val, void *addr) { *(uint32_t *)addr = val; }$/;"	f
io_writew	Kernel/src/io.c	/^void io_writew(uint16_t val, void *addr) { *(uint16_t *)addr = val; }$/;"	f
irq_handler	Kernel/src/interrupt.c	/^typedef struct irq_handler {$/;"	s	file:
irq_handler_t	Kernel/src/interrupt.c	/^} irq_handler_t;$/;"	t	typeref:struct:irq_handler	file:
irq_handlers	Kernel/src/interrupt.c	/^irq_handler_t irq_handlers[IRQ_NUMS];$/;"	v
is_interrupt_enabled	Kernel/src/interrupt.c	/^uint32_t is_interrupt_enabled() {$/;"	f
itoa	Libraries/LibC/src/string.c	/^char *itoa(int num, char *str, int base) {$/;"	f
just_exit_interrupt	Kernel/src/exception.S	/^just_exit_interrupt:$/;"	l
kernelVMML1PT	Kernel/Arch/arm/vmm/src/vmm.c	/^L1PT *kernelVMML1PT;$/;"	v
kernelVMML2PT	Kernel/Arch/arm/vmm/src/vmm.c	/^L2PT *kernelVMML2PT;$/;"	v
kernelVMMPT	Kernel/Arch/arm/vmm/src/vmm.c	/^PT *kernelVMMPT;$/;"	v
kernel_main	Kernel/src/init.c	/^void kernel_main(void) {$/;"	f
kernel_main_tests	Tests/src/tests.c	/^void kernel_main_tests() {$/;"	f
kheap_alloc	Kernel/src/kheap.c	/^void *kheap_alloc(uint32_t size) {$/;"	f
kheap_alloc_aligned	Kernel/src/kheap.c	/^void *kheap_alloc_aligned(uint32_t size, uint32_t alignment) {$/;"	f
kheap_calloc	Kernel/src/kheap.c	/^void *kheap_calloc(uint32_t num, uint32_t size) { return kheap_alloc(num * size); }$/;"	f
kheap_free	Kernel/src/kheap.c	/^KernelStatus kheap_free(void *ptr) {$/;"	f
kheap_init	Kernel/src/kheap.c	/^KernelStatus kheap_init() {$/;"	f
kheap_realloc	Kernel/src/kheap.c	/^void *kheap_realloc(void *ptr, uint32_t size) {$/;"	f
kheap_set_alloc_callback	Kernel/src/kheap.c	/^void kheap_set_alloc_callback(heap_alloc_func callback) { heapAllocFunc = callback; }$/;"	f
kheap_set_free_callback	Kernel/src/kheap.c	/^void kheap_set_free_callback(heap_free_func callback) { heapFreeFunc = callback; }$/;"	f
klist_append	Kernel/src/list.c	/^KernelStatus klist_append(ListNode *list, ListNode *node) {$/;"	f
klist_get_head	Kernel/src/list.c	/^ListNode *klist_get_head(ListNode *node) {$/;"	f
klist_insert	Kernel/src/list.c	/^KernelStatus klist_insert(ListNode *list, ListNode *node) {$/;"	f
klist_remove_node	Kernel/src/list.c	/^ListNode *klist_remove_node(ListNode *node) {$/;"	f
klist_size	Kernel/src/list.c	/^uint32_t klist_size(ListNode *node) {$/;"	f
kqueue_dequeue	Kernel/src/kqueue.c	/^KQueue *kqueue_dequeue(KQueue *queue) {$/;"	f
kqueue_enqueue	Kernel/src/kqueue.c	/^KernelStatus kqueue_enqueue(KQueue *queue, KQueue *node) {$/;"	f
kqueue_size	Kernel/src/kqueue.c	/^uint32_t kqueue_size(KQueue *queue) { return klist_size(queue); }$/;"	f
kstack_allocate	Kernel/src/kstack.c	/^KernelStack *kstack_allocate() {$/;"	f
kstack_clear	Kernel/src/kstack.c	/^KernelStatus kstack_clear(KernelStack *stack) {$/;"	f
kstack_free	Kernel/src/kstack.c	/^KernelStatus kstack_free(KernelStack *stack) {$/;"	f
kstack_is_empty	Kernel/src/kstack.c	/^bool kstack_is_empty(KernelStack *stack) { return stack->top == stack->base; }$/;"	f
kstack_is_full	Kernel/src/kstack.c	/^bool kstack_is_full(KernelStack *stack) { return stack->top == stack->base - DEFAULT_KERNEL_STACK_SIZE; }$/;"	f
kstack_peek	Kernel/src/kstack.c	/^uint32_t kstack_peek(KernelStack *stack) { return *(uint32_t *)(stack->top); }$/;"	f
kstack_pop	Kernel/src/kstack.c	/^uint32_t kstack_pop(KernelStack *stack) {$/;"	f
kstack_push	Kernel/src/kstack.c	/^KernelStatus kstack_push(KernelStack *stack, uint32_t data) {$/;"	f
ktimer_sys_runtime	Kernel/src/ktimer.c	/^uint64_t ktimer_sys_runtime() { return sys_runtime_ms; }$/;"	f
ktimer_sys_runtime_tick	Kernel/src/ktimer.c	/^uint64_t ktimer_sys_runtime_tick(uint64_t tickIntreval) { sys_runtime_ms += tickIntreval; }$/;"	f
kvector_add	Kernel/src/kvector.c	/^KernelStatus kvector_add(KernelVector *vector, ListNode *node) {$/;"	f
kvector_allocate	Kernel/src/kvector.c	/^KernelVector *kvector_allocate() {$/;"	f
kvector_clear	Kernel/src/kvector.c	/^KernelStatus kvector_clear(KernelVector *vector) {$/;"	f
kvector_free	Kernel/src/kvector.c	/^KernelStatus kvector_free(KernelVector *vector) {$/;"	f
kvector_get	Kernel/src/kvector.c	/^ListNode *kvector_get(KernelVector *vector, uint32_t index) { return vector->node[index]; }$/;"	f
kvector_is_empty	Kernel/src/kvector.c	/^bool kvector_is_empty(KernelVector *vector) { return vector->index == 0; }$/;"	f
kvector_is_full	Kernel/src/kvector.c	/^bool kvector_is_full(KernelVector *vector) { return vector->index == vector->size; }$/;"	f
kvector_remove	Kernel/src/kvector.c	/^KernelStatus kvector_remove(KernelVector *vector, ListNode *index) {}$/;"	f
kvector_remove_index	Kernel/src/kvector.c	/^KernelStatus kvector_remove_index(KernelVector *vector, uint32_t index) {}$/;"	f
kvector_resize	Kernel/src/kvector.c	/^KernelStatus kvector_resize(KernelVector *vector, uint32_t newSize) {$/;"	f
kvector_size	Kernel/src/kvector.c	/^uint32_t kvector_size(KernelVector *vector) { return vector->index; }$/;"	f
lastAccessTimestamp	Kernel/include/vfs_inode.h	/^  uint64_t lastAccessTimestamp;$/;"	m	struct:IndexNode
lastCpu	Kernel/include/thread.h	/^  CpuNum lastCpu;$/;"	m	struct:Thread
lastUpdateTimestamp	Kernel/include/vfs_inode.h	/^  uint64_t lastUpdateTimestamp;$/;"	m	struct:IndexNode
leaveCounter	Kernel/include/barrier.h	/^  uint32_t leaveCounter;$/;"	m	struct:Barrier
led_init	Board/RaspberryPi/src/led.c	/^int led_init(void)$/;"	f
left	Board/RaspberryPi/include/mailbox.h	/^  uint32_t left;$/;"	m	struct:PropertyGetOverscan
left	Board/RaspberryPi/include/mailbox.h	/^  uint32_t left;$/;"	m	struct:PropertySetOverscan
left	Board/RaspberryPi/include/mailbox.h	/^  uint32_t left;$/;"	m	struct:PropertyTestOverscan
left	Kernel/include/rbtree.h	/^  struct RBNode *left;$/;"	m	struct:RBNode	typeref:struct:RBNode::RBNode
left	Libraries/LibGUI/include/gui_component.h	/^  uint32_t left;$/;"	m	struct:Margin
left	Libraries/LibGUI/include/gui_component.h	/^  uint32_t left;$/;"	m	struct:Padding
length	Board/RaspberryPi/include/mailbox.h	/^  uint32_t length;$/;"	m	struct:PropertySetPalette
length	Board/RaspberryPi/include/mailbox.h	/^  uint32_t length;$/;"	m	struct:PropertyTestPalette
level	Board/RaspberryPi/include/mailbox.h	/^  uint32_t level;$/;"	m	struct:PropertyGetTurbo
level	Board/RaspberryPi/include/mailbox.h	/^  uint32_t level;$/;"	m	struct:PropertySetTurbo
lfb	Board/RaspberryPi/src/framebuffer.c	/^unsigned char *lfb;$/;"	v
list	Kernel/include/kheap.h	/^  ListNode list;$/;"	m	struct:HeapArea
list	Kernel/include/vfs_dentry.h	/^  ListNode list;$/;"	m	struct:DirectoryEntry
listNode	Kernel/src/ktimer.c	/^  ListNode listNode;$/;"	m	struct:KernelTimer	file:
lock	Kernel/include/barrier.h	/^  Mutex lock;$/;"	m	struct:Barrier
lock	Kernel/include/spinlock.h	/^  Atomic lock;$/;"	m	struct:SpinLock
logo32	Libraries/LibGfx/src/font8bits.c	/^static const uint32_t logo32[32] = {$/;"	v	file:
logo_32_bits	Libraries/LibGfx/src/font8bits.c	/^uint32_t *logo_32_bits() { return (uint32_t *)logo32; }$/;"	f
logo_close_8_bits	Libraries/LibGfx/src/font8bits.c	/^uint8_t *logo_close_8_bits() { return (uint8_t *)close; }$/;"	f
logo_max_8_bits	Libraries/LibGfx/src/font8bits.c	/^uint8_t *logo_max_8_bits() { return (uint8_t *)max8; }$/;"	f
logo_minize_8_bits	Libraries/LibGfx/src/font8bits.c	/^uint8_t *logo_minize_8_bits() { return (uint8_t *)minize8; }$/;"	f
m	Libraries/LibGfx/include/gfxm.h	/^  float m[4][4];$/;"	m	struct:Mat4x4
magic	Kernel/include/thread.h	/^  uint32_t magic;$/;"	m	struct:Thread
mailbox	Board/RaspberryPi/src/framebuffer.c	/^volatile uint32_t __attribute__((aligned(16))) mailbox[36];$/;"	v
mailbox_call	Board/RaspberryPi/src/mailbox.c	/^MailMessage mailbox_call(MailMessage message) {$/;"	f
mailbox_read	Board/RaspberryPi/src/mailbox.c	/^MailMessage mailbox_read(uint8_t channel) {$/;"	f
mailbox_send	Board/RaspberryPi/src/mailbox.c	/^void mailbox_send(MailMessage msg) {$/;"	f
makeDirectionOperation	Kernel/include/vfs_inode.h	/^  IndexNodeMakeDirectionOperation makeDirectionOperation;$/;"	m	struct:IndexNodeOpeations
map_kernel_l1pt	Kernel/Arch/arm/vmm/src/vmm.c	/^void map_kernel_l1pt(uint64_t l1ptPhysicalAddress, uint64_t l2ptPhysicalAddress) {$/;"	f
map_kernel_l2pt	Kernel/Arch/arm/vmm/src/vmm.c	/^void map_kernel_l2pt(uint64_t l2ptPhysicalAddress, uint64_t ptPhysicalAddress) {$/;"	f
map_kernel_mm	Kernel/Arch/arm/vmm/src/vmm.c	/^void map_kernel_mm() {$/;"	f
map_kernel_pt	Kernel/Arch/arm/vmm/src/vmm.c	/^void map_kernel_pt(uint64_t ptPhysicalAddress) {$/;"	f
margin	Libraries/LibGUI/include/gui_component.h	/^  Margin margin;$/;"	m	struct:GUIComponent
mask	Board/RaspberryPi/include/mailbox.h	/^  uint32_t mask; \/\/ Bits 0-15: DMA channels 0-15 (0=do not use, 1=usable),Bits 16-31: reserved for future use$/;"	m	struct:PropertyGetDMAChannels
matProjection	Libraries/LibGUI/include/gui_view3d.h	/^  Mat4x4 matProjection;$/;"	m	struct:GUIView3D
max8	Libraries/LibGfx/src/font8bits.c	/^static const uint8_t max8[8] = {0b11111111, 0b11111111, 0b11000011, 0b11000011,$/;"	v	file:
memHandleForResource	Board/RaspberryPi/include/mailbox.h	/^  uint32_t memHandleForResource;$/;"	m	struct:PropertyGetDispmanxResourceMemHandle
memclean	Libraries/LibC/src/stdlib.c	/^void memclean(uint8_t *start, const uint8_t *end) {$/;"	f
memcpy	Libraries/LibC/src/string.c	/^void memcpy(void *dest, const void *src, uint32_t bytes) {$/;"	f
memset	Libraries/LibC/src/string.c	/^void *memset(char *s, int c, uint32_t n) {$/;"	f
mesh	Libraries/LibGUI/include/gui_view3d.h	/^  Mesh mesh;$/;"	m	struct:GUIView3D
minize8	Libraries/LibGfx/src/font8bits.c	/^static const uint8_t minize8[8] = {0b00000000, 0b00000000, 0b00000000, 0b00000000,$/;"	v	file:
mmu_disable	Kernel/Arch/arm/vmm/include/cache.h	/^static inline void mmu_disable() {$/;"	f
mmu_enable	Kernel/Arch/arm/vmm/include/cache.h	/^static inline void mmu_enable() {$/;"	f
mode	Kernel/include/vfs_inode.h	/^  uint16_t mode;$/;"	m	struct:IndexNode
mutex	Kernel/include/vfs_inode.h	/^  Mutex mutex;$/;"	m	struct:IndexNode
mutex	Kernel/src/ktimer.c	/^  Mutex *mutex;$/;"	m	struct:KernelTimer	file:
mutex_acquire	Kernel/src/mutex.c	/^bool mutex_acquire(Mutex *mutex) {$/;"	f
mutex_create	Kernel/src/mutex.c	/^void mutex_create(Mutex *mutex, Atomic *atomic) {$/;"	f
mutex_release	Kernel/src/mutex.c	/^void mutex_release(Mutex *mutex) { atomic_set(mutex->val, 0); }$/;"	f
name	Kernel/include/thread.h	/^  char name[THREAD_NAME_LENGTH];$/;"	m	struct:Thread
next	Kernel/include/list.h	/^  struct ListNode *next;$/;"	m	struct:ListNode	typeref:struct:ListNode::ListNode
ng	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t ng : 1;   \/* Not-Global *\/$/;"	m	struct:PageTableEntry
node	Kernel/include/interrupt.h	/^  ListNode node;$/;"	m	struct:TimerHandler
node	Kernel/include/kvector.h	/^  ListNode **node;$/;"	m	struct:KernelVector
node	Kernel/include/vfs_super_block.h	/^  ListNode node;$/;"	m	struct:SuperBlock
node	Libraries/LibGUI/include/gui_component.h	/^  ListNode node;$/;"	m	struct:GUIComponent
node	Libraries/LibGfx/include/gfx3d.h	/^  ListNode *node;$/;"	m	struct:Triangle
node	Tests/include/kvector_test.h	/^  ListNode node;$/;"	m	struct:TestElement
ns	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t ns : 1;   \/* Not-Secure *\/$/;"	m	struct:PageTableEntry
nst	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t nst : 1;  \/* Not-Secure *\/$/;"	m	struct:PageTableEntry
nullptr	Kernel/include/type.h	/^#define nullptr /;"	d
offsetOf	Kernel/include/list.h	/^#define offsetOf(/;"	d
operations	Kernel/include/percpu.h	/^  PerCpuOperations operations;$/;"	m	struct:PerCpu
operations	Kernel/include/rbtree.h	/^  RBTreeOperations operations;$/;"	m	struct:RBTree
operations	Kernel/include/spinlock.h	/^  SpinLockOperations operations;$/;"	m	struct:SpinLock
operations	Kernel/include/vfs_dentry.h	/^  DirectoryEntryOperations *operations;$/;"	m	struct:DirectoryEntry
operations	Kernel/include/vfs_inode.h	/^  IndexNodeOpeations *operations;$/;"	m	struct:IndexNode
operations	Kernel/include/vfs_super_block.h	/^  SuperBlockOperations *operations;$/;"	m	struct:SuperBlock
orientation	Libraries/LibGUI/include/gui_container.h	/^  Orientation orientation;$/;"	m	struct:GUIContainer
p	Libraries/LibGfx/include/gfx3d.h	/^  Vec3D p[3];$/;"	m	struct:Triangle
padding	Libraries/LibGUI/include/gui_component.h	/^  Padding padding;$/;"	m	struct:GUIComponent
pageTableAddr	Kernel/include/thread.h	/^  uint32_t pageTableAddr;$/;"	m	struct:VMMAssociatedSpace
page_alloc	Kernel/Arch/arm/vmm/src/page.c	/^uint64_t page_alloc(PhysicalPageUsage usage) {$/;"	f
page_alloc_huge_at	Kernel/Arch/arm/vmm/src/page.c	/^uint64_t page_alloc_huge_at(PhysicalPageUsage usage, uint64_t page, uint64_t size) {$/;"	f
page_free	Kernel/Arch/arm/vmm/src/page.c	/^uint64_t page_free(uint64_t pageIndex) {$/;"	f
page_free_huge	Kernel/Arch/arm/vmm/src/page.c	/^uint64_t page_free_huge(uint64_t page, uint64_t size) {$/;"	f
page_mark_as_free	Kernel/Arch/arm/vmm/src/page.c	/^void page_mark_as_free(uint64_t pageIndex) {$/;"	f
page_mark_as_used	Kernel/Arch/arm/vmm/src/page.c	/^void page_mark_as_used(uint64_t pageIndex) {$/;"	f
palette	Board/RaspberryPi/include/mailbox.h	/^  uint32_t palette[256]; \/\/ (offset to offset+length-1)$/;"	m	struct:PropertySetPalette
palette	Board/RaspberryPi/include/mailbox.h	/^  uint32_t palette[256]; \/\/ (offset to offset+length-1)$/;"	m	struct:PropertyTestPalette
palette	Board/RaspberryPi/include/mailbox.h	/^  uint32_t palette[256];$/;"	m	struct:PropertyGetPalette
parallelLock	Kernel/include/vfs_dentry.h	/^  SpinLock parallelLock;$/;"	m	struct:DirectoryEntry
parent	Kernel/include/rbtree.h	/^  struct RBNode *parent;$/;"	m	struct:RBNode	typeref:struct:RBNode::RBNode
parent	Kernel/include/vfs_dentry.h	/^  struct DirectoryEntry *parent;$/;"	m	struct:DirectoryEntry	typeref:struct:DirectoryEntry::DirectoryEntry
parentClockId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t parentClockId;$/;"	m	struct:PropertyGetClocks
pc	Kernel/include/thread.h	/^  uint32_t pc;$/;"	m	struct:CpuContextSave
perCpu	Kernel/src/percpu.c	/^PerCpu *perCpu = nullptr;$/;"	v
percpu_create	Kernel/src/percpu.c	/^KernelStatus percpu_create(uint32_t cpuNum) {$/;"	f
percpu_default_get_next_thread	Kernel/src/percpu.c	/^Thread *percpu_default_get_next_thread(PerCpu *perCpu) {$/;"	f
percpu_default_init	Kernel/src/percpu.c	/^KernelStatus percpu_default_init(PerCpu *perCpu, uint32_t num, Thread *idleThread) {$/;"	f
percpu_default_insert_thread	Kernel/src/percpu.c	/^KernelStatus percpu_default_insert_thread(PerCpu *perCpu, Thread *thread) {$/;"	f
percpu_default_remove_thread	Kernel/src/percpu.c	/^Thread *percpu_default_remove_thread(PerCpu *perCpu, Thread *thread) {$/;"	f
percpu_get	Kernel/src/percpu.c	/^PerCpu *percpu_get(CpuNum cpuNum) { return &perCpu[cpuNum]; }$/;"	f
percpu_min_priority	Kernel/src/percpu.c	/^PerCpu *percpu_min_priority() {$/;"	f
physicalPages	Kernel/Arch/arm/vmm/src/page.c	/^PhysicalPage physicalPages[PHYSICAL_PAGE_NUMBERS] = {'\\0'};$/;"	v
physicalPagesUsedBitMap	Kernel/Arch/arm/vmm/src/page.c	/^uint32_t physicalPagesUsedBitMap[PHYSICAL_PAGE_NUMBERS \/ BITS_IN_UINT32] = {'\\0'};$/;"	v
pid	Kernel/include/thread.h	/^  uint64_t pid;$/;"	m	struct:Thread
pidMap	Kernel/src/thread.c	/^uint32_t pidMap[2048] = {0};$/;"	v
pitch	Board/RaspberryPi/src/framebuffer.c	/^uint32_t pitch;$/;"	v
pointerToPixels	Board/RaspberryPi/include/mailbox.h	/^  uint32_t pointerToPixels;$/;"	m	struct:PropertySetCursorInfo
pos	Libraries/LibGUI/include/gui_component.h	/^  Position pos;$/;"	m	struct:Pixel
posX	Applications/Console/include/console.h	/^  uint32_t posX;$/;"	m	struct:Console
posX	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t posX;$/;"	m	struct:GUIAnimationTranslation
posY	Applications/Console/include/console.h	/^  uint32_t posY;$/;"	m	struct:Console
posY	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t posY;$/;"	m	struct:GUIAnimationTranslation
position	Libraries/LibGUI/include/gui_component.h	/^  Position position;$/;"	m	struct:GUIComponent
powf	Libraries/LibMath/src/math.c	/^float powf(float x, float y) { return __builtin_powf(x, y); }$/;"	f
prefetch_abort_handler	Kernel/src/interrupt.c	/^void __attribute__((interrupt("ABORT"))) prefetch_abort_handler(void) {}$/;"	f
prev	Kernel/include/list.h	/^  struct ListNode *prev;$/;"	m	struct:ListNode	typeref:struct:ListNode::ListNode
print	Libraries/LibC/src/stdlib.c	/^void print(const char *str) {$/;"	f
print_splash	Kernel/src/init.c	/^void print_splash() {$/;"	f
printf	Libraries/LibC/src/stdlib.c	/^int printf(const char *format, ...) {$/;"	f
priority	Kernel/include/percpu.h	/^  uint32_t priority;$/;"	m	struct:PerCpu
priority	Kernel/include/thread.h	/^  uint32_t priority;$/;"	m	struct:Thread
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyAllocateBuffer property;$/;"	m	struct:PropertyAllocateBufferMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyAllocateMemory property;$/;"	m	struct:PropertyAllocateMemoryMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyBlankScreen property;$/;"	m	struct:PropertyBlankScreenMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyExecuteCode property;$/;"	m	struct:PropertyExecuteCodeMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetAlphaMode property;$/;"	m	struct:PropertyGetAlphaModeMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetArmMemory property;$/;"	m	struct:PropertyGetArmMemoryMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetBoardMacAddress property;$/;"	m	struct:PropertyGetBoardMacAddressMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetBoardModel property;$/;"	m	struct:PropertyGetBoardModelMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetBoardRevision property;$/;"	m	struct:PropertyGetBoardRevisionMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetBoardSerial property;$/;"	m	struct:PropertyGetBoardSerialMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetClockRate property;$/;"	m	struct:PropertyGetClockRateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetClockState property;$/;"	m	struct:PropertyGetClockStateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetClocks property;$/;"	m	struct:PropertyGetClocksMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetCommandLine property;$/;"	m	struct:PropertyGetCommandLineMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetDMAChannels property;$/;"	m	struct:PropertyGetDMAChannelsMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetDepth property;$/;"	m	struct:PropertyGetDepthMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetDispmanxResourceMemHandle property;$/;"	m	struct:PropertyGetDispmanxResourceMemHandleMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetEDIDBlock property;$/;"	m	struct:PropertyGetEDIDBlockMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetFirmwareRevision property;$/;"	m	struct:PropertyGetFirmwareRevisionMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetMaxClockRate property;$/;"	m	struct:PropertyGetMaxClockRateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetMaxTemperature property;$/;"	m	struct:PropertyGetMaxTemperatureMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetMaxVoltage property;$/;"	m	struct:PropertyGetMaxVoltageMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetMinClockRate property;$/;"	m	struct:PropertyGetMinClockRateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetMinVoltage property;$/;"	m	struct:PropertyGetMinVoltageMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetOverscan property;$/;"	m	struct:PropertyGetOverscanMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetPalette property;$/;"	m	struct:PropertyGetPaletteMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetPhysicalDisplayWH property;$/;"	m	struct:PropertyGetPhysicalDisplayWHMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetPitch property;$/;"	m	struct:PropertyGetPitchMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetPixelOrder property;$/;"	m	struct:PropertyGetPixelOrderMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetPowerState property;$/;"	m	struct:PropertyGetPowerStateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetTemperature property;$/;"	m	struct:PropertyGetTemperatureMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetTiming property;$/;"	m	struct:PropertyGetTimingMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetTurbo property;$/;"	m	struct:PropertyGetTurboMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetVideoCoreMemory property;$/;"	m	struct:PropertyGetVideoCoreMemoryMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetVirtualBufferWH property;$/;"	m	struct:PropertyGetVirtualBufferWHMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetVirtualOffset property;$/;"	m	struct:PropertyGetVirtualOffsetMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyGetVoltage property;$/;"	m	struct:PropertyGetVoltageMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyLockMemory property;$/;"	m	struct:PropertyLockMemoryMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyReleaseBuffer property;$/;"	m	struct:PropertyReleaseBufferMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyReleaseMemory property;$/;"	m	struct:PropertyReleaseMemoryMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetAlphaMode property;$/;"	m	struct:PropertySetAlphaModeMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetClockRate property;$/;"	m	struct:PropertySetClockRateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetClockState property;$/;"	m	struct:PropertySetClockStateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetCursorInfo property;$/;"	m	struct:PropertySetCursorInfoMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetCursorState property;$/;"	m	struct:PropertySetCursorStateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetDepth property;$/;"	m	struct:PropertySetDepthMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetOverscan property;$/;"	m	struct:PropertySetOverscanMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetPalette property;$/;"	m	struct:PropertySetPaletteMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetPhysicalDisplayWH property;$/;"	m	struct:PropertySetPhysicalDisplayWHMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetPixelOrder property;$/;"	m	struct:PropertySetPixelOrderMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetPowerState property;$/;"	m	struct:PropertySetPowerStateMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetTurbo property;$/;"	m	struct:PropertySetTurboMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetVirtualBufferWH property;$/;"	m	struct:PropertySetVirtualBufferWHMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetVirtualOffset property;$/;"	m	struct:PropertySetVirtualOffsetMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertySetVoltage property;$/;"	m	struct:PropertySetVoltageMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyTestAlphaMode property;$/;"	m	struct:PropertyTestAlphaModeMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyTestDepth property;$/;"	m	struct:PropertyTestDepthMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyTestOverscan property;$/;"	m	struct:PropertyTestOverscanMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyTestPalette property;$/;"	m	struct:PropertyTestPaletteMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyTestPhysicalDisplayWH property;$/;"	m	struct:PropertyTestPhysicalDisplayWHMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyTestPixelOrder property;$/;"	m	struct:PropertyTestPixelOrderMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyTestVirtualBufferWH property;$/;"	m	struct:PropertyTestVirtualBufferWHMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyTestVirtualOffset property;$/;"	m	struct:PropertyTestVirtualOffsetMail
property	Board/RaspberryPi/include/mailbox.h	/^  PropertyUnLockMemory property;$/;"	m	struct:PropertyUnLockMemoryMail
pte	Kernel/Arch/arm/vmm/include/page.h	/^  PTE pte[KERNEL_L1PT_NUMBER];$/;"	m	struct:Level1PageTable
pte	Kernel/Arch/arm/vmm/include/page.h	/^  PTE pte[KERNEL_PTE_NUMBER * KERNEL_PTE_NUMBER];$/;"	m	struct:PageTable
pte	Kernel/Arch/arm/vmm/include/page.h	/^  PTE pte[KERNEL_PTE_NUMBER];$/;"	m	struct:Level2PageTable
put_char	Libraries/LibC/src/stdlib.c	/^void put_char(char c) { uart_put_char(c); }$/;"	f
pxn	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t pxn : 1;   \/* Privileged-XN *\/$/;"	m	struct:PageTableEntry
pxnt	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t pxnt : 1; \/* Privileged-XN *\/$/;"	m	struct:PageTableEntry
r	Libraries/LibGUI/include/gui_component.h	/^  uint8_t r;$/;"	m	struct:Color
r0	Board/RaspberryPi/include/mailbox.h	/^  uint32_t r0;$/;"	m	struct:PropertyExecuteCode
r1	Board/RaspberryPi/include/mailbox.h	/^  uint32_t r1;$/;"	m	struct:PropertyExecuteCode
r2	Board/RaspberryPi/include/mailbox.h	/^  uint32_t r2;$/;"	m	struct:PropertyExecuteCode
r3	Board/RaspberryPi/include/mailbox.h	/^  uint32_t r3;$/;"	m	struct:PropertyExecuteCode
r4	Board/RaspberryPi/include/mailbox.h	/^  uint32_t r4;$/;"	m	struct:PropertyExecuteCode
r4	Kernel/include/thread.h	/^  uint32_t r4;$/;"	m	struct:CpuContextSave
r5	Board/RaspberryPi/include/mailbox.h	/^  uint32_t r5;$/;"	m	struct:PropertyExecuteCode
r5	Kernel/include/thread.h	/^  uint32_t r5;$/;"	m	struct:CpuContextSave
r6	Kernel/include/thread.h	/^  uint32_t r6;$/;"	m	struct:CpuContextSave
r7	Kernel/include/thread.h	/^  uint32_t r7;$/;"	m	struct:CpuContextSave
r8	Kernel/include/thread.h	/^  uint32_t r8;$/;"	m	struct:CpuContextSave
r9	Kernel/include/thread.h	/^  uint32_t r9;$/;"	m	struct:CpuContextSave
rate	Board/RaspberryPi/include/mailbox.h	/^  uint32_t rate;$/;"	m	struct:PropertyGetClockRate
rate	Board/RaspberryPi/include/mailbox.h	/^  uint32_t rate;$/;"	m	struct:PropertyGetMaxClockRate
rate	Board/RaspberryPi/include/mailbox.h	/^  uint32_t rate;$/;"	m	struct:PropertyGetMinClockRate
rate	Board/RaspberryPi/include/mailbox.h	/^  uint32_t rate;$/;"	m	struct:PropertySetClockRate
rbNode	Kernel/include/thread.h	/^  RBNode rbNode;$/;"	m	struct:Thread
rbTree	Kernel/include/percpu.h	/^  RBTree rbTree;$/;"	m	struct:PerCpu
rb_tree_init	Kernel/src/rbtree.c	/^RBTree *rb_tree_init(RBTree *tree) {$/;"	f
rbtree_default_get_max	Kernel/src/rbtree.c	/^RBNode *rbtree_default_get_max(RBTree *tree) {$/;"	f
rbtree_default_get_min	Kernel/src/rbtree.c	/^RBNode *rbtree_default_get_min(RBTree *tree) {$/;"	f
rbtree_default_insert	Kernel/src/rbtree.c	/^RBNode *rbtree_default_insert(RBTree *tree, RBNode *node) {$/;"	f
rbtree_default_remove	Kernel/src/rbtree.c	/^RBNode *rbtree_default_remove(RBTree *tree, RBNode *node) {$/;"	f
rbtree_insert	Kernel/src/rbtree.c	/^RBNode *rbtree_insert(RBNode *node1, RBNode *node2) {$/;"	f
readCount	Kernel/include/vfs_inode.h	/^  Atomic readCount;$/;"	m	struct:IndexNode
read_cntfrq	Board/RaspberryPi/src/timer.c	/^uint32_t read_cntfrq(void) {$/;"	f
read_cpuid	Kernel/Arch/arm/vmm/include/cache.h	/^static inline uint32_t read_cpuid(void) {$/;"	f
read_mmfr0	Kernel/Arch/arm/vmm/include/cache.h	/^static inline uint32_t read_mmfr0(void) {$/;"	f
read_ttbcr	Kernel/Arch/arm/vmm/include/cache.h	/^static inline uint32_t read_ttbcr(void) {$/;"	f
readonly	Kernel/include/type.h	/^#define readonly /;"	d
refCount	Kernel/include/vfs_dentry.h	/^  Atomic refCount;$/;"	m	struct:DirectoryEntry
ref_count	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t ref_count : 8;$/;"	m	struct:PhysicalPage
register_interrupt_handler	Kernel/src/interrupt.c	/^void register_interrupt_handler(uint32_t interrupt_no, void (*interrupt_handler_func)(void),$/;"	f
register_time_interrupt	Kernel/src/interrupt.c	/^void register_time_interrupt(TimerHandler *handler) {$/;"	f
registered	Kernel/src/interrupt.c	/^  uint32_t registered;$/;"	m	struct:irq_handler	file:
release	Kernel/include/spinlock.h	/^  SpinLockRelease release;$/;"	m	struct:SpinLockOperations
releaseOperation	Kernel/include/vfs_dentry.h	/^  DirectoryEntryReleaseOperation releaseOperation;$/;"	m	struct:DirectoryEntryOperations
releaseOperation	Kernel/include/vfs_inode.h	/^  IndexNodeReleaseOperation releaseOperation;$/;"	m	struct:IndexNodeOpeations
remove	Kernel/include/rbtree.h	/^  RbTreeRemoveNode remove;$/;"	m	struct:RBTreeOperations
removeThread	Kernel/include/percpu.h	/^  PerCpuRemoveThread removeThread;$/;"	m	struct:PerCpuOperations
renameOperation	Kernel/include/vfs_inode.h	/^  IndexNodeRenameOperation renameOperation;$/;"	m	struct:IndexNodeOpeations
reserved	Board/RaspberryPi/include/mailbox.h	/^  uint32_t reserved : 30;$/;"	m	struct:MailStatus
reserved	Board/RaspberryPi/include/timer.h	/^  uint32_t reserved : 28;$/;"	m	struct:__anon2
reserved	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t reserved : 8;$/;"	m	struct:PhysicalPage
reset_handler	Kernel/src/exception.S	/^reset_handler: $/;"	l
responseState	Board/RaspberryPi/include/mailbox.h	/^  uint32_t responseState;$/;"	m	struct:PropertyGetClockState
responseState	Board/RaspberryPi/include/mailbox.h	/^  uint32_t responseState;$/;"	m	struct:PropertySetPowerState
returnCode	Kernel/include/thread.h	/^  uint32_t returnCode;$/;"	m	struct:Thread
reverse	Libraries/LibC/src/stdlib.c	/^void reverse(char str[], int length) {$/;"	f
right	Board/RaspberryPi/include/mailbox.h	/^  uint32_t right;$/;"	m	struct:PropertyGetOverscan
right	Board/RaspberryPi/include/mailbox.h	/^  uint32_t right;$/;"	m	struct:PropertySetOverscan
right	Board/RaspberryPi/include/mailbox.h	/^  uint32_t right;$/;"	m	struct:PropertyTestOverscan
right	Kernel/include/rbtree.h	/^  struct RBNode *right;$/;"	m	struct:RBNode	typeref:struct:RBNode::RBNode
right	Libraries/LibGUI/include/gui_component.h	/^  uint32_t right;$/;"	m	struct:Margin
right	Libraries/LibGUI/include/gui_component.h	/^  uint32_t right;$/;"	m	struct:Padding
ro	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t ro : 1;   \/* Read-Only *\/$/;"	m	struct:PageTableEntry
rodataSectionAddr	Kernel/include/thread.h	/^  uint32_t rodataSectionAddr;$/;"	m	struct:VMMAssociatedSpace
root	Kernel/include/rbtree.h	/^  RBNode *root;$/;"	m	struct:RBTree
rootDirectoryEntry	Kernel/include/vfs_super_block.h	/^  struct DirectoryEntry *rootDirectoryEntry;$/;"	m	struct:SuperBlock	typeref:struct:SuperBlock::DirectoryEntry
rpiIRQController	Kernel/src/interrupt.c	/^static rpi_irq_controller_t *rpiIRQController = (rpi_irq_controller_t *)RPI_INTERRUPT_CONTROLLER_BASE;$/;"	v	file:
rpi_irq_controller_t	Kernel/include/interrupt.h	/^} rpi_irq_controller_t;$/;"	t	typeref:struct:__anon4
runtimVirtualNs	Kernel/include/thread.h	/^  uint32_t runtimVirtualNs;$/;"	m	struct:Thread
runtimeNs	Kernel/include/thread.h	/^  uint32_t runtimeNs;$/;"	m	struct:Thread
sbz	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t sbz : 12;  \/* Must be zero *\/$/;"	m	struct:PageTableEntry
schd_add_thread	Kernel/src/sched.c	/^KernelStatus schd_add_thread(Thread *thread, uint32_t priority) {$/;"	f
schd_block	Kernel/src/sched.c	/^KernelStatus schd_block(void) {$/;"	f
schd_getpid	Kernel/src/sched.c	/^uint32_t schd_getpid() { return currentThread->pid; }$/;"	f
schd_init	Kernel/src/sched.c	/^KernelStatus schd_init() {$/;"	f
schd_preempt	Kernel/src/sched.c	/^KernelStatus schd_preempt(void) {$/;"	f
schd_schedule	Kernel/src/sched.c	/^KernelStatus schd_schedule(void) {$/;"	f
schd_switch_next	Kernel/src/sched.c	/^KernelStatus schd_switch_next(void) {$/;"	f
schd_switch_to	Kernel/src/sched.c	/^KernelStatus schd_switch_to(Thread *thread) {$/;"	f
schd_yield	Kernel/src/sched.c	/^KernelStatus schd_yield(void) {$/;"	f
semphore_create	Kernel/src/semphore.c	/^void semphore_create(Semphore *semphore, Atomic *atomic, uint32_t count) {$/;"	f
semphore_post	Kernel/src/semphore.c	/^uint32_t semphore_post(Semphore *semphore) {$/;"	f
semphore_wait	Kernel/src/semphore.c	/^KernelStatus semphore_wait(Semphore *semphore) {$/;"	f
sh	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t sh : 2;   \/* Shareability *\/$/;"	m	struct:PageTableEntry
should_atomic_add	Tests/include/atomic_test.h	/^uint32_t should_atomic_add() {$/;"	f
should_atomic_create	Tests/include/atomic_test.h	/^void should_atomic_create(void) {$/;"	f
should_atomic_dec	Tests/include/atomic_test.h	/^uint32_t should_atomic_dec() {$/;"	f
should_atomic_get	Tests/include/atomic_test.h	/^uint32_t should_atomic_get(void) {$/;"	f
should_atomic_inc	Tests/include/atomic_test.h	/^uint32_t should_atomic_inc() {$/;"	f
should_atomic_set	Tests/include/atomic_test.h	/^void should_atomic_set(void) {$/;"	f
should_atomic_sub	Tests/include/atomic_test.h	/^uint32_t should_atomic_sub() {$/;"	f
should_kheap_alloc	Tests/include/kheap_test.h	/^void should_kheap_alloc() {$/;"	f
should_kheap_calloc	Tests/include/kheap_test.h	/^void should_kheap_calloc() {$/;"	f
should_kheap_free	Tests/include/kheap_test.h	/^void should_kheap_free() {$/;"	f
should_kheap_init	Tests/include/kheap_test.h	/^void should_kheap_init() {$/;"	f
should_kheap_realloc	Tests/include/kheap_test.h	/^void should_kheap_realloc() {$/;"	f
should_klist_append	Tests/include/klist_test.h	/^void should_klist_append() {$/;"	f
should_klist_insert	Tests/include/klist_test.h	/^void should_klist_insert() {$/;"	f
should_klist_remove_node	Tests/include/klist_test.h	/^void should_klist_remove_node() {$/;"	f
should_klist_return_size	Tests/include/klist_test.h	/^void should_klist_return_size() {$/;"	f
should_kstack_create	Tests/include/kstack_test.h	/^void should_kstack_create() {$/;"	f
should_kstack_peek_value	Tests/include/kstack_test.h	/^void should_kstack_peek_value() {$/;"	f
should_kstack_pop_value	Tests/include/kstack_test.h	/^void should_kstack_pop_value() {$/;"	f
should_kstack_push_value	Tests/include/kstack_test.h	/^void should_kstack_push_value() {$/;"	f
should_kstack_return_true_when_empty	Tests/include/kstack_test.h	/^void should_kstack_return_true_when_empty() {$/;"	f
should_kstack_return_true_when_full	Tests/include/kstack_test.h	/^void should_kstack_return_true_when_full() {$/;"	f
should_kvector_add	Tests/include/kvector_test.h	/^void should_kvector_add() {$/;"	f
should_kvector_clear	Tests/include/kvector_test.h	/^void should_kvector_clear() {$/;"	f
should_kvector_create	Tests/include/kvector_test.h	/^void should_kvector_create() {$/;"	f
should_kvector_free	Tests/include/kvector_test.h	/^void should_kvector_free() {$/;"	f
should_kvector_get	Tests/include/kvector_test.h	/^void should_kvector_get() {$/;"	f
should_kvector_is_empty	Tests/include/kvector_test.h	/^void should_kvector_is_empty() {$/;"	f
should_kvector_is_full	Tests/include/kvector_test.h	/^void should_kvector_is_full() {$/;"	f
should_kvector_remove	Tests/include/kvector_test.h	/^void should_kvector_remove() {$/;"	f
should_kvector_remove_index	Tests/include/kvector_test.h	/^void should_kvector_remove_index() {$/;"	f
should_kvector_resize	Tests/include/kvector_test.h	/^void should_kvector_resize() {$/;"	f
should_math_cosf	Tests/include/libmath_test.h	/^void should_math_cosf() {$/;"	f
should_math_fmod	Tests/include/libmath_test.h	/^void should_math_fmod() {$/;"	f
should_math_powf	Tests/include/libmath_test.h	/^void should_math_powf() {$/;"	f
should_math_sinf	Tests/include/libmath_test.h	/^void should_math_sinf() {$/;"	f
signals	Kernel/include/thread.h	/^  uint32_t signals;$/;"	m	struct:Thread
sinf	Libraries/LibMath/src/math.c	/^float sinf(float x) { return __builtin_sinf(x); }$/;"	f
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyAllocateBuffer
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyAllocateBufferMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyAllocateMemory
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyAllocateMemoryMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyBlankScreenMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyExecuteCodeMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetAlphaModeMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetArmMemory
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetArmMemoryMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetBoardMacAddressMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetBoardModelMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetBoardRevisionMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetBoardSerialMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetClockRateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetClockStateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetClocksMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetCommandLineMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetDMAChannelsMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetDepthMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetDispmanxResourceMemHandleMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetEDIDBlockMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetFirmwareRevisionMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetMaxClockRateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetMaxTemperatureMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetMaxVoltageMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetMinClockRateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetMinVoltageMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetOverscanMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetPaletteMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetPhysicalDisplayWHMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetPitchMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetPixelOrderMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetPowerStateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetTemperatureMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetTimingMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetTurboMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetVideoCoreMemory
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetVideoCoreMemoryMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetVirtualBufferWHMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetVirtualOffsetMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyGetVoltageMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyLockMemoryMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyReleaseBufferMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyReleaseMemoryMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetAlphaModeMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetClockRateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetClockStateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetCursorInfoMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetCursorStateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetDepthMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetOverscanMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetPaletteMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetPhysicalDisplayWHMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetPixelOrderMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetPowerStateMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetTurboMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetVirtualBufferWHMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetVirtualOffsetMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertySetVoltageMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyTestAlphaModeMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyTestDepthMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyTestOverscanMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyTestPaletteMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyTestPhysicalDisplayWHMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyTestPixelOrderMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyTestVirtualBufferWHMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyTestVirtualOffsetMail
size	Board/RaspberryPi/include/mailbox.h	/^  uint32_t size;$/;"	m	struct:PropertyUnLockMemoryMail
size	Kernel/include/kheap.h	/^  uint32_t size;$/;"	m	struct:HeapArea
size	Kernel/include/kstack.h	/^  uint32_t size;$/;"	m	struct:KernelStack
size	Kernel/include/kvector.h	/^  uint32_t size;$/;"	m	struct:KernelVector
size	Libraries/LibGUI/include/gui_component.h	/^  Size size;$/;"	m	struct:GUIComponent
skipSettingTurbo	Board/RaspberryPi/include/mailbox.h	/^  uint32_t skipSettingTurbo;$/;"	m	struct:PropertySetClockRate
sl	Kernel/include/thread.h	/^  uint32_t sl;$/;"	m	struct:CpuContextSave
software_insterupt_isp	Kernel/src/exception.S	/^software_insterupt_isp:$/;"	l
software_interrupt_handler	Kernel/src/interrupt.c	/^int software_interrupt_handler() {$/;"	f
sp	Kernel/include/thread.h	/^  uint32_t sp;$/;"	m	struct:CpuContextSave
speedX	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t speedX;$/;"	m	struct:GUIAnimationTranslation
speedY	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t speedY;$/;"	m	struct:GUIAnimationTranslation
spinlock	Kernel/src/sched.c	/^SpinLockCreate(spinlock);$/;"	v
spinlock_default_acquire	Kernel/src/spinlock.c	/^void spinlock_default_acquire(SpinLock *spinLock) {$/;"	f
spinlock_default_release	Kernel/src/spinlock.c	/^void spinlock_default_release(SpinLock *spinLock) {$/;"	f
spinlock_init	Kernel/src/spinlock.c	/^void spinlock_init(SpinLock *spinLock) {$/;"	f
stack	Kernel/include/thread.h	/^  KernelStack *stack;$/;"	m	struct:Thread
startAddress	Kernel/include/vfs_inode.h	/^  uint32_t startAddress;$/;"	m	struct:IndexNode
startTime	Kernel/include/thread.h	/^  uint64_t startTime;$/;"	m	struct:Thread
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertyBlankScreen
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertyGetAlphaMode
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertyGetPixelOrder
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertyGetPowerState
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertySetAlphaMode
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertySetClockState
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertySetPixelOrder
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertyTestAlphaMode
state	Board/RaspberryPi/include/mailbox.h	/^  uint32_t state;$/;"	m	struct:PropertyTestPixelOrder
state	Kernel/include/vfs_inode.h	/^  uint64_t state;$/;"	m	struct:IndexNode
status	Board/RaspberryPi/include/mailbox.h	/^  uint32_t status;$/;"	m	struct:PropertyGetEDIDBlock
status	Board/RaspberryPi/include/mailbox.h	/^  uint32_t status;$/;"	m	struct:PropertyReleaseMemory
status	Board/RaspberryPi/include/mailbox.h	/^  uint32_t status;$/;"	m	struct:PropertyUnLockMemory
status	Kernel/include/percpu.h	/^  CpuStatus status;$/;"	m	struct:PerCpu
strcpy	Libraries/LibC/src/string.c	/^char *strcpy(char *des, char *source) {$/;"	f
strlen	Libraries/LibC/src/string.c	/^uint32_t strlen(const char *str) {$/;"	f
superBlock	Kernel/include/vfs_dentry.h	/^  struct SuperBlock *superBlock;$/;"	m	struct:DirectoryEntry	typeref:struct:DirectoryEntry::SuperBlock
superBlock	Kernel/include/vfs_inode.h	/^  struct SuperBlock *superBlock;$/;"	m	struct:IndexNode	typeref:struct:IndexNode::SuperBlock
swi	Kernel/src/interrupt.c	/^void swi(uint32_t num) {$/;"	f
switch_thread_stack	Kernel/src/sched.c	/^uint32_t switch_thread_stack = 0;$/;"	v
switch_to_signal	Kernel/src/sched.c	/^uint32_t switch_to_signal = 0;$/;"	v
sys_call_table	Kernel/include/sys_call.h	/^SysCall sys_call_table[] = {sys_getpid};$/;"	v
sys_getpid	Kernel/src/sys_call.c	/^uint32_t sys_getpid(void) { return schd_getpid(); }/;"	f
sys_runtime_ms	Kernel/src/ktimer.c	/^uint64_t sys_runtime_ms = 0;$/;"	v
system_timer_init	Board/RaspberryPi/src/timer.c	/^void system_timer_init(void) { register_interrupt_handler(1, system_timer_irq_handler, system_timer_irq_clear); }$/;"	f
system_timer_irq_clear	Board/RaspberryPi/src/timer.c	/^void system_timer_irq_clear(void) { timer_regs->control.timer1_matched = 1; }$/;"	f
system_timer_irq_handler	Board/RaspberryPi/src/timer.c	/^void system_timer_irq_handler(void) {$/;"	f
t1	Tests/include/kvector_test.h	/^TestElement t1;$/;"	v
t2	Tests/include/kvector_test.h	/^TestElement t2;$/;"	v
table	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t table : 1; \/* == 1 in 4k map entries too *\/$/;"	m	struct:PageTableEntry
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyAllocateBuffer
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyAllocateMemory
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyBlankScreen
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyExecuteCode
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetAlphaMode
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetArmMemory
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetBoardMacAddress
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetBoardModel
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetBoardRevision
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetBoardSerial
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetClockRate
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetClockState
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetClocks
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetCommandLine
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetDMAChannels
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetDepth
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetDispmanxResourceMemHandle
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetEDIDBlock
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetFirmwareRevision
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetMaxClockRate
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetMaxTemperature
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetMaxVoltage
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetMinClockRate
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetMinVoltage
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetOverscan
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetPalette
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetPhysicalDisplayWH
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetPitch
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetPixelOrder
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetPowerState
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetTemperature
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetTiming
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetTurbo
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetVideoCoreMemory
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetVirtualBufferWH
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetVirtualOffset
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyGetVoltage
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyLockMemory
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyReleaseBuffer
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyReleaseMemory
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetAlphaMode
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetClockRate
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetClockState
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetCursorInfo
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetCursorState
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetDepth
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetOverscan
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetPalette
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetPhysicalDisplayWH
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetPixelOrder
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetPowerState
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetTurbo
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetVirtualBufferWH
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetVirtualOffset
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertySetVoltage
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyTestAlphaMode
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyTestDepth
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyTestOverscan
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyTestPalette
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyTestPhysicalDisplayWH
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyTestPixelOrder
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyTestVirtualBufferWH
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyTestVirtualOffset
tag	Board/RaspberryPi/include/mailbox.h	/^  uint32_t tag;$/;"	m	struct:PropertyUnLockMemory
tanf	Libraries/LibMath/src/math.c	/^float tanf(float angle) { return __builtin_sinf(angle) \/ __builtin_cosf(angle); }$/;"	f
targetX	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t targetX;$/;"	m	struct:GUIAnimationTranslation
targetY	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t targetY;$/;"	m	struct:GUIAnimationTranslation
temperatureId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t temperatureId;$/;"	m	struct:PropertyGetMaxTemperature
temperatureId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t temperatureId;$/;"	m	struct:PropertyGetTemperature
text	Libraries/LibGUI/include/gui_button.h	/^  char *text;$/;"	m	struct:GUIButton
text	Libraries/LibGUI/include/gui_label.h	/^  char *text;$/;"	m	struct:GUILabel
threadList	Kernel/include/thread.h	/^  ListNode threadList;$/;"	m	struct:Thread
threadReadyQueue	Kernel/include/thread.h	/^  KQueue threadReadyQueue;$/;"	m	struct:Thread
threadStatus	Kernel/include/thread.h	/^  ThreadStatus threadStatus;$/;"	m	struct:Thread
thread_alloc_pid	Kernel/src/thread.c	/^uint32_t thread_alloc_pid() {$/;"	f
thread_create	Kernel/src/thread.c	/^Thread *thread_create(const char *name, ThreadStartRoutine entry, void *arg, uint32_t priority) {$/;"	f
thread_create_idle_thread	Kernel/src/thread.c	/^Thread *thread_create_idle_thread(uint32_t cpuNum) {$/;"	f
thread_detach	Kernel/src/thread.c	/^KernelStatus thread_detach(Thread *thread) {$/;"	f
thread_exit	Kernel/src/thread.c	/^KernelStatus thread_exit(uint32_t returnCode) {$/;"	f
thread_free_pid	Kernel/src/thread.c	/^uint32_t thread_free_pid(uint32_t pid) {$/;"	f
thread_join	Kernel/src/thread.c	/^KernelStatus thread_join(Thread *thread, int *retcode, uint32_t deadline) {$/;"	f
thread_kill	Kernel/src/thread.c	/^KernelStatus thread_kill(Thread *thread) {$/;"	f
thread_reschedule	Kernel/src/thread.c	/^KernelStatus thread_reschedule(void) {$/;"	f
thread_sleep	Kernel/src/thread.c	/^KernelStatus thread_sleep(uint32_t deadline) {$/;"	f
tick	Kernel/src/sched.c	/^void tick() {$/;"	f
tickHandler	Kernel/src/sched.c	/^TimerHandler tickHandler;$/;"	v
time	Kernel/src/ktimer.c	/^  long time;$/;"	m	struct:KernelTimer	file:
time	Libraries/LibGUI/include/gui_animation.h	/^  uint32_t time;$/;"	m	struct:GUIAnimation
timer0	Board/RaspberryPi/include/timer.h	/^  uint32_t timer0;$/;"	m	struct:__anon3
timer0_matched	Board/RaspberryPi/include/timer.h	/^  uint8_t timer0_matched : 1;$/;"	m	struct:__anon2
timer1	Board/RaspberryPi/include/timer.h	/^  uint32_t timer1;$/;"	m	struct:__anon3
timer1_matched	Board/RaspberryPi/include/timer.h	/^  uint8_t timer1_matched : 1;$/;"	m	struct:__anon2
timer2	Board/RaspberryPi/include/timer.h	/^  uint32_t timer2;$/;"	m	struct:__anon3
timer2_matched	Board/RaspberryPi/include/timer.h	/^  uint8_t timer2_matched : 1;$/;"	m	struct:__anon2
timer3	Board/RaspberryPi/include/timer.h	/^  uint32_t timer3;$/;"	m	struct:__anon3
timer3_matched	Board/RaspberryPi/include/timer.h	/^  uint8_t timer3_matched : 1;$/;"	m	struct:__anon2
timerHandler	Kernel/src/interrupt.c	/^TimerHandler *timerHandler = nullptr;$/;"	v
timer_control_reg_t	Board/RaspberryPi/include/timer.h	/^} timer_control_reg_t;$/;"	t	typeref:struct:__anon2
timer_get_handler	Kernel/src/interrupt.c	/^TimerHandler *timer_get_handler(void) { return timerHandler; }$/;"	f
timer_interrupt_handler	Kernel/include/interrupt.h	/^  void (*timer_interrupt_handler)(void);$/;"	m	struct:TimerHandler
timer_registers_t	Board/RaspberryPi/include/timer.h	/^} timer_registers_t;$/;"	t	typeref:struct:__anon3
timer_regs	Board/RaspberryPi/src/timer.c	/^static timer_registers_t *timer_regs = (timer_registers_t *)SYSTEM_TIMER_BASE;$/;"	v	file:
timer_set	Board/RaspberryPi/src/timer.c	/^void timer_set(uint32_t usecs) { timer_regs->timer1 = timer_regs->counter_low + usecs; }$/;"	f
title	Libraries/LibGUI/include/gui_window.h	/^  char *title;$/;"	m	struct:GUIWindow
top	Board/RaspberryPi/include/mailbox.h	/^  uint32_t top;$/;"	m	struct:PropertyGetOverscan
top	Board/RaspberryPi/include/mailbox.h	/^  uint32_t top;$/;"	m	struct:PropertySetOverscan
top	Board/RaspberryPi/include/mailbox.h	/^  uint32_t top;$/;"	m	struct:PropertyTestOverscan
top	Kernel/include/kstack.h	/^  VirtualAddress top;$/;"	m	struct:KernelStack
top	Libraries/LibGUI/include/gui_component.h	/^  uint32_t top;$/;"	m	struct:Margin
top	Libraries/LibGUI/include/gui_component.h	/^  uint32_t top;$/;"	m	struct:Padding
tris	Libraries/LibGfx/include/gfx3d.h	/^  KernelVector tris;$/;"	m	struct:Mesh
type	Kernel/Arch/arm/vmm/include/page.h	/^  PhysicalPageType type : 8;$/;"	m	struct:PhysicalPage
type	Kernel/include/vfs_inode.h	/^  IndexNodeType type;$/;"	m	struct:IndexNode
type	Kernel/include/vfs_super_block.h	/^  FileSystemType type;$/;"	m	struct:SuperBlock
type	Libraries/LibGUI/include/gui_component.h	/^  ComponentType type;$/;"	m	struct:GUIComponent
u16	Board/RaspberryPi/include/led.h	/^typedef unsigned short     u16;$/;"	t
u32	Board/RaspberryPi/include/led.h	/^typedef unsigned int       u32;$/;"	t
u8	Board/RaspberryPi/include/led.h	/^typedef unsigned char      u8;$/;"	t
uart_init	Board/RaspberryPi/src/uart.c	/^void uart_init(void) {$/;"	f
uart_interrupt_handler	Board/RaspberryPi/src/uart.c	/^void uart_interrupt_handler(void) { uart_put_char(do_uart_get_char()); }$/;"	f
uart_put_char	Board/RaspberryPi/src/uart.c	/^void uart_put_char(uint8_t ch) {$/;"	f
uint16_t	Libraries/LibC/include/stdint.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	Libraries/LibC/include/stdint.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	Libraries/LibC/include/stdint.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	Libraries/LibC/include/stdint.h	/^typedef unsigned char uint8_t;$/;"	t
undefined_instruction_handler	Kernel/src/interrupt.c	/^void __attribute__((interrupt("UNDEF"))) undefined_instruction_handler(void) {}$/;"	f
unused	Board/RaspberryPi/include/mailbox.h	/^  uint32_t unused;$/;"	m	struct:PropertySetCursorInfo
unused_handler	Kernel/src/interrupt.c	/^void unused_handler(void) {}$/;"	f
usage	Kernel/Arch/arm/vmm/include/page.h	/^  PhysicalPageUsage usage : 8;$/;"	m	struct:PhysicalPage
user	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t user : 1; \/* User-visible *\/$/;"	m	struct:PageTableEntry
usingListHead	Kernel/src/kheap.c	/^HeapArea *usingListHead;$/;"	v
vCamera	Libraries/LibGUI/include/gui_view3d.h	/^  Vec3D vCamera;$/;"	m	struct:GUIView3D
vLookDir	Libraries/LibGUI/include/gui_view3d.h	/^  Vec3D vLookDir;$/;"	m	struct:GUIView3D
val	Kernel/include/mutex.h	/^  Atomic *val;$/;"	m	struct:Mutex
valid	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t valid : 1; \/* Valid mapping *\/$/;"	m	struct:PageTableEntry
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertyGetDispmanxResourceMemHandle
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertyGetMaxTemperature
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertyGetMaxVoltage
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertyGetMinVoltage
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertyGetTemperature
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertyGetVoltage
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertySetCursorInfo
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertySetCursorState
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertySetPalette
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertySetVoltage
value	Board/RaspberryPi/include/mailbox.h	/^  uint32_t value;$/;"	m	struct:PropertyTestPalette
vfs_create_super_block	Kernel/src/vfs_super_block.c	/^SuperBlock *vfs_create_super_block() {$/;"	f
vfs_directory_entry_default_delete	Kernel/src/vfs_dentry.c	/^KernelStatus vfs_directory_entry_default_delete(DirectoryEntry *directory) {$/;"	f
vfs_directory_entry_default_get_name	Kernel/src/vfs_dentry.c	/^char *vfs_directory_entry_default_get_name(DirectoryEntry *directoryEntry) {$/;"	f
vfs_directory_entry_default_hash	Kernel/src/vfs_dentry.c	/^uint64_t vfs_directory_entry_default_hash(DirectoryEntry *directoryEntry, const char *name) {$/;"	f
vfs_directory_entry_default_init	Kernel/src/vfs_dentry.c	/^KernelStatus vfs_directory_entry_default_init(DirectoryEntry *directory, DirectoryEntry *parent, IndexNode *inode) {$/;"	f
vfs_directory_entry_default_rename	Kernel/src/vfs_dentry.c	/^KernelStatus vfs_directory_entry_default_rename(DirectoryEntry *directory) {$/;"	f
vfs_init	Kernel/src/vfs.c	/^KernelStatus vfs_init() {$/;"	f
vfs_inode_default_create	Kernel/src/vfs_inode.c	/^KernelStatus vfs_inode_default_create(IndexNode *indexNode) {$/;"	f
vfs_inode_default_delete	Kernel/src/vfs_inode.c	/^KernelStatus vfs_inode_default_delete(IndexNode *indexNode) {$/;"	f
vfs_inode_default_hard_link	Kernel/src/vfs_inode.c	/^KernelStatus vfs_inode_default_hard_link(IndexNode *indexNode) {$/;"	f
vfs_inode_default_make_directory	Kernel/src/vfs_inode.c	/^KernelStatus vfs_inode_default_make_directory(IndexNode *indexNode) {$/;"	f
vfs_inode_default_release	Kernel/src/vfs_inode.c	/^KernelStatus vfs_inode_default_release(IndexNode *indexNode) {$/;"	f
vfs_inode_default_rename	Kernel/src/vfs_inode.c	/^KernelStatus vfs_inode_default_rename(IndexNode *indexNode) {$/;"	f
vfs_mount	Kernel/src/vfs.c	/^SuperBlock *vfs_mount(const char *name, FileSystemType type) {$/;"	f
vfs_super_block_default_create_directory_entry	Kernel/src/vfs_super_block.c	/^DirectoryEntry *vfs_super_block_default_create_directory_entry(struct SuperBlock *superBlock) {$/;"	f
vfs_super_block_default_create_index_node	Kernel/src/vfs_super_block.c	/^IndexNode *vfs_super_block_default_create_index_node(struct SuperBlock *superBlock) {$/;"	f
videoBuffer	Applications/Console/include/console.h	/^  char *videoBuffer;$/;"	m	struct:Console
virtualMemoryAddress	Kernel/include/kstack.h	/^  VirtualAddress *virtualMemoryAddress;$/;"	m	struct:KernelStack
visable	Libraries/LibGUI/include/gui_component.h	/^  bool visable;$/;"	m	struct:GUIComponent
vmmSpace	Kernel/include/thread.h	/^  VMMAssociatedSpace vmmSpace;$/;"	m	struct:Thread
vmm_enable	Kernel/Arch/arm/vmm/src/vmm.c	/^void vmm_enable() {$/;"	f
vmm_init	Kernel/Arch/arm/vmm/src/vmm.c	/^void vmm_init() {$/;"	f
voltageId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t voltageId;$/;"	m	struct:PropertyGetMaxVoltage
voltageId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t voltageId;$/;"	m	struct:PropertyGetMinVoltage
voltageId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t voltageId;$/;"	m	struct:PropertyGetVoltage
voltageId	Board/RaspberryPi/include/mailbox.h	/^  uint32_t voltageId;$/;"	m	struct:PropertySetVoltage
w	Libraries/LibGfx/include/gfxm.h	/^  float w;$/;"	m	struct:Vec3D
waitQueue	Kernel/include/mutex.h	/^  KQueue *waitQueue;$/;"	m	struct:Mutex
waitQueue	Kernel/include/semphore.h	/^  KQueue *waitQueue;$/;"	m	struct:Semphore
waitThreadQueue	Kernel/include/percpu.h	/^  KQueue waitThreadQueue;$/;"	m	struct:PerCpu
waitTime	Board/RaspberryPi/include/mailbox.h	/^  uint32_t waitTime;$/;"	m	struct:PropertyGetTiming
width	Applications/Console/include/console.h	/^  uint32_t width;$/;"	m	struct:Console
width	Board/RaspberryPi/include/mailbox.h	/^  uint32_t width;$/;"	m	struct:PropertyGetPhysicalDisplayWH
width	Board/RaspberryPi/include/mailbox.h	/^  uint32_t width;$/;"	m	struct:PropertyGetVirtualBufferWH
width	Board/RaspberryPi/include/mailbox.h	/^  uint32_t width;$/;"	m	struct:PropertySetCursorInfo
width	Board/RaspberryPi/include/mailbox.h	/^  uint32_t width;$/;"	m	struct:PropertySetPhysicalDisplayWH
width	Board/RaspberryPi/include/mailbox.h	/^  uint32_t width;$/;"	m	struct:PropertySetVirtualBufferWH
width	Board/RaspberryPi/include/mailbox.h	/^  uint32_t width;$/;"	m	struct:PropertyTestPhysicalDisplayWH
width	Board/RaspberryPi/include/mailbox.h	/^  uint32_t width;$/;"	m	struct:PropertyTestVirtualBufferWH
width	Libraries/LibGUI/include/gui_component.h	/^  uint32_t width;$/;"	m	struct:Size
width	Libraries/LibGfx/include/gfx2d.h	/^  uint32_t width;$/;"	m	struct:Gfx2DContext
winApp16Bits	Libraries/LibGfx/src/font8bits.c	/^static const uint16_t winApp16Bits[16] = {$/;"	v	file:
winClose16Bits	Libraries/LibGfx/src/font8bits.c	/^static const uint16_t winClose16Bits[16] = {$/;"	v	file:
winMax16Bits	Libraries/LibGfx/src/font8bits.c	/^static const uint16_t winMax16Bits[16] = {$/;"	v	file:
winMin16Bits	Libraries/LibGfx/src/font8bits.c	/^static const uint16_t winMin16Bits[16] = {$/;"	v	file:
win_app_16_bits	Libraries/LibGfx/src/font8bits.c	/^uint16_t *win_app_16_bits() { return (uint16_t *)winApp16Bits; }$/;"	f
win_close_16_bits	Libraries/LibGfx/src/font8bits.c	/^uint16_t *win_close_16_bits() { return (uint16_t *)winClose16Bits; }$/;"	f
win_max_16_bits	Libraries/LibGfx/src/font8bits.c	/^uint16_t *win_max_16_bits() { return (uint16_t *)winMax16Bits; }$/;"	f
win_min_16_bits	Libraries/LibGfx/src/font8bits.c	/^uint16_t *win_min_16_bits() { return (uint16_t *)winMin16Bits; }$/;"	f
window_thread1	Kernel/src/init.c	/^uint32_t *window_thread1(int args) {$/;"	f
window_thread2	Kernel/src/init.c	/^uint32_t *window_thread2(int args) {$/;"	f
window_thread3	Kernel/src/init.c	/^uint32_t *window_thread3(int args) {$/;"	f
window_thread4	Kernel/src/init.c	/^uint32_t *window_thread4(int args) {$/;"	f
window_thread5	Kernel/src/init.c	/^uint32_t *window_thread5(int args) {$/;"	f
write_cntvtval	Board/RaspberryPi/src/timer.c	/^void write_cntvtval(uint32_t value) { asm volatile("mcr p15, 0, %0, c14, c3, 0" ::"r"(value)); }$/;"	f
write_dacr	Kernel/Arch/arm/vmm/include/cache.h	/^static inline void write_dacr(uint32_t val) { asm volatile("mcr p15, 0, %0, c3, c0, 0" : : "r"(val)); }$/;"	f
write_ttbcr	Kernel/Arch/arm/vmm/include/cache.h	/^static inline void write_ttbcr(uint32_t val) { asm volatile("mcr p15, 0, %0, c2, c0, 2" : : "r"(val) : "memory"); }$/;"	f
write_ttbr0	Kernel/Arch/arm/vmm/include/cache.h	/^static inline void write_ttbr0(uint32_t val) {$/;"	f
x	Board/RaspberryPi/include/mailbox.h	/^  uint32_t x;$/;"	m	struct:PropertySetCursorState
x	Libraries/LibGUI/include/gui_component.h	/^  uint32_t x;$/;"	m	struct:Position
x	Libraries/LibGfx/include/gfxm.h	/^  float x;$/;"	m	struct:Vec3D
xOffset	Board/RaspberryPi/include/mailbox.h	/^  uint32_t xOffset;$/;"	m	struct:PropertyGetVirtualOffset
xOffset	Board/RaspberryPi/include/mailbox.h	/^  uint32_t xOffset;$/;"	m	struct:PropertySetVirtualOffset
xOffset	Board/RaspberryPi/include/mailbox.h	/^  uint32_t xOffset;$/;"	m	struct:PropertyTestVirtualOffset
xn	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t xn : 1;    \/* eXecute-Never *\/$/;"	m	struct:PageTableEntry
xnt	Kernel/Arch/arm/vmm/include/page.h	/^  uint64_t xnt : 1;  \/* eXecute-Never *\/$/;"	m	struct:PageTableEntry
y	Board/RaspberryPi/include/mailbox.h	/^  uint32_t y;$/;"	m	struct:PropertySetCursorState
y	Libraries/LibGUI/include/gui_component.h	/^  uint32_t y;$/;"	m	struct:Position
y	Libraries/LibGfx/include/gfxm.h	/^  float y;$/;"	m	struct:Vec3D
yOffset	Board/RaspberryPi/include/mailbox.h	/^  uint32_t yOffset;$/;"	m	struct:PropertyGetVirtualOffset
yOffset	Board/RaspberryPi/include/mailbox.h	/^  uint32_t yOffset;$/;"	m	struct:PropertySetVirtualOffset
yOffset	Board/RaspberryPi/include/mailbox.h	/^  uint32_t yOffset;$/;"	m	struct:PropertyTestVirtualOffset
z	Libraries/LibGfx/include/gfxm.h	/^  float z;$/;"	m	struct:Vec3D
